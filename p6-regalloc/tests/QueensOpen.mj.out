	.data
	.balign 8
QueensOpen.Queens:
	.quad QueensOpen.Init
	.quad QueensOpen.Solve
PROCEDURE QueensOpen.Init
# Trees:
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.0,
    TEMP QueensOpen.Init.self),
   BEQ(
    TEMP t.0,
    CONST 0,
    QueensOpen.Init.badPtr, L.1),
   LABEL L.1,
   TEMP t.0), 
  CONST 0, 8, false, false),
 ESEQ(
  MOVE(
   TEMP t.1,
   CONST 8),
  BLT(
   TEMP t.1,
   CONST 0,
   QueensOpen.Init.badSub, L.2),
  LABEL L.2,
  MOVE(
   TEMP t.2,
   TEMP t.1),
  MOVE(
   TEMP t.3,
   CONST 16),
  MOVE(
   TEMP t.3,
   ADD(
    TEMP t.3,
    MUL(
     TEMP t.2,
     CONST 8))),
  MOVE(
   TEMP t.4,
   CALL(
    NAME malloc,
    CONST 0,
    TEMP t.3)),
  MOVE(
   MEM(
    TEMP t.4, 
    CONST 0, 8, false, false),
   ADD(
    TEMP t.4,
    CONST 16)),
  MOVE(
   MEM(
    TEMP t.4, 
    CONST 8, 8, false, false),
   TEMP t.1),
  MOVE(
   TEMP t.6,
   MEM(
    TEMP t.4, 
    CONST 8, 8, false, false)),
  MOVE(
   TEMP t.7,
   MEM(
    TEMP t.4, 
    CONST 0, 8, false, false)),
  MOVE(
   TEMP t.5,
   CONST 0),
  BGE(
   TEMP t.5,
   TEMP t.6,
   L.5, L.3),
  LABEL L.3,
  MOVE(
   MEM(
    ADD(
     TEMP t.7,
     MUL(
      TEMP t.5,
      CONST 8)), 
    CONST 0, 8, true, false),
   CONST 0),
  MOVE(
   TEMP t.5,
   ADD(
    TEMP t.5,
    CONST 1)),
  LABEL L.4,
  BLT(
   TEMP t.5,
   TEMP t.6,
   L.3, L.5),
  LABEL L.5,
  TEMP t.4)),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.8,
    TEMP QueensOpen.Init.self),
   BEQ(
    TEMP t.8,
    CONST 0,
    QueensOpen.Init.badPtr, L.6),
   LABEL L.6,
   TEMP t.8), 
  CONST 8, 8, false, false),
 ESEQ(
  MOVE(
   TEMP t.9,
   CONST 8),
  BLT(
   TEMP t.9,
   CONST 0,
   QueensOpen.Init.badSub, L.7),
  LABEL L.7,
  MOVE(
   TEMP t.10,
   TEMP t.9),
  MOVE(
   TEMP t.11,
   CONST 16),
  MOVE(
   TEMP t.11,
   ADD(
    TEMP t.11,
    MUL(
     TEMP t.10,
     CONST 8))),
  MOVE(
   TEMP t.12,
   CALL(
    NAME malloc,
    CONST 0,
    TEMP t.11)),
  MOVE(
   MEM(
    TEMP t.12, 
    CONST 0, 8, false, false),
   ADD(
    TEMP t.12,
    CONST 16)),
  MOVE(
   MEM(
    TEMP t.12, 
    CONST 8, 8, false, false),
   TEMP t.9),
  MOVE(
   TEMP t.14,
   MEM(
    TEMP t.12, 
    CONST 8, 8, false, false)),
  MOVE(
   TEMP t.15,
   MEM(
    TEMP t.12, 
    CONST 0, 8, false, false)),
  MOVE(
   TEMP t.13,
   CONST 0),
  BGE(
   TEMP t.13,
   TEMP t.14,
   L.10, L.8),
  LABEL L.8,
  MOVE(
   MEM(
    ADD(
     TEMP t.15,
     MUL(
      TEMP t.13,
      CONST 8)), 
    CONST 0, 8, true, false),
   CONST 0),
  MOVE(
   TEMP t.13,
   ADD(
    TEMP t.13,
    CONST 1)),
  LABEL L.9,
  BLT(
   TEMP t.13,
   TEMP t.14,
   L.8, L.10),
  LABEL L.10,
  TEMP t.12)),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.16,
    TEMP QueensOpen.Init.self),
   BEQ(
    TEMP t.16,
    CONST 0,
    QueensOpen.Init.badPtr, L.11),
   LABEL L.11,
   TEMP t.16), 
  CONST 16, 8, false, false),
 ESEQ(
  MOVE(
   TEMP t.17,
   SUB(
    ADD(
     CONST 8,
     CONST 8),
    CONST 1)),
  BLT(
   TEMP t.17,
   CONST 0,
   QueensOpen.Init.badSub, L.12),
  LABEL L.12,
  MOVE(
   TEMP t.18,
   TEMP t.17),
  MOVE(
   TEMP t.19,
   CONST 16),
  MOVE(
   TEMP t.19,
   ADD(
    TEMP t.19,
    MUL(
     TEMP t.18,
     CONST 8))),
  MOVE(
   TEMP t.20,
   CALL(
    NAME malloc,
    CONST 0,
    TEMP t.19)),
  MOVE(
   MEM(
    TEMP t.20, 
    CONST 0, 8, false, false),
   ADD(
    TEMP t.20,
    CONST 16)),
  MOVE(
   MEM(
    TEMP t.20, 
    CONST 8, 8, false, false),
   TEMP t.17),
  MOVE(
   TEMP t.22,
   MEM(
    TEMP t.20, 
    CONST 8, 8, false, false)),
  MOVE(
   TEMP t.23,
   MEM(
    TEMP t.20, 
    CONST 0, 8, false, false)),
  MOVE(
   TEMP t.21,
   CONST 0),
  BGE(
   TEMP t.21,
   TEMP t.22,
   L.15, L.13),
  LABEL L.13,
  MOVE(
   MEM(
    ADD(
     TEMP t.23,
     MUL(
      TEMP t.21,
      CONST 8)), 
    CONST 0, 8, true, false),
   CONST 0),
  MOVE(
   TEMP t.21,
   ADD(
    TEMP t.21,
    CONST 1)),
  LABEL L.14,
  BLT(
   TEMP t.21,
   TEMP t.22,
   L.13, L.15),
  LABEL L.15,
  TEMP t.20)),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.24,
    TEMP QueensOpen.Init.self),
   BEQ(
    TEMP t.24,
    CONST 0,
    QueensOpen.Init.badPtr, L.16),
   LABEL L.16,
   TEMP t.24), 
  CONST 24, 8, false, false),
 ESEQ(
  MOVE(
   TEMP t.25,
   SUB(
    ADD(
     CONST 8,
     CONST 8),
    CONST 1)),
  BLT(
   TEMP t.25,
   CONST 0,
   QueensOpen.Init.badSub, L.17),
  LABEL L.17,
  MOVE(
   TEMP t.26,
   TEMP t.25),
  MOVE(
   TEMP t.27,
   CONST 16),
  MOVE(
   TEMP t.27,
   ADD(
    TEMP t.27,
    MUL(
     TEMP t.26,
     CONST 8))),
  MOVE(
   TEMP t.28,
   CALL(
    NAME malloc,
    CONST 0,
    TEMP t.27)),
  MOVE(
   MEM(
    TEMP t.28, 
    CONST 0, 8, false, false),
   ADD(
    TEMP t.28,
    CONST 16)),
  MOVE(
   MEM(
    TEMP t.28, 
    CONST 8, 8, false, false),
   TEMP t.25),
  MOVE(
   TEMP t.30,
   MEM(
    TEMP t.28, 
    CONST 8, 8, false, false)),
  MOVE(
   TEMP t.31,
   MEM(
    TEMP t.28, 
    CONST 0, 8, false, false)),
  MOVE(
   TEMP t.29,
   CONST 0),
  BGE(
   TEMP t.29,
   TEMP t.30,
   L.20, L.18),
  LABEL L.18,
  MOVE(
   MEM(
    ADD(
     TEMP t.31,
     MUL(
      TEMP t.29,
      CONST 8)), 
    CONST 0, 8, true, false),
   CONST 0),
  MOVE(
   TEMP t.29,
   ADD(
    TEMP t.29,
    CONST 1)),
  LABEL L.19,
  BLT(
   TEMP t.29,
   TEMP t.30,
   L.18, L.20),
  LABEL L.20,
  TEMP t.28)),
MOVE(
 TEMP %rax,
 TEMP QueensOpen.Init.self),
JUMP(
 NAME L.0),
LABEL L.0
# Linearized (trees):
MOVE(
 TEMP t.0,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.0,
 CONST 0,
 QueensOpen.Init.badPtr, L.1)
LABEL L.1
MOVE(
 TEMP t.1,
 CONST 8)
BLT(
 TEMP t.1,
 CONST 0,
 QueensOpen.Init.badSub, L.2)
LABEL L.2
MOVE(
 TEMP t.2,
 TEMP t.1)
MOVE(
 TEMP t.3,
 CONST 16)
MOVE(
 TEMP t.3,
 ADD(
  TEMP t.3,
  MUL(
   TEMP t.2,
   CONST 8)))
MOVE(
 TEMP t.4,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.3))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.4,
  CONST 16))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false),
 TEMP t.1)
MOVE(
 TEMP t.6,
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.7,
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.5,
 CONST 0)
BGE(
 TEMP t.5,
 TEMP t.6,
 L.5, L.3)
LABEL L.3
MOVE(
 MEM(
  ADD(
   TEMP t.7,
   MUL(
    TEMP t.5,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.5,
 ADD(
  TEMP t.5,
  CONST 1))
LABEL L.4
BLT(
 TEMP t.5,
 TEMP t.6,
 L.3, L.5)
LABEL L.5
MOVE(
 MEM(
  TEMP t.0, 
  CONST 0, 8, false, false),
 TEMP t.4)
MOVE(
 TEMP t.8,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.8,
 CONST 0,
 QueensOpen.Init.badPtr, L.6)
LABEL L.6
MOVE(
 TEMP t.9,
 CONST 8)
BLT(
 TEMP t.9,
 CONST 0,
 QueensOpen.Init.badSub, L.7)
LABEL L.7
MOVE(
 TEMP t.10,
 TEMP t.9)
MOVE(
 TEMP t.11,
 CONST 16)
MOVE(
 TEMP t.11,
 ADD(
  TEMP t.11,
  MUL(
   TEMP t.10,
   CONST 8)))
MOVE(
 TEMP t.12,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.11))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.12,
  CONST 16))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false),
 TEMP t.9)
MOVE(
 TEMP t.14,
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.15,
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.13,
 CONST 0)
BGE(
 TEMP t.13,
 TEMP t.14,
 L.10, L.8)
LABEL L.8
MOVE(
 MEM(
  ADD(
   TEMP t.15,
   MUL(
    TEMP t.13,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.13,
 ADD(
  TEMP t.13,
  CONST 1))
LABEL L.9
BLT(
 TEMP t.13,
 TEMP t.14,
 L.8, L.10)
LABEL L.10
MOVE(
 MEM(
  TEMP t.8, 
  CONST 8, 8, false, false),
 TEMP t.12)
MOVE(
 TEMP t.16,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.16,
 CONST 0,
 QueensOpen.Init.badPtr, L.11)
LABEL L.11
MOVE(
 TEMP t.17,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.17,
 CONST 0,
 QueensOpen.Init.badSub, L.12)
LABEL L.12
MOVE(
 TEMP t.18,
 TEMP t.17)
MOVE(
 TEMP t.19,
 CONST 16)
MOVE(
 TEMP t.19,
 ADD(
  TEMP t.19,
  MUL(
   TEMP t.18,
   CONST 8)))
MOVE(
 TEMP t.20,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.19))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.20,
  CONST 16))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false),
 TEMP t.17)
MOVE(
 TEMP t.22,
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.23,
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.21,
 CONST 0)
BGE(
 TEMP t.21,
 TEMP t.22,
 L.15, L.13)
LABEL L.13
MOVE(
 MEM(
  ADD(
   TEMP t.23,
   MUL(
    TEMP t.21,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.21,
 ADD(
  TEMP t.21,
  CONST 1))
LABEL L.14
BLT(
 TEMP t.21,
 TEMP t.22,
 L.13, L.15)
LABEL L.15
MOVE(
 MEM(
  TEMP t.16, 
  CONST 16, 8, false, false),
 TEMP t.20)
MOVE(
 TEMP t.24,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.24,
 CONST 0,
 QueensOpen.Init.badPtr, L.16)
LABEL L.16
MOVE(
 TEMP t.25,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.25,
 CONST 0,
 QueensOpen.Init.badSub, L.17)
LABEL L.17
MOVE(
 TEMP t.26,
 TEMP t.25)
MOVE(
 TEMP t.27,
 CONST 16)
MOVE(
 TEMP t.27,
 ADD(
  TEMP t.27,
  MUL(
   TEMP t.26,
   CONST 8)))
MOVE(
 TEMP t.28,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.27))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.28,
  CONST 16))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false),
 TEMP t.25)
MOVE(
 TEMP t.30,
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.31,
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.29,
 CONST 0)
BGE(
 TEMP t.29,
 TEMP t.30,
 L.20, L.18)
LABEL L.18
MOVE(
 MEM(
  ADD(
   TEMP t.31,
   MUL(
    TEMP t.29,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.29,
 ADD(
  TEMP t.29,
  CONST 1))
LABEL L.19
BLT(
 TEMP t.29,
 TEMP t.30,
 L.18, L.20)
LABEL L.20
MOVE(
 MEM(
  TEMP t.24, 
  CONST 24, 8, false, false),
 TEMP t.28)
MOVE(
 TEMP %rax,
 TEMP QueensOpen.Init.self)
JUMP(
 NAME L.0)
LABEL L.0
# Basic Blocks:
# 0
LABEL L.94
MOVE(
 TEMP t.0,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.0,
 CONST 0,
 QueensOpen.Init.badPtr, L.1)
# 1
LABEL L.1
MOVE(
 TEMP t.1,
 CONST 8)
BLT(
 TEMP t.1,
 CONST 0,
 QueensOpen.Init.badSub, L.2)
# 2
LABEL L.2
MOVE(
 TEMP t.2,
 TEMP t.1)
MOVE(
 TEMP t.3,
 CONST 16)
MOVE(
 TEMP t.3,
 ADD(
  TEMP t.3,
  MUL(
   TEMP t.2,
   CONST 8)))
MOVE(
 TEMP t.4,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.3))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.4,
  CONST 16))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false),
 TEMP t.1)
MOVE(
 TEMP t.6,
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.7,
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.5,
 CONST 0)
BGE(
 TEMP t.5,
 TEMP t.6,
 L.5, L.3)
# 3
LABEL L.3
MOVE(
 MEM(
  ADD(
   TEMP t.7,
   MUL(
    TEMP t.5,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.5,
 ADD(
  TEMP t.5,
  CONST 1))
JUMP(
 NAME L.4)
# 4
LABEL L.4
BLT(
 TEMP t.5,
 TEMP t.6,
 L.3, L.5)
# 5
LABEL L.5
MOVE(
 MEM(
  TEMP t.0, 
  CONST 0, 8, false, false),
 TEMP t.4)
MOVE(
 TEMP t.8,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.8,
 CONST 0,
 QueensOpen.Init.badPtr, L.6)
# 6
LABEL L.6
MOVE(
 TEMP t.9,
 CONST 8)
BLT(
 TEMP t.9,
 CONST 0,
 QueensOpen.Init.badSub, L.7)
# 7
LABEL L.7
MOVE(
 TEMP t.10,
 TEMP t.9)
MOVE(
 TEMP t.11,
 CONST 16)
MOVE(
 TEMP t.11,
 ADD(
  TEMP t.11,
  MUL(
   TEMP t.10,
   CONST 8)))
MOVE(
 TEMP t.12,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.11))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.12,
  CONST 16))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false),
 TEMP t.9)
MOVE(
 TEMP t.14,
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.15,
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.13,
 CONST 0)
BGE(
 TEMP t.13,
 TEMP t.14,
 L.10, L.8)
# 8
LABEL L.8
MOVE(
 MEM(
  ADD(
   TEMP t.15,
   MUL(
    TEMP t.13,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.13,
 ADD(
  TEMP t.13,
  CONST 1))
JUMP(
 NAME L.9)
# 9
LABEL L.9
BLT(
 TEMP t.13,
 TEMP t.14,
 L.8, L.10)
# 10
LABEL L.10
MOVE(
 MEM(
  TEMP t.8, 
  CONST 8, 8, false, false),
 TEMP t.12)
MOVE(
 TEMP t.16,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.16,
 CONST 0,
 QueensOpen.Init.badPtr, L.11)
# 11
LABEL L.11
MOVE(
 TEMP t.17,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.17,
 CONST 0,
 QueensOpen.Init.badSub, L.12)
# 12
LABEL L.12
MOVE(
 TEMP t.18,
 TEMP t.17)
MOVE(
 TEMP t.19,
 CONST 16)
MOVE(
 TEMP t.19,
 ADD(
  TEMP t.19,
  MUL(
   TEMP t.18,
   CONST 8)))
MOVE(
 TEMP t.20,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.19))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.20,
  CONST 16))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false),
 TEMP t.17)
MOVE(
 TEMP t.22,
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.23,
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.21,
 CONST 0)
BGE(
 TEMP t.21,
 TEMP t.22,
 L.15, L.13)
# 13
LABEL L.13
MOVE(
 MEM(
  ADD(
   TEMP t.23,
   MUL(
    TEMP t.21,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.21,
 ADD(
  TEMP t.21,
  CONST 1))
JUMP(
 NAME L.14)
# 14
LABEL L.14
BLT(
 TEMP t.21,
 TEMP t.22,
 L.13, L.15)
# 15
LABEL L.15
MOVE(
 MEM(
  TEMP t.16, 
  CONST 16, 8, false, false),
 TEMP t.20)
MOVE(
 TEMP t.24,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.24,
 CONST 0,
 QueensOpen.Init.badPtr, L.16)
# 16
LABEL L.16
MOVE(
 TEMP t.25,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.25,
 CONST 0,
 QueensOpen.Init.badSub, L.17)
# 17
LABEL L.17
MOVE(
 TEMP t.26,
 TEMP t.25)
MOVE(
 TEMP t.27,
 CONST 16)
MOVE(
 TEMP t.27,
 ADD(
  TEMP t.27,
  MUL(
   TEMP t.26,
   CONST 8)))
MOVE(
 TEMP t.28,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.27))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.28,
  CONST 16))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false),
 TEMP t.25)
MOVE(
 TEMP t.30,
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.31,
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.29,
 CONST 0)
BGE(
 TEMP t.29,
 TEMP t.30,
 L.20, L.18)
# 18
LABEL L.18
MOVE(
 MEM(
  ADD(
   TEMP t.31,
   MUL(
    TEMP t.29,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.29,
 ADD(
  TEMP t.29,
  CONST 1))
JUMP(
 NAME L.19)
# 19
LABEL L.19
BLT(
 TEMP t.29,
 TEMP t.30,
 L.18, L.20)
# 20
LABEL L.20
MOVE(
 MEM(
  TEMP t.24, 
  CONST 24, 8, false, false),
 TEMP t.28)
MOVE(
 TEMP %rax,
 TEMP QueensOpen.Init.self)
JUMP(
 NAME L.0)
# 21
LABEL L.0
# Trace Scheduled:
LABEL L.94
MOVE(
 TEMP t.0,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.0,
 CONST 0,
 QueensOpen.Init.badPtr, L.1)
LABEL L.1
MOVE(
 TEMP t.1,
 CONST 8)
BLT(
 TEMP t.1,
 CONST 0,
 QueensOpen.Init.badSub, L.2)
LABEL L.2
MOVE(
 TEMP t.2,
 TEMP t.1)
MOVE(
 TEMP t.3,
 CONST 16)
MOVE(
 TEMP t.3,
 ADD(
  TEMP t.3,
  MUL(
   TEMP t.2,
   CONST 8)))
MOVE(
 TEMP t.4,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.3))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.4,
  CONST 16))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false),
 TEMP t.1)
MOVE(
 TEMP t.6,
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.7,
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.5,
 CONST 0)
BGE(
 TEMP t.5,
 TEMP t.6,
 L.5, L.3)
LABEL L.3
MOVE(
 MEM(
  ADD(
   TEMP t.7,
   MUL(
    TEMP t.5,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.5,
 ADD(
  TEMP t.5,
  CONST 1))
LABEL L.4
BLT(
 TEMP t.5,
 TEMP t.6,
 L.3, L.5)
LABEL L.5
MOVE(
 MEM(
  TEMP t.0, 
  CONST 0, 8, false, false),
 TEMP t.4)
MOVE(
 TEMP t.8,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.8,
 CONST 0,
 QueensOpen.Init.badPtr, L.6)
LABEL L.6
MOVE(
 TEMP t.9,
 CONST 8)
BLT(
 TEMP t.9,
 CONST 0,
 QueensOpen.Init.badSub, L.7)
LABEL L.7
MOVE(
 TEMP t.10,
 TEMP t.9)
MOVE(
 TEMP t.11,
 CONST 16)
MOVE(
 TEMP t.11,
 ADD(
  TEMP t.11,
  MUL(
   TEMP t.10,
   CONST 8)))
MOVE(
 TEMP t.12,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.11))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.12,
  CONST 16))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false),
 TEMP t.9)
MOVE(
 TEMP t.14,
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.15,
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.13,
 CONST 0)
BGE(
 TEMP t.13,
 TEMP t.14,
 L.10, L.8)
LABEL L.8
MOVE(
 MEM(
  ADD(
   TEMP t.15,
   MUL(
    TEMP t.13,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.13,
 ADD(
  TEMP t.13,
  CONST 1))
LABEL L.9
BLT(
 TEMP t.13,
 TEMP t.14,
 L.8, L.10)
LABEL L.10
MOVE(
 MEM(
  TEMP t.8, 
  CONST 8, 8, false, false),
 TEMP t.12)
MOVE(
 TEMP t.16,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.16,
 CONST 0,
 QueensOpen.Init.badPtr, L.11)
LABEL L.11
MOVE(
 TEMP t.17,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.17,
 CONST 0,
 QueensOpen.Init.badSub, L.12)
LABEL L.12
MOVE(
 TEMP t.18,
 TEMP t.17)
MOVE(
 TEMP t.19,
 CONST 16)
MOVE(
 TEMP t.19,
 ADD(
  TEMP t.19,
  MUL(
   TEMP t.18,
   CONST 8)))
MOVE(
 TEMP t.20,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.19))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.20,
  CONST 16))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false),
 TEMP t.17)
MOVE(
 TEMP t.22,
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.23,
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.21,
 CONST 0)
BGE(
 TEMP t.21,
 TEMP t.22,
 L.15, L.13)
LABEL L.13
MOVE(
 MEM(
  ADD(
   TEMP t.23,
   MUL(
    TEMP t.21,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.21,
 ADD(
  TEMP t.21,
  CONST 1))
LABEL L.14
BLT(
 TEMP t.21,
 TEMP t.22,
 L.13, L.15)
LABEL L.15
MOVE(
 MEM(
  TEMP t.16, 
  CONST 16, 8, false, false),
 TEMP t.20)
MOVE(
 TEMP t.24,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.24,
 CONST 0,
 QueensOpen.Init.badPtr, L.16)
LABEL L.16
MOVE(
 TEMP t.25,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.25,
 CONST 0,
 QueensOpen.Init.badSub, L.17)
LABEL L.17
MOVE(
 TEMP t.26,
 TEMP t.25)
MOVE(
 TEMP t.27,
 CONST 16)
MOVE(
 TEMP t.27,
 ADD(
  TEMP t.27,
  MUL(
   TEMP t.26,
   CONST 8)))
MOVE(
 TEMP t.28,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.27))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.28,
  CONST 16))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false),
 TEMP t.25)
MOVE(
 TEMP t.30,
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.31,
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.29,
 CONST 0)
BGE(
 TEMP t.29,
 TEMP t.30,
 L.20, L.18)
LABEL L.18
MOVE(
 MEM(
  ADD(
   TEMP t.31,
   MUL(
    TEMP t.29,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.29,
 ADD(
  TEMP t.29,
  CONST 1))
LABEL L.19
BLT(
 TEMP t.29,
 TEMP t.30,
 L.18, L.20)
LABEL L.20
MOVE(
 MEM(
  TEMP t.24, 
  CONST 24, 8, false, false),
 TEMP t.28)
MOVE(
 TEMP %rax,
 TEMP QueensOpen.Init.self)
LABEL L.0
# With procedure entry/exit:
MOVE(
 TEMP QueensOpen.Init.self,
 TEMP %rdi)
LABEL L.94
MOVE(
 TEMP t.0,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.0,
 CONST 0,
 QueensOpen.Init.badPtr, L.1)
LABEL L.1
MOVE(
 TEMP t.1,
 CONST 8)
BLT(
 TEMP t.1,
 CONST 0,
 QueensOpen.Init.badSub, L.2)
LABEL L.2
MOVE(
 TEMP t.2,
 TEMP t.1)
MOVE(
 TEMP t.3,
 CONST 16)
MOVE(
 TEMP t.3,
 ADD(
  TEMP t.3,
  MUL(
   TEMP t.2,
   CONST 8)))
MOVE(
 TEMP t.4,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.3))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.4,
  CONST 16))
MOVE(
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false),
 TEMP t.1)
MOVE(
 TEMP t.6,
 MEM(
  TEMP t.4, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.7,
 MEM(
  TEMP t.4, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.5,
 CONST 0)
BGE(
 TEMP t.5,
 TEMP t.6,
 L.5, L.3)
LABEL L.3
MOVE(
 MEM(
  ADD(
   TEMP t.7,
   MUL(
    TEMP t.5,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.5,
 ADD(
  TEMP t.5,
  CONST 1))
LABEL L.4
BLT(
 TEMP t.5,
 TEMP t.6,
 L.3, L.5)
LABEL L.5
MOVE(
 MEM(
  TEMP t.0, 
  CONST 0, 8, false, false),
 TEMP t.4)
MOVE(
 TEMP t.8,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.8,
 CONST 0,
 QueensOpen.Init.badPtr, L.6)
LABEL L.6
MOVE(
 TEMP t.9,
 CONST 8)
BLT(
 TEMP t.9,
 CONST 0,
 QueensOpen.Init.badSub, L.7)
LABEL L.7
MOVE(
 TEMP t.10,
 TEMP t.9)
MOVE(
 TEMP t.11,
 CONST 16)
MOVE(
 TEMP t.11,
 ADD(
  TEMP t.11,
  MUL(
   TEMP t.10,
   CONST 8)))
MOVE(
 TEMP t.12,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.11))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.12,
  CONST 16))
MOVE(
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false),
 TEMP t.9)
MOVE(
 TEMP t.14,
 MEM(
  TEMP t.12, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.15,
 MEM(
  TEMP t.12, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.13,
 CONST 0)
BGE(
 TEMP t.13,
 TEMP t.14,
 L.10, L.8)
LABEL L.8
MOVE(
 MEM(
  ADD(
   TEMP t.15,
   MUL(
    TEMP t.13,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.13,
 ADD(
  TEMP t.13,
  CONST 1))
LABEL L.9
BLT(
 TEMP t.13,
 TEMP t.14,
 L.8, L.10)
LABEL L.10
MOVE(
 MEM(
  TEMP t.8, 
  CONST 8, 8, false, false),
 TEMP t.12)
MOVE(
 TEMP t.16,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.16,
 CONST 0,
 QueensOpen.Init.badPtr, L.11)
LABEL L.11
MOVE(
 TEMP t.17,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.17,
 CONST 0,
 QueensOpen.Init.badSub, L.12)
LABEL L.12
MOVE(
 TEMP t.18,
 TEMP t.17)
MOVE(
 TEMP t.19,
 CONST 16)
MOVE(
 TEMP t.19,
 ADD(
  TEMP t.19,
  MUL(
   TEMP t.18,
   CONST 8)))
MOVE(
 TEMP t.20,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.19))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.20,
  CONST 16))
MOVE(
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false),
 TEMP t.17)
MOVE(
 TEMP t.22,
 MEM(
  TEMP t.20, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.23,
 MEM(
  TEMP t.20, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.21,
 CONST 0)
BGE(
 TEMP t.21,
 TEMP t.22,
 L.15, L.13)
LABEL L.13
MOVE(
 MEM(
  ADD(
   TEMP t.23,
   MUL(
    TEMP t.21,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.21,
 ADD(
  TEMP t.21,
  CONST 1))
LABEL L.14
BLT(
 TEMP t.21,
 TEMP t.22,
 L.13, L.15)
LABEL L.15
MOVE(
 MEM(
  TEMP t.16, 
  CONST 16, 8, false, false),
 TEMP t.20)
MOVE(
 TEMP t.24,
 TEMP QueensOpen.Init.self)
BEQ(
 TEMP t.24,
 CONST 0,
 QueensOpen.Init.badPtr, L.16)
LABEL L.16
MOVE(
 TEMP t.25,
 SUB(
  ADD(
   CONST 8,
   CONST 8),
  CONST 1))
BLT(
 TEMP t.25,
 CONST 0,
 QueensOpen.Init.badSub, L.17)
LABEL L.17
MOVE(
 TEMP t.26,
 TEMP t.25)
MOVE(
 TEMP t.27,
 CONST 16)
MOVE(
 TEMP t.27,
 ADD(
  TEMP t.27,
  MUL(
   TEMP t.26,
   CONST 8)))
MOVE(
 TEMP t.28,
 CALL(
  NAME malloc,
  CONST 0,
  TEMP t.27))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false),
 ADD(
  TEMP t.28,
  CONST 16))
MOVE(
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false),
 TEMP t.25)
MOVE(
 TEMP t.30,
 MEM(
  TEMP t.28, 
  CONST 8, 8, false, false))
MOVE(
 TEMP t.31,
 MEM(
  TEMP t.28, 
  CONST 0, 8, false, false))
MOVE(
 TEMP t.29,
 CONST 0)
BGE(
 TEMP t.29,
 TEMP t.30,
 L.20, L.18)
LABEL L.18
MOVE(
 MEM(
  ADD(
   TEMP t.31,
   MUL(
    TEMP t.29,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.29,
 ADD(
  TEMP t.29,
  CONST 1))
LABEL L.19
BLT(
 TEMP t.29,
 TEMP t.30,
 L.18, L.20)
LABEL L.20
MOVE(
 MEM(
  TEMP t.24, 
  CONST 24, 8, false, false),
 TEMP t.28)
MOVE(
 TEMP %rax,
 TEMP QueensOpen.Init.self)
LABEL L.0
# Instructions:
	movq %rdi,QueensOpen.Init.self	# QueensOpen.Init.self := %rdi 
L.94:	# <- 
	movq QueensOpen.Init.self,t.0	# t.0 := QueensOpen.Init.self 
	xorq t.96,t.96	# t.96 <- 
	cmpq t.96,t.0	# <- t.0 t.96 
	je QueensOpen.Init.badPtr	# <- : goto QueensOpen.Init.badPtr L.1 
L.1:	# <- 
	movq $8,t.1	# t.1 <- 
	xorq t.97,t.97	# t.97 <- 
	cmpq t.97,t.1	# <- t.1 t.97 
	jl QueensOpen.Init.badSub	# <- : goto QueensOpen.Init.badSub L.2 
L.2:	# <- 
	movq t.1,t.2	# t.2 := t.1 
	movq $16,t.3	# t.3 <- 
	movq t.2,t.98	# t.98 := t.2 
	shlq $3,t.98	# t.98 <- t.98 
	movq t.3,t.99	# t.99 := t.3 
	addq t.98,t.99	# t.99 <- t.98 t.99 
	movq t.99,t.3	# t.3 := t.99 
	movq t.3,%rdi	# %rdi := t.3 
	call malloc	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.4	# t.4 := %rax 
	movq t.4,t.100	# t.100 := t.4 
	addq $16,t.100	# t.100 <- t.100 
	movq t.100,0(t.4)	# <- t.4 t.100 
	movq t.1,8(t.4)	# <- t.4 t.1 
	movq 8(t.4),t.101	# t.101 <- t.4 
	movq t.101,t.6	# t.6 := t.101 
	movq 0(t.4),t.102	# t.102 <- t.4 
	movq t.102,t.7	# t.7 := t.102 
	xorq t.5,t.5	# t.5 <- 
	cmpq t.6,t.5	# <- t.5 t.6 
	jge L.5	# <- : goto L.5 L.3 
L.3:	# <- 
	movq $0,0(t.7,t.5,8)	# <- t.7 t.5 
	movq t.5,t.103	# t.103 := t.5 
	addq $1,t.103	# t.103 <- t.103 
	movq t.103,t.5	# t.5 := t.103 
L.4:	# <- 
	cmpq t.6,t.5	# <- t.5 t.6 
	jl L.3	# <- : goto L.3 L.5 
L.5:	# <- 
	movq t.4,0(t.0)	# <- t.0 t.4 
	movq QueensOpen.Init.self,t.8	# t.8 := QueensOpen.Init.self 
	xorq t.104,t.104	# t.104 <- 
	cmpq t.104,t.8	# <- t.8 t.104 
	je QueensOpen.Init.badPtr	# <- : goto QueensOpen.Init.badPtr L.6 
L.6:	# <- 
	movq $8,t.9	# t.9 <- 
	xorq t.105,t.105	# t.105 <- 
	cmpq t.105,t.9	# <- t.9 t.105 
	jl QueensOpen.Init.badSub	# <- : goto QueensOpen.Init.badSub L.7 
L.7:	# <- 
	movq t.9,t.10	# t.10 := t.9 
	movq $16,t.11	# t.11 <- 
	movq t.10,t.106	# t.106 := t.10 
	shlq $3,t.106	# t.106 <- t.106 
	movq t.11,t.107	# t.107 := t.11 
	addq t.106,t.107	# t.107 <- t.106 t.107 
	movq t.107,t.11	# t.11 := t.107 
	movq t.11,%rdi	# %rdi := t.11 
	call malloc	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.12	# t.12 := %rax 
	movq t.12,t.108	# t.108 := t.12 
	addq $16,t.108	# t.108 <- t.108 
	movq t.108,0(t.12)	# <- t.12 t.108 
	movq t.9,8(t.12)	# <- t.12 t.9 
	movq 8(t.12),t.109	# t.109 <- t.12 
	movq t.109,t.14	# t.14 := t.109 
	movq 0(t.12),t.110	# t.110 <- t.12 
	movq t.110,t.15	# t.15 := t.110 
	xorq t.13,t.13	# t.13 <- 
	cmpq t.14,t.13	# <- t.13 t.14 
	jge L.10	# <- : goto L.10 L.8 
L.8:	# <- 
	movq $0,0(t.15,t.13,8)	# <- t.15 t.13 
	movq t.13,t.111	# t.111 := t.13 
	addq $1,t.111	# t.111 <- t.111 
	movq t.111,t.13	# t.13 := t.111 
L.9:	# <- 
	cmpq t.14,t.13	# <- t.13 t.14 
	jl L.8	# <- : goto L.8 L.10 
L.10:	# <- 
	movq t.12,8(t.8)	# <- t.8 t.12 
	movq QueensOpen.Init.self,t.16	# t.16 := QueensOpen.Init.self 
	xorq t.112,t.112	# t.112 <- 
	cmpq t.112,t.16	# <- t.16 t.112 
	je QueensOpen.Init.badPtr	# <- : goto QueensOpen.Init.badPtr L.11 
L.11:	# <- 
	movq $8,t.113	# t.113 <- 
	movq t.113,t.114	# t.114 := t.113 
	addq $8,t.114	# t.114 <- t.114 
	movq t.114,t.115	# t.115 := t.114 
	subq $1,t.115	# t.115 <- t.115 
	movq t.115,t.17	# t.17 := t.115 
	xorq t.116,t.116	# t.116 <- 
	cmpq t.116,t.17	# <- t.17 t.116 
	jl QueensOpen.Init.badSub	# <- : goto QueensOpen.Init.badSub L.12 
L.12:	# <- 
	movq t.17,t.18	# t.18 := t.17 
	movq $16,t.19	# t.19 <- 
	movq t.18,t.117	# t.117 := t.18 
	shlq $3,t.117	# t.117 <- t.117 
	movq t.19,t.118	# t.118 := t.19 
	addq t.117,t.118	# t.118 <- t.117 t.118 
	movq t.118,t.19	# t.19 := t.118 
	movq t.19,%rdi	# %rdi := t.19 
	call malloc	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.20	# t.20 := %rax 
	movq t.20,t.119	# t.119 := t.20 
	addq $16,t.119	# t.119 <- t.119 
	movq t.119,0(t.20)	# <- t.20 t.119 
	movq t.17,8(t.20)	# <- t.20 t.17 
	movq 8(t.20),t.120	# t.120 <- t.20 
	movq t.120,t.22	# t.22 := t.120 
	movq 0(t.20),t.121	# t.121 <- t.20 
	movq t.121,t.23	# t.23 := t.121 
	xorq t.21,t.21	# t.21 <- 
	cmpq t.22,t.21	# <- t.21 t.22 
	jge L.15	# <- : goto L.15 L.13 
L.13:	# <- 
	movq $0,0(t.23,t.21,8)	# <- t.23 t.21 
	movq t.21,t.122	# t.122 := t.21 
	addq $1,t.122	# t.122 <- t.122 
	movq t.122,t.21	# t.21 := t.122 
L.14:	# <- 
	cmpq t.22,t.21	# <- t.21 t.22 
	jl L.13	# <- : goto L.13 L.15 
L.15:	# <- 
	movq t.20,16(t.16)	# <- t.16 t.20 
	movq QueensOpen.Init.self,t.24	# t.24 := QueensOpen.Init.self 
	xorq t.123,t.123	# t.123 <- 
	cmpq t.123,t.24	# <- t.24 t.123 
	je QueensOpen.Init.badPtr	# <- : goto QueensOpen.Init.badPtr L.16 
L.16:	# <- 
	movq $8,t.124	# t.124 <- 
	movq t.124,t.125	# t.125 := t.124 
	addq $8,t.125	# t.125 <- t.125 
	movq t.125,t.126	# t.126 := t.125 
	subq $1,t.126	# t.126 <- t.126 
	movq t.126,t.25	# t.25 := t.126 
	xorq t.127,t.127	# t.127 <- 
	cmpq t.127,t.25	# <- t.25 t.127 
	jl QueensOpen.Init.badSub	# <- : goto QueensOpen.Init.badSub L.17 
L.17:	# <- 
	movq t.25,t.26	# t.26 := t.25 
	movq $16,t.27	# t.27 <- 
	movq t.26,t.128	# t.128 := t.26 
	shlq $3,t.128	# t.128 <- t.128 
	movq t.27,t.129	# t.129 := t.27 
	addq t.128,t.129	# t.129 <- t.128 t.129 
	movq t.129,t.27	# t.27 := t.129 
	movq t.27,%rdi	# %rdi := t.27 
	call malloc	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.28	# t.28 := %rax 
	movq t.28,t.130	# t.130 := t.28 
	addq $16,t.130	# t.130 <- t.130 
	movq t.130,0(t.28)	# <- t.28 t.130 
	movq t.25,8(t.28)	# <- t.28 t.25 
	movq 8(t.28),t.131	# t.131 <- t.28 
	movq t.131,t.30	# t.30 := t.131 
	movq 0(t.28),t.132	# t.132 <- t.28 
	movq t.132,t.31	# t.31 := t.132 
	xorq t.29,t.29	# t.29 <- 
	cmpq t.30,t.29	# <- t.29 t.30 
	jge L.20	# <- : goto L.20 L.18 
L.18:	# <- 
	movq $0,0(t.31,t.29,8)	# <- t.31 t.29 
	movq t.29,t.133	# t.133 := t.29 
	addq $1,t.133	# t.133 <- t.133 
	movq t.133,t.29	# t.29 := t.133 
L.19:	# <- 
	cmpq t.30,t.29	# <- t.29 t.30 
	jl L.18	# <- : goto L.18 L.20 
L.20:	# <- 
	movq t.28,24(t.24)	# <- t.24 t.28 
	movq QueensOpen.Init.self,%rax	# %rax := QueensOpen.Init.self 
L.0:	# <- 
# Control Flow Graph:
0: QueensOpen.Init.self <- %rdi; goto 1
1: t.0 t.96 <- QueensOpen.Init.self; goto 2
2: t.1 t.97 <-; goto 3
3: t.2 t.3 t.98 t.99 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.4 t.100 t.101 t.6 t.102 t.7 t.5 <- t.1; goto 6 4
4: t.103 t.5 <- t.7 t.5; goto 5
5: <- t.5 t.6; goto 4 6
6: t.8 t.104 <- t.0 t.4 QueensOpen.Init.self; goto 7
7: t.9 t.105 <-; goto 8
8: t.10 t.11 t.106 t.107 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.12 t.108 t.109 t.14 t.110 t.15 t.13 <- t.9; goto 11 9
9: t.111 t.13 <- t.15 t.13; goto 10
10: <- t.13 t.14; goto 9 11
11: t.16 t.112 <- t.8 t.12 QueensOpen.Init.self; goto 12
12: t.113 t.114 t.115 t.17 t.116 <-; goto 13
13: t.18 t.19 t.117 t.118 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.20 t.119 t.120 t.22 t.121 t.23 t.21 <- t.17; goto 16 14
14: t.122 t.21 <- t.23 t.21; goto 15
15: <- t.21 t.22; goto 14 16
16: t.24 t.123 <- t.16 t.20 QueensOpen.Init.self; goto 17
17: t.124 t.125 t.126 t.25 t.127 <-; goto 18
18: t.26 t.27 t.128 t.129 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.28 t.130 t.131 t.30 t.132 t.31 t.29 <- t.25; goto 21 19
19: t.133 t.29 <- t.31 t.29; goto 20
20: <- t.29 t.30; goto 19 21
21: %rax <- t.24 t.28 QueensOpen.Init.self; goto 22
22: <- %rsp %rbp %rax; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
QueensOpen.Init.self: %rsp %rbp t.96 t.97 t.1 t.5 t.7 t.102 t.6 t.101 t.100 t.4 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.3 t.99 t.98 t.2 t.103 t.104 t.105 t.9 t.13 t.15 t.110 t.14 t.109 t.108 t.12 t.11 t.107 t.106 t.10 t.111 t.112 t.116 t.17 t.115 t.114 t.113 t.21 t.23 t.121 t.22 t.120 t.119 t.20 t.19 t.118 t.117 t.18 t.122 t.123 t.127 t.25 t.126 t.125 t.124 t.29 t.31 t.132 t.30 t.131 t.130 t.28 t.27 t.129 t.128 t.26 t.133 
t.0: t.96 %rsp %rbp t.97 t.1 t.5 t.7 t.102 t.6 t.101 t.100 t.4 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.3 t.99 t.98 t.2 t.103 
t.96: t.0 QueensOpen.Init.self %rsp %rbp 
t.1: t.97 t.0 QueensOpen.Init.self %rsp %rbp t.100 t.4 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.3 t.99 t.98 
t.97: t.1 t.0 QueensOpen.Init.self %rsp %rbp 
t.2: t.3 t.0 QueensOpen.Init.self %rsp %rbp 
t.3: t.0 QueensOpen.Init.self %rsp %rbp t.1 t.98 t.2 
t.98: t.99 t.0 QueensOpen.Init.self %rsp %rbp t.1 t.3 
t.99: t.0 QueensOpen.Init.self %rsp %rbp t.1 t.98 
t.4: t.5 t.7 t.102 t.6 t.101 t.100 t.0 QueensOpen.Init.self %rsp %rbp t.1 t.103 
t.100: t.0 t.4 QueensOpen.Init.self %rsp %rbp t.1 
t.101: t.0 t.4 QueensOpen.Init.self %rsp %rbp 
t.6: t.5 t.7 t.102 t.0 t.4 QueensOpen.Init.self %rsp %rbp t.103 
t.102: t.0 t.4 QueensOpen.Init.self %rsp %rbp t.6 
t.7: t.5 t.0 t.4 QueensOpen.Init.self %rsp %rbp t.6 t.103 
t.5: t.0 t.4 QueensOpen.Init.self %rsp %rbp t.7 t.6 
t.103: t.6 t.7 t.0 t.4 QueensOpen.Init.self %rsp %rbp 
t.8: t.104 %rsp %rbp t.105 t.9 t.13 t.15 t.110 t.14 t.109 t.108 t.12 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.11 t.107 t.106 t.10 t.111 
t.104: t.8 QueensOpen.Init.self %rsp %rbp 
t.9: t.105 t.8 QueensOpen.Init.self %rsp %rbp t.108 t.12 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.11 t.107 t.106 
t.105: t.9 t.8 QueensOpen.Init.self %rsp %rbp 
t.10: t.11 t.8 QueensOpen.Init.self %rsp %rbp 
t.11: t.8 QueensOpen.Init.self %rsp %rbp t.9 t.106 t.10 
t.106: t.107 t.8 QueensOpen.Init.self %rsp %rbp t.9 t.11 
t.107: t.8 QueensOpen.Init.self %rsp %rbp t.9 t.106 
t.12: t.13 t.15 t.110 t.14 t.109 t.108 t.8 QueensOpen.Init.self %rsp %rbp t.9 t.111 
t.108: t.8 t.12 QueensOpen.Init.self %rsp %rbp t.9 
t.109: t.8 t.12 QueensOpen.Init.self %rsp %rbp 
t.14: t.13 t.15 t.110 t.8 t.12 QueensOpen.Init.self %rsp %rbp t.111 
t.110: t.8 t.12 QueensOpen.Init.self %rsp %rbp t.14 
t.15: t.13 t.8 t.12 QueensOpen.Init.self %rsp %rbp t.14 t.111 
t.13: t.8 t.12 QueensOpen.Init.self %rsp %rbp t.15 t.14 
t.111: t.14 t.15 t.8 t.12 QueensOpen.Init.self %rsp %rbp 
t.16: t.112 %rsp %rbp t.116 t.17 t.115 t.114 t.113 t.21 t.23 t.121 t.22 t.120 t.119 t.20 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.19 t.118 t.117 t.18 t.122 
t.112: t.16 QueensOpen.Init.self %rsp %rbp 
t.113: t.16 QueensOpen.Init.self %rsp %rbp 
t.114: t.16 QueensOpen.Init.self %rsp %rbp 
t.115: t.16 QueensOpen.Init.self %rsp %rbp 
t.17: t.116 t.16 QueensOpen.Init.self %rsp %rbp t.119 t.20 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.19 t.118 t.117 
t.116: t.17 t.16 QueensOpen.Init.self %rsp %rbp 
t.18: t.19 t.16 QueensOpen.Init.self %rsp %rbp 
t.19: t.16 QueensOpen.Init.self %rsp %rbp t.17 t.117 t.18 
t.117: t.118 t.16 QueensOpen.Init.self %rsp %rbp t.17 t.19 
t.118: t.16 QueensOpen.Init.self %rsp %rbp t.17 t.117 
t.20: t.21 t.23 t.121 t.22 t.120 t.119 t.16 QueensOpen.Init.self %rsp %rbp t.17 t.122 
t.119: t.16 t.20 QueensOpen.Init.self %rsp %rbp t.17 
t.120: t.16 t.20 QueensOpen.Init.self %rsp %rbp 
t.22: t.21 t.23 t.121 t.16 t.20 QueensOpen.Init.self %rsp %rbp t.122 
t.121: t.16 t.20 QueensOpen.Init.self %rsp %rbp t.22 
t.23: t.21 t.16 t.20 QueensOpen.Init.self %rsp %rbp t.22 t.122 
t.21: t.16 t.20 QueensOpen.Init.self %rsp %rbp t.23 t.22 
t.122: t.22 t.23 t.16 t.20 QueensOpen.Init.self %rsp %rbp 
t.24: t.123 %rsp %rbp t.127 t.25 t.126 t.125 t.124 t.29 t.31 t.132 t.30 t.131 t.130 t.28 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.27 t.129 t.128 t.26 t.133 
t.123: t.24 QueensOpen.Init.self %rsp %rbp 
t.124: t.24 QueensOpen.Init.self %rsp %rbp 
t.125: t.24 QueensOpen.Init.self %rsp %rbp 
t.126: t.24 QueensOpen.Init.self %rsp %rbp 
t.25: t.127 t.24 QueensOpen.Init.self %rsp %rbp t.130 t.28 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.27 t.129 t.128 
t.127: t.25 t.24 QueensOpen.Init.self %rsp %rbp 
t.26: t.27 t.24 QueensOpen.Init.self %rsp %rbp 
t.27: t.24 QueensOpen.Init.self %rsp %rbp t.25 t.128 t.26 
t.128: t.129 t.24 QueensOpen.Init.self %rsp %rbp t.25 t.27 
t.129: t.24 QueensOpen.Init.self %rsp %rbp t.25 t.128 
t.28: t.29 t.31 t.132 t.30 t.131 t.130 t.24 QueensOpen.Init.self %rsp %rbp t.25 t.133 
t.130: t.24 t.28 QueensOpen.Init.self %rsp %rbp t.25 
t.131: t.24 t.28 QueensOpen.Init.self %rsp %rbp 
t.30: t.29 t.31 t.132 t.24 t.28 QueensOpen.Init.self %rsp %rbp t.133 
t.132: t.24 t.28 QueensOpen.Init.self %rsp %rbp t.30 
t.31: t.29 t.24 t.28 QueensOpen.Init.self %rsp %rbp t.30 t.133 
t.29: t.24 t.28 QueensOpen.Init.self %rsp %rbp t.31 t.30 
t.133: t.30 t.31 t.24 t.28 QueensOpen.Init.self %rsp %rbp 
%rax <= QueensOpen.Init.self
t.133 <= t.29
t.29 <= t.133
t.26 <= t.25
t.128 <= t.26
t.129 <= t.27
t.27 <= t.129
%rdi <= t.27
t.28 <= %rax
t.130 <= t.28
t.30 <= t.131
t.31 <= t.132
t.125 <= t.124
t.126 <= t.125
t.25 <= t.126
t.24 <= QueensOpen.Init.self
t.122 <= t.21
t.21 <= t.122
t.18 <= t.17
t.117 <= t.18
t.118 <= t.19
t.19 <= t.118
%rdi <= t.19
t.20 <= %rax
t.119 <= t.20
t.22 <= t.120
t.23 <= t.121
t.114 <= t.113
t.115 <= t.114
t.17 <= t.115
t.16 <= QueensOpen.Init.self
t.111 <= t.13
t.13 <= t.111
t.10 <= t.9
t.106 <= t.10
t.107 <= t.11
t.11 <= t.107
%rdi <= t.11
t.12 <= %rax
t.108 <= t.12
t.14 <= t.109
t.15 <= t.110
t.8 <= QueensOpen.Init.self
t.103 <= t.5
t.5 <= t.103
t.2 <= t.1
t.98 <= t.2
t.99 <= t.3
t.3 <= t.99
%rdi <= t.3
t.4 <= %rax
t.100 <= t.4
t.6 <= t.101
t.7 <= t.102
t.0 <= QueensOpen.Init.self
QueensOpen.Init.self <= %rdi
# Register Allocation:
%rax->%rax
%rbx->%rbx
%rcx->%rcx
%rdx->%rdx
%rsp->%rsp
%rbp->%rbp
%rsi->%rsi
%rdi->%rdi
%r8->%r8
%r9->%r9
%r10->%r10
%r11->%r11
%r12->%r12
%r13->%r13
%r14->%r14
%r15->%r15
QueensOpen.Init.self->%rbx
t.0->%rbx
t.96->%rax
t.1->%r12
t.97->%rax
t.2->%r12
t.3->%rdi
t.98->%rax
t.99->%rdi
t.4->%rax
t.100->%rcx
t.101->%rdx
t.6->%rdx
t.102->%rcx
t.7->%rcx
t.5->%rsi
t.103->%rsi
t.8->%rbx
t.104->%rax
t.9->%r12
t.105->%rax
t.10->%r12
t.11->%rdi
t.106->%rax
t.107->%rdi
t.12->%rax
t.108->%rcx
t.109->%rdx
t.14->%rdx
t.110->%rcx
t.15->%rcx
t.13->%rsi
t.111->%rsi
t.16->%rbx
t.112->%rax
t.113->%r12
t.114->%r12
t.115->%r12
t.17->%r12
t.116->%rax
t.18->%r12
t.19->%rdi
t.117->%rax
t.118->%rdi
t.20->%rax
t.119->%rcx
t.120->%rdx
t.22->%rdx
t.121->%rcx
t.23->%rcx
t.21->%rsi
t.122->%rsi
t.24->%rbx
t.123->%rax
t.124->%r12
t.125->%r12
t.126->%r12
t.25->%r12
t.127->%rax
t.26->%r12
t.27->%rdi
t.128->%rax
t.129->%rdi
t.28->%rax
t.130->%rcx
t.131->%rdx
t.30->%rdx
t.132->%rcx
t.31->%rcx
t.29->%rsi
t.133->%rsi
# Assembly code:
	.text
QueensOpen.Init:
	pushq %rbp
	movq %rsp,%rbp
	subq $32,%rsp
	movq %r12, -16(%rbp)
	movq %rbx, -8(%rbp)
	movq %rdi,%rbx
L.94:
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Init.badPtr
L.1:
	movq $8,%r12
	xorq %rax,%rax
	cmpq %rax,%r12
	jl QueensOpen.Init.badSub
L.2:
#	movq %r12,%r12
	movq $16,%rdi
	movq %r12,%rax
	shlq $3,%rax
#	movq %rdi,%rdi
	addq %rax,%rdi
#	movq %rdi,%rdi
#	movq %rdi,%rdi
	call malloc
#	movq %rax,%rax
	movq %rax,%rcx
	addq $16,%rcx
	movq %rcx,0(%rax)
	movq %r12,8(%rax)
	movq 8(%rax),%rdx
#	movq %rdx,%rdx
	movq 0(%rax),%rcx
#	movq %rcx,%rcx
	xorq %rsi,%rsi
	cmpq %rdx,%rsi
	jge L.5
L.3:
	movq $0,0(%rcx,%rsi,8)
#	movq %rsi,%rsi
	addq $1,%rsi
#	movq %rsi,%rsi
L.4:
	cmpq %rdx,%rsi
	jl L.3
L.5:
	movq %rax,0(%rbx)
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Init.badPtr
L.6:
	movq $8,%r12
	xorq %rax,%rax
	cmpq %rax,%r12
	jl QueensOpen.Init.badSub
L.7:
#	movq %r12,%r12
	movq $16,%rdi
	movq %r12,%rax
	shlq $3,%rax
#	movq %rdi,%rdi
	addq %rax,%rdi
#	movq %rdi,%rdi
#	movq %rdi,%rdi
	call malloc
#	movq %rax,%rax
	movq %rax,%rcx
	addq $16,%rcx
	movq %rcx,0(%rax)
	movq %r12,8(%rax)
	movq 8(%rax),%rdx
#	movq %rdx,%rdx
	movq 0(%rax),%rcx
#	movq %rcx,%rcx
	xorq %rsi,%rsi
	cmpq %rdx,%rsi
	jge L.10
L.8:
	movq $0,0(%rcx,%rsi,8)
#	movq %rsi,%rsi
	addq $1,%rsi
#	movq %rsi,%rsi
L.9:
	cmpq %rdx,%rsi
	jl L.8
L.10:
	movq %rax,8(%rbx)
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Init.badPtr
L.11:
	movq $8,%r12
#	movq %r12,%r12
	addq $8,%r12
#	movq %r12,%r12
	subq $1,%r12
#	movq %r12,%r12
	xorq %rax,%rax
	cmpq %rax,%r12
	jl QueensOpen.Init.badSub
L.12:
#	movq %r12,%r12
	movq $16,%rdi
	movq %r12,%rax
	shlq $3,%rax
#	movq %rdi,%rdi
	addq %rax,%rdi
#	movq %rdi,%rdi
#	movq %rdi,%rdi
	call malloc
#	movq %rax,%rax
	movq %rax,%rcx
	addq $16,%rcx
	movq %rcx,0(%rax)
	movq %r12,8(%rax)
	movq 8(%rax),%rdx
#	movq %rdx,%rdx
	movq 0(%rax),%rcx
#	movq %rcx,%rcx
	xorq %rsi,%rsi
	cmpq %rdx,%rsi
	jge L.15
L.13:
	movq $0,0(%rcx,%rsi,8)
#	movq %rsi,%rsi
	addq $1,%rsi
#	movq %rsi,%rsi
L.14:
	cmpq %rdx,%rsi
	jl L.13
L.15:
	movq %rax,16(%rbx)
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Init.badPtr
L.16:
	movq $8,%r12
#	movq %r12,%r12
	addq $8,%r12
#	movq %r12,%r12
	subq $1,%r12
#	movq %r12,%r12
	xorq %rax,%rax
	cmpq %rax,%r12
	jl QueensOpen.Init.badSub
L.17:
#	movq %r12,%r12
	movq $16,%rdi
	movq %r12,%rax
	shlq $3,%rax
#	movq %rdi,%rdi
	addq %rax,%rdi
#	movq %rdi,%rdi
#	movq %rdi,%rdi
	call malloc
#	movq %rax,%rax
	movq %rax,%rcx
	addq $16,%rcx
	movq %rcx,0(%rax)
	movq %r12,8(%rax)
	movq 8(%rax),%rdx
#	movq %rdx,%rdx
	movq 0(%rax),%rcx
#	movq %rcx,%rcx
	xorq %rsi,%rsi
	cmpq %rdx,%rsi
	jge L.20
L.18:
	movq $0,0(%rcx,%rsi,8)
#	movq %rsi,%rsi
	addq $1,%rsi
#	movq %rsi,%rsi
L.19:
	cmpq %rdx,%rsi
	jl L.18
L.20:
	movq %rax,24(%rbx)
	movq %rbx,%rax
L.0:
#	returnSink
	movq -8(%rbp),%rbx
	movq -16(%rbp),%r12
	addq $32,%rsp
	popq %rbp
	ret
QueensOpen.Init.badPtr:
	call badPtr
QueensOpen.Init.badSub:
	call badSub
END QueensOpen.Init
PROCEDURE QueensOpen.Solve
# Trees:
BEQ(
 TEMP QueensOpen.Solve.c,
 MEM(
  ESEQ(
   MOVE(
    TEMP t.33,
    MEM(
     ESEQ(
      MOVE(
       TEMP t.32,
       TEMP QueensOpen.Solve.self),
      BEQ(
       TEMP t.32,
       CONST 0,
       QueensOpen.Solve.badPtr, L.25),
      LABEL L.25,
      TEMP t.32), 
     CONST 8, 8, false, false)),
   BEQ(
    TEMP t.33,
    CONST 0,
    QueensOpen.Solve.badPtr, L.26),
   LABEL L.26,
   TEMP t.33), 
  CONST 8, 8, false, false),
 L.22, L.23),
LABEL L.22,
EXP(
 CALL(
  NAME QueensOpen.Print,
  CONST 0,
  TEMP QueensOpen.Solve.self)),
JUMP(
 NAME L.24),
LABEL L.23,
MOVE(
 TEMP t.34,
 CONST 0),
MOVE(
 TEMP t.35,
 SUB(
  MEM(
   ESEQ(
    MOVE(
     TEMP t.37,
     MEM(
      ESEQ(
       MOVE(
        TEMP t.36,
        TEMP QueensOpen.Solve.self),
       BEQ(
        TEMP t.36,
        CONST 0,
        QueensOpen.Solve.badPtr, L.27),
       LABEL L.27,
       TEMP t.36), 
      CONST 0, 8, false, false)),
    BEQ(
     TEMP t.37,
     CONST 0,
     QueensOpen.Solve.badPtr, L.28),
    LABEL L.28,
    TEMP t.37), 
   CONST 8, 8, false, false),
  CONST 1)),
MOVE(
 TEMP t.38,
 CONST 1),
JUMP(
 NAME L.30),
LABEL L.29,
MOVE(
 TEMP QueensOpen.Solve.1.r,
 TEMP t.34),
BEQ(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.42,
    ESEQ(
     MOVE(
      TEMP t.40,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.39,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.39,
         CONST 0,
         QueensOpen.Solve.badPtr, L.36),
        LABEL L.36,
        TEMP t.39), 
       CONST 0, 8, false, false)),
     BEQ(
      TEMP t.40,
      CONST 0,
      QueensOpen.Solve.badPtr, L.37),
     LABEL L.37,
     TEMP t.40)),
   ADD(
    MEM(
     TEMP t.42, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.41,
       TEMP QueensOpen.Solve.1.r),
      BLT(
       TEMP t.41,
       CONST 0,
       QueensOpen.Solve.badSub, L.38),
      LABEL L.38,
      BGE(
       TEMP t.41,
       MEM(
        TEMP t.42, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.39),
      LABEL L.39,
      TEMP t.41),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 0,
 L.35, L.33),
LABEL L.35,
BEQ(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.46,
    ESEQ(
     MOVE(
      TEMP t.44,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.43,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.43,
         CONST 0,
         QueensOpen.Solve.badPtr, L.40),
        LABEL L.40,
        TEMP t.43), 
       CONST 16, 8, false, false)),
     BEQ(
      TEMP t.44,
      CONST 0,
      QueensOpen.Solve.badPtr, L.41),
     LABEL L.41,
     TEMP t.44)),
   ADD(
    MEM(
     TEMP t.46, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.45,
       ADD(
        TEMP QueensOpen.Solve.1.r,
        TEMP QueensOpen.Solve.c)),
      BLT(
       TEMP t.45,
       CONST 0,
       QueensOpen.Solve.badSub, L.42),
      LABEL L.42,
      BGE(
       TEMP t.45,
       MEM(
        TEMP t.46, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.43),
      LABEL L.43,
      TEMP t.45),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 0,
 L.34, L.33),
LABEL L.34,
BEQ(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.50,
    ESEQ(
     MOVE(
      TEMP t.48,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.47,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.47,
         CONST 0,
         QueensOpen.Solve.badPtr, L.44),
        LABEL L.44,
        TEMP t.47), 
       CONST 24, 8, false, false)),
     BEQ(
      TEMP t.48,
      CONST 0,
      QueensOpen.Solve.badPtr, L.45),
     LABEL L.45,
     TEMP t.48)),
   ADD(
    MEM(
     TEMP t.50, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.49,
       SUB(
        ADD(
         TEMP QueensOpen.Solve.1.r,
         SUB(
          CONST 8,
          CONST 1)),
        TEMP QueensOpen.Solve.c)),
      BLT(
       TEMP t.49,
       CONST 0,
       QueensOpen.Solve.badSub, L.46),
      LABEL L.46,
      BGE(
       TEMP t.49,
       MEM(
        TEMP t.50, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.47),
      LABEL L.47,
      TEMP t.49),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 0,
 L.32, L.33),
LABEL L.32,
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.54,
    ESEQ(
     MOVE(
      TEMP t.52,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.51,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.51,
         CONST 0,
         QueensOpen.Solve.badPtr, L.48),
        LABEL L.48,
        TEMP t.51), 
       CONST 0, 8, false, false)),
     BEQ(
      TEMP t.52,
      CONST 0,
      QueensOpen.Solve.badPtr, L.49),
     LABEL L.49,
     TEMP t.52)),
   ADD(
    MEM(
     TEMP t.54, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.53,
       TEMP QueensOpen.Solve.1.r),
      BLT(
       TEMP t.53,
       CONST 0,
       QueensOpen.Solve.badSub, L.50),
      LABEL L.50,
      BGE(
       TEMP t.53,
       MEM(
        TEMP t.54, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.51),
      LABEL L.51,
      TEMP t.53),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 1),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.58,
    ESEQ(
     MOVE(
      TEMP t.56,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.55,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.55,
         CONST 0,
         QueensOpen.Solve.badPtr, L.52),
        LABEL L.52,
        TEMP t.55), 
       CONST 16, 8, false, false)),
     BEQ(
      TEMP t.56,
      CONST 0,
      QueensOpen.Solve.badPtr, L.53),
     LABEL L.53,
     TEMP t.56)),
   ADD(
    MEM(
     TEMP t.58, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.57,
       ADD(
        TEMP QueensOpen.Solve.1.r,
        TEMP QueensOpen.Solve.c)),
      BLT(
       TEMP t.57,
       CONST 0,
       QueensOpen.Solve.badSub, L.54),
      LABEL L.54,
      BGE(
       TEMP t.57,
       MEM(
        TEMP t.58, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.55),
      LABEL L.55,
      TEMP t.57),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 1),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.62,
    ESEQ(
     MOVE(
      TEMP t.60,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.59,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.59,
         CONST 0,
         QueensOpen.Solve.badPtr, L.56),
        LABEL L.56,
        TEMP t.59), 
       CONST 24, 8, false, false)),
     BEQ(
      TEMP t.60,
      CONST 0,
      QueensOpen.Solve.badPtr, L.57),
     LABEL L.57,
     TEMP t.60)),
   ADD(
    MEM(
     TEMP t.62, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.61,
       SUB(
        ADD(
         TEMP QueensOpen.Solve.1.r,
         SUB(
          CONST 8,
          CONST 1)),
        TEMP QueensOpen.Solve.c)),
      BLT(
       TEMP t.61,
       CONST 0,
       QueensOpen.Solve.badSub, L.58),
      LABEL L.58,
      BGE(
       TEMP t.61,
       MEM(
        TEMP t.62, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.59),
      LABEL L.59,
      TEMP t.61),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 1),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.66,
    ESEQ(
     MOVE(
      TEMP t.64,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.63,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.63,
         CONST 0,
         QueensOpen.Solve.badPtr, L.60),
        LABEL L.60,
        TEMP t.63), 
       CONST 8, 8, false, false)),
     BEQ(
      TEMP t.64,
      CONST 0,
      QueensOpen.Solve.badPtr, L.61),
     LABEL L.61,
     TEMP t.64)),
   ADD(
    MEM(
     TEMP t.66, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.65,
       TEMP QueensOpen.Solve.c),
      BLT(
       TEMP t.65,
       CONST 0,
       QueensOpen.Solve.badSub, L.62),
      LABEL L.62,
      BGE(
       TEMP t.65,
       MEM(
        TEMP t.66, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.63),
      LABEL L.63,
      TEMP t.65),
     CONST 8))), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Solve.1.r),
EXP(
 CALL(
  MEM(
   MEM(
    TEMP QueensOpen.Solve.self, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP QueensOpen.Solve.self,
  ADD(
   TEMP QueensOpen.Solve.c,
   CONST 1))),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.70,
    ESEQ(
     MOVE(
      TEMP t.68,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.67,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.67,
         CONST 0,
         QueensOpen.Solve.badPtr, L.64),
        LABEL L.64,
        TEMP t.67), 
       CONST 0, 8, false, false)),
     BEQ(
      TEMP t.68,
      CONST 0,
      QueensOpen.Solve.badPtr, L.65),
     LABEL L.65,
     TEMP t.68)),
   ADD(
    MEM(
     TEMP t.70, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.69,
       TEMP QueensOpen.Solve.1.r),
      BLT(
       TEMP t.69,
       CONST 0,
       QueensOpen.Solve.badSub, L.66),
      LABEL L.66,
      BGE(
       TEMP t.69,
       MEM(
        TEMP t.70, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.67),
      LABEL L.67,
      TEMP t.69),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 0),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.74,
    ESEQ(
     MOVE(
      TEMP t.72,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.71,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.71,
         CONST 0,
         QueensOpen.Solve.badPtr, L.68),
        LABEL L.68,
        TEMP t.71), 
       CONST 16, 8, false, false)),
     BEQ(
      TEMP t.72,
      CONST 0,
      QueensOpen.Solve.badPtr, L.69),
     LABEL L.69,
     TEMP t.72)),
   ADD(
    MEM(
     TEMP t.74, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.73,
       ADD(
        TEMP QueensOpen.Solve.1.r,
        TEMP QueensOpen.Solve.c)),
      BLT(
       TEMP t.73,
       CONST 0,
       QueensOpen.Solve.badSub, L.70),
      LABEL L.70,
      BGE(
       TEMP t.73,
       MEM(
        TEMP t.74, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.71),
      LABEL L.71,
      TEMP t.73),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 0),
MOVE(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.78,
    ESEQ(
     MOVE(
      TEMP t.76,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.75,
         TEMP QueensOpen.Solve.self),
        BEQ(
         TEMP t.75,
         CONST 0,
         QueensOpen.Solve.badPtr, L.72),
        LABEL L.72,
        TEMP t.75), 
       CONST 24, 8, false, false)),
     BEQ(
      TEMP t.76,
      CONST 0,
      QueensOpen.Solve.badPtr, L.73),
     LABEL L.73,
     TEMP t.76)),
   ADD(
    MEM(
     TEMP t.78, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.77,
       SUB(
        ADD(
         TEMP QueensOpen.Solve.1.r,
         SUB(
          CONST 8,
          CONST 1)),
        TEMP QueensOpen.Solve.c)),
      BLT(
       TEMP t.77,
       CONST 0,
       QueensOpen.Solve.badSub, L.74),
      LABEL L.74,
      BGE(
       TEMP t.77,
       MEM(
        TEMP t.78, 
        CONST 8, 8, false, false),
       QueensOpen.Solve.badSub, L.75),
      LABEL L.75,
      TEMP t.77),
     CONST 8))), 
  CONST 0, 8, true, false),
 CONST 0),
LABEL L.33,
MOVE(
 TEMP t.34,
 ADD(
  TEMP t.34,
  TEMP t.38)),
LABEL L.30,
BLE(
 TEMP t.34,
 TEMP t.35,
 L.29, L.31),
LABEL L.31,
LABEL L.24,
LABEL L.21
# Linearized (trees):
MOVE(
 TEMP t.32,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.32,
 CONST 0,
 QueensOpen.Solve.badPtr, L.25)
LABEL L.25
MOVE(
 TEMP t.33,
 MEM(
  TEMP t.32, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.33,
 CONST 0,
 QueensOpen.Solve.badPtr, L.26)
LABEL L.26
BEQ(
 TEMP QueensOpen.Solve.c,
 MEM(
  TEMP t.33, 
  CONST 8, 8, false, false),
 L.22, L.23)
LABEL L.22
MOVE(
 TEMP t.134,
 CALL(
  NAME QueensOpen.Print,
  CONST 0,
  TEMP QueensOpen.Solve.self))
EXP(
 TEMP t.134)
JUMP(
 NAME L.24)
LABEL L.23
MOVE(
 TEMP t.34,
 CONST 0)
MOVE(
 TEMP t.36,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.36,
 CONST 0,
 QueensOpen.Solve.badPtr, L.27)
LABEL L.27
MOVE(
 TEMP t.37,
 MEM(
  TEMP t.36, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.37,
 CONST 0,
 QueensOpen.Solve.badPtr, L.28)
LABEL L.28
MOVE(
 TEMP t.35,
 SUB(
  MEM(
   TEMP t.37, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.38,
 CONST 1)
JUMP(
 NAME L.30)
LABEL L.29
MOVE(
 TEMP QueensOpen.Solve.1.r,
 TEMP t.34)
MOVE(
 TEMP t.39,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.39,
 CONST 0,
 QueensOpen.Solve.badPtr, L.36)
LABEL L.36
MOVE(
 TEMP t.40,
 MEM(
  TEMP t.39, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.40,
 CONST 0,
 QueensOpen.Solve.badPtr, L.37)
LABEL L.37
MOVE(
 TEMP t.42,
 TEMP t.40)
MOVE(
 TEMP t.41,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.41,
 CONST 0,
 QueensOpen.Solve.badSub, L.38)
LABEL L.38
BGE(
 TEMP t.41,
 MEM(
  TEMP t.42, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.39)
LABEL L.39
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.42, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.41,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.35, L.33)
LABEL L.35
MOVE(
 TEMP t.43,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.43,
 CONST 0,
 QueensOpen.Solve.badPtr, L.40)
LABEL L.40
MOVE(
 TEMP t.44,
 MEM(
  TEMP t.43, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.44,
 CONST 0,
 QueensOpen.Solve.badPtr, L.41)
LABEL L.41
MOVE(
 TEMP t.46,
 TEMP t.44)
MOVE(
 TEMP t.45,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.45,
 CONST 0,
 QueensOpen.Solve.badSub, L.42)
LABEL L.42
BGE(
 TEMP t.45,
 MEM(
  TEMP t.46, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.43)
LABEL L.43
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.46, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.45,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.34, L.33)
LABEL L.34
MOVE(
 TEMP t.47,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.47,
 CONST 0,
 QueensOpen.Solve.badPtr, L.44)
LABEL L.44
MOVE(
 TEMP t.48,
 MEM(
  TEMP t.47, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.48,
 CONST 0,
 QueensOpen.Solve.badPtr, L.45)
LABEL L.45
MOVE(
 TEMP t.50,
 TEMP t.48)
MOVE(
 TEMP t.49,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.49,
 CONST 0,
 QueensOpen.Solve.badSub, L.46)
LABEL L.46
BGE(
 TEMP t.49,
 MEM(
  TEMP t.50, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.47)
LABEL L.47
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.50, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.49,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.32, L.33)
LABEL L.32
MOVE(
 TEMP t.51,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.51,
 CONST 0,
 QueensOpen.Solve.badPtr, L.48)
LABEL L.48
MOVE(
 TEMP t.52,
 MEM(
  TEMP t.51, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.52,
 CONST 0,
 QueensOpen.Solve.badPtr, L.49)
LABEL L.49
MOVE(
 TEMP t.54,
 TEMP t.52)
MOVE(
 TEMP t.53,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.53,
 CONST 0,
 QueensOpen.Solve.badSub, L.50)
LABEL L.50
BGE(
 TEMP t.53,
 MEM(
  TEMP t.54, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.51)
LABEL L.51
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.54, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.53,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.55,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.55,
 CONST 0,
 QueensOpen.Solve.badPtr, L.52)
LABEL L.52
MOVE(
 TEMP t.56,
 MEM(
  TEMP t.55, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.56,
 CONST 0,
 QueensOpen.Solve.badPtr, L.53)
LABEL L.53
MOVE(
 TEMP t.58,
 TEMP t.56)
MOVE(
 TEMP t.57,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.57,
 CONST 0,
 QueensOpen.Solve.badSub, L.54)
LABEL L.54
BGE(
 TEMP t.57,
 MEM(
  TEMP t.58, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.55)
LABEL L.55
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.58, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.57,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.59,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.59,
 CONST 0,
 QueensOpen.Solve.badPtr, L.56)
LABEL L.56
MOVE(
 TEMP t.60,
 MEM(
  TEMP t.59, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.60,
 CONST 0,
 QueensOpen.Solve.badPtr, L.57)
LABEL L.57
MOVE(
 TEMP t.62,
 TEMP t.60)
MOVE(
 TEMP t.61,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.61,
 CONST 0,
 QueensOpen.Solve.badSub, L.58)
LABEL L.58
BGE(
 TEMP t.61,
 MEM(
  TEMP t.62, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.59)
LABEL L.59
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.62, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.61,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.63,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.63,
 CONST 0,
 QueensOpen.Solve.badPtr, L.60)
LABEL L.60
MOVE(
 TEMP t.64,
 MEM(
  TEMP t.63, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.64,
 CONST 0,
 QueensOpen.Solve.badPtr, L.61)
LABEL L.61
MOVE(
 TEMP t.66,
 TEMP t.64)
MOVE(
 TEMP t.65,
 TEMP QueensOpen.Solve.c)
BLT(
 TEMP t.65,
 CONST 0,
 QueensOpen.Solve.badSub, L.62)
LABEL L.62
BGE(
 TEMP t.65,
 MEM(
  TEMP t.66, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.63)
LABEL L.63
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.66, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.65,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Solve.1.r)
MOVE(
 TEMP t.135,
 CALL(
  MEM(
   MEM(
    TEMP QueensOpen.Solve.self, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP QueensOpen.Solve.self,
  ADD(
   TEMP QueensOpen.Solve.c,
   CONST 1)))
EXP(
 TEMP t.135)
MOVE(
 TEMP t.67,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.67,
 CONST 0,
 QueensOpen.Solve.badPtr, L.64)
LABEL L.64
MOVE(
 TEMP t.68,
 MEM(
  TEMP t.67, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.68,
 CONST 0,
 QueensOpen.Solve.badPtr, L.65)
LABEL L.65
MOVE(
 TEMP t.70,
 TEMP t.68)
MOVE(
 TEMP t.69,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.69,
 CONST 0,
 QueensOpen.Solve.badSub, L.66)
LABEL L.66
BGE(
 TEMP t.69,
 MEM(
  TEMP t.70, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.67)
LABEL L.67
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.70, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.69,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.71,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.71,
 CONST 0,
 QueensOpen.Solve.badPtr, L.68)
LABEL L.68
MOVE(
 TEMP t.72,
 MEM(
  TEMP t.71, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.72,
 CONST 0,
 QueensOpen.Solve.badPtr, L.69)
LABEL L.69
MOVE(
 TEMP t.74,
 TEMP t.72)
MOVE(
 TEMP t.73,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.73,
 CONST 0,
 QueensOpen.Solve.badSub, L.70)
LABEL L.70
BGE(
 TEMP t.73,
 MEM(
  TEMP t.74, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.71)
LABEL L.71
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.74, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.73,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.75,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.75,
 CONST 0,
 QueensOpen.Solve.badPtr, L.72)
LABEL L.72
MOVE(
 TEMP t.76,
 MEM(
  TEMP t.75, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.76,
 CONST 0,
 QueensOpen.Solve.badPtr, L.73)
LABEL L.73
MOVE(
 TEMP t.78,
 TEMP t.76)
MOVE(
 TEMP t.77,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.77,
 CONST 0,
 QueensOpen.Solve.badSub, L.74)
LABEL L.74
BGE(
 TEMP t.77,
 MEM(
  TEMP t.78, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.75)
LABEL L.75
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.78, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.77,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
LABEL L.33
MOVE(
 TEMP t.34,
 ADD(
  TEMP t.34,
  TEMP t.38))
LABEL L.30
BLE(
 TEMP t.34,
 TEMP t.35,
 L.29, L.31)
LABEL L.31
LABEL L.24
LABEL L.21
# Basic Blocks:
# 0
LABEL L.95
MOVE(
 TEMP t.32,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.32,
 CONST 0,
 QueensOpen.Solve.badPtr, L.25)
# 1
LABEL L.25
MOVE(
 TEMP t.33,
 MEM(
  TEMP t.32, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.33,
 CONST 0,
 QueensOpen.Solve.badPtr, L.26)
# 2
LABEL L.26
BEQ(
 TEMP QueensOpen.Solve.c,
 MEM(
  TEMP t.33, 
  CONST 8, 8, false, false),
 L.22, L.23)
# 3
LABEL L.22
MOVE(
 TEMP t.134,
 CALL(
  NAME QueensOpen.Print,
  CONST 0,
  TEMP QueensOpen.Solve.self))
EXP(
 TEMP t.134)
JUMP(
 NAME L.24)
# 4
LABEL L.23
MOVE(
 TEMP t.34,
 CONST 0)
MOVE(
 TEMP t.36,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.36,
 CONST 0,
 QueensOpen.Solve.badPtr, L.27)
# 5
LABEL L.27
MOVE(
 TEMP t.37,
 MEM(
  TEMP t.36, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.37,
 CONST 0,
 QueensOpen.Solve.badPtr, L.28)
# 6
LABEL L.28
MOVE(
 TEMP t.35,
 SUB(
  MEM(
   TEMP t.37, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.38,
 CONST 1)
JUMP(
 NAME L.30)
# 7
LABEL L.29
MOVE(
 TEMP QueensOpen.Solve.1.r,
 TEMP t.34)
MOVE(
 TEMP t.39,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.39,
 CONST 0,
 QueensOpen.Solve.badPtr, L.36)
# 8
LABEL L.36
MOVE(
 TEMP t.40,
 MEM(
  TEMP t.39, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.40,
 CONST 0,
 QueensOpen.Solve.badPtr, L.37)
# 9
LABEL L.37
MOVE(
 TEMP t.42,
 TEMP t.40)
MOVE(
 TEMP t.41,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.41,
 CONST 0,
 QueensOpen.Solve.badSub, L.38)
# 10
LABEL L.38
BGE(
 TEMP t.41,
 MEM(
  TEMP t.42, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.39)
# 11
LABEL L.39
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.42, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.41,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.35, L.33)
# 12
LABEL L.35
MOVE(
 TEMP t.43,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.43,
 CONST 0,
 QueensOpen.Solve.badPtr, L.40)
# 13
LABEL L.40
MOVE(
 TEMP t.44,
 MEM(
  TEMP t.43, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.44,
 CONST 0,
 QueensOpen.Solve.badPtr, L.41)
# 14
LABEL L.41
MOVE(
 TEMP t.46,
 TEMP t.44)
MOVE(
 TEMP t.45,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.45,
 CONST 0,
 QueensOpen.Solve.badSub, L.42)
# 15
LABEL L.42
BGE(
 TEMP t.45,
 MEM(
  TEMP t.46, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.43)
# 16
LABEL L.43
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.46, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.45,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.34, L.33)
# 17
LABEL L.34
MOVE(
 TEMP t.47,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.47,
 CONST 0,
 QueensOpen.Solve.badPtr, L.44)
# 18
LABEL L.44
MOVE(
 TEMP t.48,
 MEM(
  TEMP t.47, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.48,
 CONST 0,
 QueensOpen.Solve.badPtr, L.45)
# 19
LABEL L.45
MOVE(
 TEMP t.50,
 TEMP t.48)
MOVE(
 TEMP t.49,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.49,
 CONST 0,
 QueensOpen.Solve.badSub, L.46)
# 20
LABEL L.46
BGE(
 TEMP t.49,
 MEM(
  TEMP t.50, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.47)
# 21
LABEL L.47
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.50, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.49,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.32, L.33)
# 22
LABEL L.32
MOVE(
 TEMP t.51,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.51,
 CONST 0,
 QueensOpen.Solve.badPtr, L.48)
# 23
LABEL L.48
MOVE(
 TEMP t.52,
 MEM(
  TEMP t.51, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.52,
 CONST 0,
 QueensOpen.Solve.badPtr, L.49)
# 24
LABEL L.49
MOVE(
 TEMP t.54,
 TEMP t.52)
MOVE(
 TEMP t.53,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.53,
 CONST 0,
 QueensOpen.Solve.badSub, L.50)
# 25
LABEL L.50
BGE(
 TEMP t.53,
 MEM(
  TEMP t.54, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.51)
# 26
LABEL L.51
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.54, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.53,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.55,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.55,
 CONST 0,
 QueensOpen.Solve.badPtr, L.52)
# 27
LABEL L.52
MOVE(
 TEMP t.56,
 MEM(
  TEMP t.55, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.56,
 CONST 0,
 QueensOpen.Solve.badPtr, L.53)
# 28
LABEL L.53
MOVE(
 TEMP t.58,
 TEMP t.56)
MOVE(
 TEMP t.57,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.57,
 CONST 0,
 QueensOpen.Solve.badSub, L.54)
# 29
LABEL L.54
BGE(
 TEMP t.57,
 MEM(
  TEMP t.58, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.55)
# 30
LABEL L.55
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.58, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.57,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.59,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.59,
 CONST 0,
 QueensOpen.Solve.badPtr, L.56)
# 31
LABEL L.56
MOVE(
 TEMP t.60,
 MEM(
  TEMP t.59, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.60,
 CONST 0,
 QueensOpen.Solve.badPtr, L.57)
# 32
LABEL L.57
MOVE(
 TEMP t.62,
 TEMP t.60)
MOVE(
 TEMP t.61,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.61,
 CONST 0,
 QueensOpen.Solve.badSub, L.58)
# 33
LABEL L.58
BGE(
 TEMP t.61,
 MEM(
  TEMP t.62, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.59)
# 34
LABEL L.59
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.62, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.61,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.63,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.63,
 CONST 0,
 QueensOpen.Solve.badPtr, L.60)
# 35
LABEL L.60
MOVE(
 TEMP t.64,
 MEM(
  TEMP t.63, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.64,
 CONST 0,
 QueensOpen.Solve.badPtr, L.61)
# 36
LABEL L.61
MOVE(
 TEMP t.66,
 TEMP t.64)
MOVE(
 TEMP t.65,
 TEMP QueensOpen.Solve.c)
BLT(
 TEMP t.65,
 CONST 0,
 QueensOpen.Solve.badSub, L.62)
# 37
LABEL L.62
BGE(
 TEMP t.65,
 MEM(
  TEMP t.66, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.63)
# 38
LABEL L.63
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.66, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.65,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Solve.1.r)
MOVE(
 TEMP t.135,
 CALL(
  MEM(
   MEM(
    TEMP QueensOpen.Solve.self, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP QueensOpen.Solve.self,
  ADD(
   TEMP QueensOpen.Solve.c,
   CONST 1)))
EXP(
 TEMP t.135)
MOVE(
 TEMP t.67,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.67,
 CONST 0,
 QueensOpen.Solve.badPtr, L.64)
# 39
LABEL L.64
MOVE(
 TEMP t.68,
 MEM(
  TEMP t.67, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.68,
 CONST 0,
 QueensOpen.Solve.badPtr, L.65)
# 40
LABEL L.65
MOVE(
 TEMP t.70,
 TEMP t.68)
MOVE(
 TEMP t.69,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.69,
 CONST 0,
 QueensOpen.Solve.badSub, L.66)
# 41
LABEL L.66
BGE(
 TEMP t.69,
 MEM(
  TEMP t.70, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.67)
# 42
LABEL L.67
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.70, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.69,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.71,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.71,
 CONST 0,
 QueensOpen.Solve.badPtr, L.68)
# 43
LABEL L.68
MOVE(
 TEMP t.72,
 MEM(
  TEMP t.71, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.72,
 CONST 0,
 QueensOpen.Solve.badPtr, L.69)
# 44
LABEL L.69
MOVE(
 TEMP t.74,
 TEMP t.72)
MOVE(
 TEMP t.73,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.73,
 CONST 0,
 QueensOpen.Solve.badSub, L.70)
# 45
LABEL L.70
BGE(
 TEMP t.73,
 MEM(
  TEMP t.74, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.71)
# 46
LABEL L.71
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.74, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.73,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.75,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.75,
 CONST 0,
 QueensOpen.Solve.badPtr, L.72)
# 47
LABEL L.72
MOVE(
 TEMP t.76,
 MEM(
  TEMP t.75, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.76,
 CONST 0,
 QueensOpen.Solve.badPtr, L.73)
# 48
LABEL L.73
MOVE(
 TEMP t.78,
 TEMP t.76)
MOVE(
 TEMP t.77,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.77,
 CONST 0,
 QueensOpen.Solve.badSub, L.74)
# 49
LABEL L.74
BGE(
 TEMP t.77,
 MEM(
  TEMP t.78, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.75)
# 50
LABEL L.75
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.78, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.77,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
JUMP(
 NAME L.33)
# 51
LABEL L.33
MOVE(
 TEMP t.34,
 ADD(
  TEMP t.34,
  TEMP t.38))
JUMP(
 NAME L.30)
# 52
LABEL L.30
BLE(
 TEMP t.34,
 TEMP t.35,
 L.29, L.31)
# 53
LABEL L.31
JUMP(
 NAME L.24)
# 54
LABEL L.24
JUMP(
 NAME L.21)
# 55
LABEL L.21
# Trace Scheduled:
LABEL L.95
MOVE(
 TEMP t.32,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.32,
 CONST 0,
 QueensOpen.Solve.badPtr, L.25)
LABEL L.25
MOVE(
 TEMP t.33,
 MEM(
  TEMP t.32, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.33,
 CONST 0,
 QueensOpen.Solve.badPtr, L.26)
LABEL L.26
BEQ(
 TEMP QueensOpen.Solve.c,
 MEM(
  TEMP t.33, 
  CONST 8, 8, false, false),
 L.22, L.23)
LABEL L.23
MOVE(
 TEMP t.34,
 CONST 0)
MOVE(
 TEMP t.36,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.36,
 CONST 0,
 QueensOpen.Solve.badPtr, L.27)
LABEL L.27
MOVE(
 TEMP t.37,
 MEM(
  TEMP t.36, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.37,
 CONST 0,
 QueensOpen.Solve.badPtr, L.28)
LABEL L.28
MOVE(
 TEMP t.35,
 SUB(
  MEM(
   TEMP t.37, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.38,
 CONST 1)
LABEL L.30
BLE(
 TEMP t.34,
 TEMP t.35,
 L.29, L.31)
LABEL L.31
LABEL L.24
JUMP(
 NAME L.21)
LABEL L.22
MOVE(
 TEMP t.134,
 CALL(
  NAME QueensOpen.Print,
  CONST 0,
  TEMP QueensOpen.Solve.self))
EXP(
 TEMP t.134)
JUMP(
 NAME L.24)
LABEL L.29
MOVE(
 TEMP QueensOpen.Solve.1.r,
 TEMP t.34)
MOVE(
 TEMP t.39,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.39,
 CONST 0,
 QueensOpen.Solve.badPtr, L.36)
LABEL L.36
MOVE(
 TEMP t.40,
 MEM(
  TEMP t.39, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.40,
 CONST 0,
 QueensOpen.Solve.badPtr, L.37)
LABEL L.37
MOVE(
 TEMP t.42,
 TEMP t.40)
MOVE(
 TEMP t.41,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.41,
 CONST 0,
 QueensOpen.Solve.badSub, L.38)
LABEL L.38
BGE(
 TEMP t.41,
 MEM(
  TEMP t.42, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.39)
LABEL L.39
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.42, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.41,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.35, L.33)
LABEL L.33
MOVE(
 TEMP t.34,
 ADD(
  TEMP t.34,
  TEMP t.38))
JUMP(
 NAME L.30)
LABEL L.35
MOVE(
 TEMP t.43,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.43,
 CONST 0,
 QueensOpen.Solve.badPtr, L.40)
LABEL L.40
MOVE(
 TEMP t.44,
 MEM(
  TEMP t.43, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.44,
 CONST 0,
 QueensOpen.Solve.badPtr, L.41)
LABEL L.41
MOVE(
 TEMP t.46,
 TEMP t.44)
MOVE(
 TEMP t.45,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.45,
 CONST 0,
 QueensOpen.Solve.badSub, L.42)
LABEL L.42
BGE(
 TEMP t.45,
 MEM(
  TEMP t.46, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.43)
LABEL L.43
BNE(
 MEM(
  ADD(
   MEM(
    TEMP t.46, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.45,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.33, L.34)
LABEL L.34
MOVE(
 TEMP t.47,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.47,
 CONST 0,
 QueensOpen.Solve.badPtr, L.44)
LABEL L.44
MOVE(
 TEMP t.48,
 MEM(
  TEMP t.47, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.48,
 CONST 0,
 QueensOpen.Solve.badPtr, L.45)
LABEL L.45
MOVE(
 TEMP t.50,
 TEMP t.48)
MOVE(
 TEMP t.49,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.49,
 CONST 0,
 QueensOpen.Solve.badSub, L.46)
LABEL L.46
BGE(
 TEMP t.49,
 MEM(
  TEMP t.50, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.47)
LABEL L.47
BNE(
 MEM(
  ADD(
   MEM(
    TEMP t.50, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.49,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.33, L.32)
LABEL L.32
MOVE(
 TEMP t.51,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.51,
 CONST 0,
 QueensOpen.Solve.badPtr, L.48)
LABEL L.48
MOVE(
 TEMP t.52,
 MEM(
  TEMP t.51, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.52,
 CONST 0,
 QueensOpen.Solve.badPtr, L.49)
LABEL L.49
MOVE(
 TEMP t.54,
 TEMP t.52)
MOVE(
 TEMP t.53,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.53,
 CONST 0,
 QueensOpen.Solve.badSub, L.50)
LABEL L.50
BGE(
 TEMP t.53,
 MEM(
  TEMP t.54, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.51)
LABEL L.51
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.54, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.53,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.55,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.55,
 CONST 0,
 QueensOpen.Solve.badPtr, L.52)
LABEL L.52
MOVE(
 TEMP t.56,
 MEM(
  TEMP t.55, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.56,
 CONST 0,
 QueensOpen.Solve.badPtr, L.53)
LABEL L.53
MOVE(
 TEMP t.58,
 TEMP t.56)
MOVE(
 TEMP t.57,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.57,
 CONST 0,
 QueensOpen.Solve.badSub, L.54)
LABEL L.54
BGE(
 TEMP t.57,
 MEM(
  TEMP t.58, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.55)
LABEL L.55
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.58, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.57,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.59,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.59,
 CONST 0,
 QueensOpen.Solve.badPtr, L.56)
LABEL L.56
MOVE(
 TEMP t.60,
 MEM(
  TEMP t.59, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.60,
 CONST 0,
 QueensOpen.Solve.badPtr, L.57)
LABEL L.57
MOVE(
 TEMP t.62,
 TEMP t.60)
MOVE(
 TEMP t.61,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.61,
 CONST 0,
 QueensOpen.Solve.badSub, L.58)
LABEL L.58
BGE(
 TEMP t.61,
 MEM(
  TEMP t.62, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.59)
LABEL L.59
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.62, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.61,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.63,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.63,
 CONST 0,
 QueensOpen.Solve.badPtr, L.60)
LABEL L.60
MOVE(
 TEMP t.64,
 MEM(
  TEMP t.63, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.64,
 CONST 0,
 QueensOpen.Solve.badPtr, L.61)
LABEL L.61
MOVE(
 TEMP t.66,
 TEMP t.64)
MOVE(
 TEMP t.65,
 TEMP QueensOpen.Solve.c)
BLT(
 TEMP t.65,
 CONST 0,
 QueensOpen.Solve.badSub, L.62)
LABEL L.62
BGE(
 TEMP t.65,
 MEM(
  TEMP t.66, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.63)
LABEL L.63
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.66, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.65,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Solve.1.r)
MOVE(
 TEMP t.135,
 CALL(
  MEM(
   MEM(
    TEMP QueensOpen.Solve.self, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP QueensOpen.Solve.self,
  ADD(
   TEMP QueensOpen.Solve.c,
   CONST 1)))
EXP(
 TEMP t.135)
MOVE(
 TEMP t.67,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.67,
 CONST 0,
 QueensOpen.Solve.badPtr, L.64)
LABEL L.64
MOVE(
 TEMP t.68,
 MEM(
  TEMP t.67, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.68,
 CONST 0,
 QueensOpen.Solve.badPtr, L.65)
LABEL L.65
MOVE(
 TEMP t.70,
 TEMP t.68)
MOVE(
 TEMP t.69,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.69,
 CONST 0,
 QueensOpen.Solve.badSub, L.66)
LABEL L.66
BGE(
 TEMP t.69,
 MEM(
  TEMP t.70, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.67)
LABEL L.67
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.70, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.69,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.71,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.71,
 CONST 0,
 QueensOpen.Solve.badPtr, L.68)
LABEL L.68
MOVE(
 TEMP t.72,
 MEM(
  TEMP t.71, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.72,
 CONST 0,
 QueensOpen.Solve.badPtr, L.69)
LABEL L.69
MOVE(
 TEMP t.74,
 TEMP t.72)
MOVE(
 TEMP t.73,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.73,
 CONST 0,
 QueensOpen.Solve.badSub, L.70)
LABEL L.70
BGE(
 TEMP t.73,
 MEM(
  TEMP t.74, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.71)
LABEL L.71
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.74, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.73,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.75,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.75,
 CONST 0,
 QueensOpen.Solve.badPtr, L.72)
LABEL L.72
MOVE(
 TEMP t.76,
 MEM(
  TEMP t.75, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.76,
 CONST 0,
 QueensOpen.Solve.badPtr, L.73)
LABEL L.73
MOVE(
 TEMP t.78,
 TEMP t.76)
MOVE(
 TEMP t.77,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.77,
 CONST 0,
 QueensOpen.Solve.badSub, L.74)
LABEL L.74
BGE(
 TEMP t.77,
 MEM(
  TEMP t.78, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.75)
LABEL L.75
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.78, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.77,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
JUMP(
 NAME L.33)
LABEL L.21
# With procedure entry/exit:
MOVE(
 TEMP QueensOpen.Solve.c,
 TEMP %rsi)
MOVE(
 TEMP QueensOpen.Solve.self,
 TEMP %rdi)
LABEL L.95
MOVE(
 TEMP t.32,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.32,
 CONST 0,
 QueensOpen.Solve.badPtr, L.25)
LABEL L.25
MOVE(
 TEMP t.33,
 MEM(
  TEMP t.32, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.33,
 CONST 0,
 QueensOpen.Solve.badPtr, L.26)
LABEL L.26
BEQ(
 TEMP QueensOpen.Solve.c,
 MEM(
  TEMP t.33, 
  CONST 8, 8, false, false),
 L.22, L.23)
LABEL L.23
MOVE(
 TEMP t.34,
 CONST 0)
MOVE(
 TEMP t.36,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.36,
 CONST 0,
 QueensOpen.Solve.badPtr, L.27)
LABEL L.27
MOVE(
 TEMP t.37,
 MEM(
  TEMP t.36, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.37,
 CONST 0,
 QueensOpen.Solve.badPtr, L.28)
LABEL L.28
MOVE(
 TEMP t.35,
 SUB(
  MEM(
   TEMP t.37, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.38,
 CONST 1)
LABEL L.30
BLE(
 TEMP t.34,
 TEMP t.35,
 L.29, L.31)
LABEL L.31
LABEL L.24
JUMP(
 NAME L.21)
LABEL L.22
MOVE(
 TEMP t.134,
 CALL(
  NAME QueensOpen.Print,
  CONST 0,
  TEMP QueensOpen.Solve.self))
EXP(
 TEMP t.134)
JUMP(
 NAME L.24)
LABEL L.29
MOVE(
 TEMP QueensOpen.Solve.1.r,
 TEMP t.34)
MOVE(
 TEMP t.39,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.39,
 CONST 0,
 QueensOpen.Solve.badPtr, L.36)
LABEL L.36
MOVE(
 TEMP t.40,
 MEM(
  TEMP t.39, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.40,
 CONST 0,
 QueensOpen.Solve.badPtr, L.37)
LABEL L.37
MOVE(
 TEMP t.42,
 TEMP t.40)
MOVE(
 TEMP t.41,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.41,
 CONST 0,
 QueensOpen.Solve.badSub, L.38)
LABEL L.38
BGE(
 TEMP t.41,
 MEM(
  TEMP t.42, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.39)
LABEL L.39
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.42, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.41,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.35, L.33)
LABEL L.33
MOVE(
 TEMP t.34,
 ADD(
  TEMP t.34,
  TEMP t.38))
JUMP(
 NAME L.30)
LABEL L.35
MOVE(
 TEMP t.43,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.43,
 CONST 0,
 QueensOpen.Solve.badPtr, L.40)
LABEL L.40
MOVE(
 TEMP t.44,
 MEM(
  TEMP t.43, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.44,
 CONST 0,
 QueensOpen.Solve.badPtr, L.41)
LABEL L.41
MOVE(
 TEMP t.46,
 TEMP t.44)
MOVE(
 TEMP t.45,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.45,
 CONST 0,
 QueensOpen.Solve.badSub, L.42)
LABEL L.42
BGE(
 TEMP t.45,
 MEM(
  TEMP t.46, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.43)
LABEL L.43
BNE(
 MEM(
  ADD(
   MEM(
    TEMP t.46, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.45,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.33, L.34)
LABEL L.34
MOVE(
 TEMP t.47,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.47,
 CONST 0,
 QueensOpen.Solve.badPtr, L.44)
LABEL L.44
MOVE(
 TEMP t.48,
 MEM(
  TEMP t.47, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.48,
 CONST 0,
 QueensOpen.Solve.badPtr, L.45)
LABEL L.45
MOVE(
 TEMP t.50,
 TEMP t.48)
MOVE(
 TEMP t.49,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.49,
 CONST 0,
 QueensOpen.Solve.badSub, L.46)
LABEL L.46
BGE(
 TEMP t.49,
 MEM(
  TEMP t.50, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.47)
LABEL L.47
BNE(
 MEM(
  ADD(
   MEM(
    TEMP t.50, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.49,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0,
 L.33, L.32)
LABEL L.32
MOVE(
 TEMP t.51,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.51,
 CONST 0,
 QueensOpen.Solve.badPtr, L.48)
LABEL L.48
MOVE(
 TEMP t.52,
 MEM(
  TEMP t.51, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.52,
 CONST 0,
 QueensOpen.Solve.badPtr, L.49)
LABEL L.49
MOVE(
 TEMP t.54,
 TEMP t.52)
MOVE(
 TEMP t.53,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.53,
 CONST 0,
 QueensOpen.Solve.badSub, L.50)
LABEL L.50
BGE(
 TEMP t.53,
 MEM(
  TEMP t.54, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.51)
LABEL L.51
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.54, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.53,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.55,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.55,
 CONST 0,
 QueensOpen.Solve.badPtr, L.52)
LABEL L.52
MOVE(
 TEMP t.56,
 MEM(
  TEMP t.55, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.56,
 CONST 0,
 QueensOpen.Solve.badPtr, L.53)
LABEL L.53
MOVE(
 TEMP t.58,
 TEMP t.56)
MOVE(
 TEMP t.57,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.57,
 CONST 0,
 QueensOpen.Solve.badSub, L.54)
LABEL L.54
BGE(
 TEMP t.57,
 MEM(
  TEMP t.58, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.55)
LABEL L.55
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.58, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.57,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.59,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.59,
 CONST 0,
 QueensOpen.Solve.badPtr, L.56)
LABEL L.56
MOVE(
 TEMP t.60,
 MEM(
  TEMP t.59, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.60,
 CONST 0,
 QueensOpen.Solve.badPtr, L.57)
LABEL L.57
MOVE(
 TEMP t.62,
 TEMP t.60)
MOVE(
 TEMP t.61,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.61,
 CONST 0,
 QueensOpen.Solve.badSub, L.58)
LABEL L.58
BGE(
 TEMP t.61,
 MEM(
  TEMP t.62, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.59)
LABEL L.59
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.62, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.61,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 1)
MOVE(
 TEMP t.63,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.63,
 CONST 0,
 QueensOpen.Solve.badPtr, L.60)
LABEL L.60
MOVE(
 TEMP t.64,
 MEM(
  TEMP t.63, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.64,
 CONST 0,
 QueensOpen.Solve.badPtr, L.61)
LABEL L.61
MOVE(
 TEMP t.66,
 TEMP t.64)
MOVE(
 TEMP t.65,
 TEMP QueensOpen.Solve.c)
BLT(
 TEMP t.65,
 CONST 0,
 QueensOpen.Solve.badSub, L.62)
LABEL L.62
BGE(
 TEMP t.65,
 MEM(
  TEMP t.66, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.63)
LABEL L.63
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.66, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.65,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Solve.1.r)
MOVE(
 TEMP t.135,
 CALL(
  MEM(
   MEM(
    TEMP QueensOpen.Solve.self, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP QueensOpen.Solve.self,
  ADD(
   TEMP QueensOpen.Solve.c,
   CONST 1)))
EXP(
 TEMP t.135)
MOVE(
 TEMP t.67,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.67,
 CONST 0,
 QueensOpen.Solve.badPtr, L.64)
LABEL L.64
MOVE(
 TEMP t.68,
 MEM(
  TEMP t.67, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.68,
 CONST 0,
 QueensOpen.Solve.badPtr, L.65)
LABEL L.65
MOVE(
 TEMP t.70,
 TEMP t.68)
MOVE(
 TEMP t.69,
 TEMP QueensOpen.Solve.1.r)
BLT(
 TEMP t.69,
 CONST 0,
 QueensOpen.Solve.badSub, L.66)
LABEL L.66
BGE(
 TEMP t.69,
 MEM(
  TEMP t.70, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.67)
LABEL L.67
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.70, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.69,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.71,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.71,
 CONST 0,
 QueensOpen.Solve.badPtr, L.68)
LABEL L.68
MOVE(
 TEMP t.72,
 MEM(
  TEMP t.71, 
  CONST 16, 8, false, false))
BEQ(
 TEMP t.72,
 CONST 0,
 QueensOpen.Solve.badPtr, L.69)
LABEL L.69
MOVE(
 TEMP t.74,
 TEMP t.72)
MOVE(
 TEMP t.73,
 ADD(
  TEMP QueensOpen.Solve.1.r,
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.73,
 CONST 0,
 QueensOpen.Solve.badSub, L.70)
LABEL L.70
BGE(
 TEMP t.73,
 MEM(
  TEMP t.74, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.71)
LABEL L.71
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.74, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.73,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
MOVE(
 TEMP t.75,
 TEMP QueensOpen.Solve.self)
BEQ(
 TEMP t.75,
 CONST 0,
 QueensOpen.Solve.badPtr, L.72)
LABEL L.72
MOVE(
 TEMP t.76,
 MEM(
  TEMP t.75, 
  CONST 24, 8, false, false))
BEQ(
 TEMP t.76,
 CONST 0,
 QueensOpen.Solve.badPtr, L.73)
LABEL L.73
MOVE(
 TEMP t.78,
 TEMP t.76)
MOVE(
 TEMP t.77,
 SUB(
  ADD(
   TEMP QueensOpen.Solve.1.r,
   SUB(
    CONST 8,
    CONST 1)),
  TEMP QueensOpen.Solve.c))
BLT(
 TEMP t.77,
 CONST 0,
 QueensOpen.Solve.badSub, L.74)
LABEL L.74
BGE(
 TEMP t.77,
 MEM(
  TEMP t.78, 
  CONST 8, 8, false, false),
 QueensOpen.Solve.badSub, L.75)
LABEL L.75
MOVE(
 MEM(
  ADD(
   MEM(
    TEMP t.78, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.77,
    CONST 8)), 
  CONST 0, 8, true, false),
 CONST 0)
JUMP(
 NAME L.33)
LABEL L.21
# Instructions:
	movq %rsi,QueensOpen.Solve.c	# QueensOpen.Solve.c := %rsi 
	movq %rdi,QueensOpen.Solve.self	# QueensOpen.Solve.self := %rdi 
L.95:	# <- 
	movq QueensOpen.Solve.self,t.32	# t.32 := QueensOpen.Solve.self 
	xorq t.136,t.136	# t.136 <- 
	cmpq t.136,t.32	# <- t.32 t.136 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.25 
L.25:	# <- 
	movq 8(t.32),t.137	# t.137 <- t.32 
	movq t.137,t.33	# t.33 := t.137 
	xorq t.138,t.138	# t.138 <- 
	cmpq t.138,t.33	# <- t.33 t.138 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.26 
L.26:	# <- 
	movq 8(t.33),t.139	# t.139 <- t.33 
	cmpq t.139,QueensOpen.Solve.c	# <- QueensOpen.Solve.c t.139 
	je L.22	# <- : goto L.22 L.23 
L.23:	# <- 
	xorq t.34,t.34	# t.34 <- 
	movq QueensOpen.Solve.self,t.36	# t.36 := QueensOpen.Solve.self 
	xorq t.140,t.140	# t.140 <- 
	cmpq t.140,t.36	# <- t.36 t.140 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.27 
L.27:	# <- 
	movq 0(t.36),t.141	# t.141 <- t.36 
	movq t.141,t.37	# t.37 := t.141 
	xorq t.142,t.142	# t.142 <- 
	cmpq t.142,t.37	# <- t.37 t.142 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.28 
L.28:	# <- 
	movq 8(t.37),t.143	# t.143 <- t.37 
	movq t.143,t.144	# t.144 := t.143 
	subq $1,t.144	# t.144 <- t.144 
	movq t.144,t.35	# t.35 := t.144 
	movq $1,t.38	# t.38 <- 
L.30:	# <- 
	cmpq t.35,t.34	# <- t.34 t.35 
	jle L.29	# <- : goto L.29 L.31 
L.31:	# <- 
L.24:	# <- 
	jmp L.21	# <- : goto L.21 
L.22:	# <- 
	movq QueensOpen.Solve.self,%rdi	# %rdi := QueensOpen.Solve.self 
	call QueensOpen.Print	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.134	# t.134 := %rax 
	jmp L.24	# <- : goto L.24 
L.29:	# <- 
	movq t.34,QueensOpen.Solve.1.r	# QueensOpen.Solve.1.r := t.34 
	movq QueensOpen.Solve.self,t.39	# t.39 := QueensOpen.Solve.self 
	xorq t.145,t.145	# t.145 <- 
	cmpq t.145,t.39	# <- t.39 t.145 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.36 
L.36:	# <- 
	movq 0(t.39),t.146	# t.146 <- t.39 
	movq t.146,t.40	# t.40 := t.146 
	xorq t.147,t.147	# t.147 <- 
	cmpq t.147,t.40	# <- t.40 t.147 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.37 
L.37:	# <- 
	movq t.40,t.42	# t.42 := t.40 
	movq QueensOpen.Solve.1.r,t.41	# t.41 := QueensOpen.Solve.1.r 
	xorq t.148,t.148	# t.148 <- 
	cmpq t.148,t.41	# <- t.41 t.148 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.38 
L.38:	# <- 
	movq 8(t.42),t.149	# t.149 <- t.42 
	cmpq t.149,t.41	# <- t.41 t.149 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.39 
L.39:	# <- 
	movq 0(t.42),t.150	# t.150 <- t.42 
	movq 0(t.150,t.41,8),t.151	# t.151 <- t.150 t.41 
	xorq t.152,t.152	# t.152 <- 
	cmpq t.152,t.151	# <- t.151 t.152 
	je L.35	# <- : goto L.35 L.33 
L.33:	# <- 
	movq t.34,t.153	# t.153 := t.34 
	addq t.38,t.153	# t.153 <- t.38 t.153 
	movq t.153,t.34	# t.34 := t.153 
	jmp L.30	# <- : goto L.30 
L.35:	# <- 
	movq QueensOpen.Solve.self,t.43	# t.43 := QueensOpen.Solve.self 
	xorq t.154,t.154	# t.154 <- 
	cmpq t.154,t.43	# <- t.43 t.154 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.40 
L.40:	# <- 
	movq 16(t.43),t.155	# t.155 <- t.43 
	movq t.155,t.44	# t.44 := t.155 
	xorq t.156,t.156	# t.156 <- 
	cmpq t.156,t.44	# <- t.44 t.156 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.41 
L.41:	# <- 
	movq t.44,t.46	# t.46 := t.44 
	movq QueensOpen.Solve.1.r,t.157	# t.157 := QueensOpen.Solve.1.r 
	addq QueensOpen.Solve.c,t.157	# t.157 <- QueensOpen.Solve.c t.157 
	movq t.157,t.45	# t.45 := t.157 
	xorq t.158,t.158	# t.158 <- 
	cmpq t.158,t.45	# <- t.45 t.158 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.42 
L.42:	# <- 
	movq 8(t.46),t.159	# t.159 <- t.46 
	cmpq t.159,t.45	# <- t.45 t.159 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.43 
L.43:	# <- 
	movq 0(t.46),t.160	# t.160 <- t.46 
	movq 0(t.160,t.45,8),t.161	# t.161 <- t.160 t.45 
	xorq t.162,t.162	# t.162 <- 
	cmpq t.162,t.161	# <- t.161 t.162 
	jne L.33	# <- : goto L.33 L.34 
L.34:	# <- 
	movq QueensOpen.Solve.self,t.47	# t.47 := QueensOpen.Solve.self 
	xorq t.163,t.163	# t.163 <- 
	cmpq t.163,t.47	# <- t.47 t.163 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.44 
L.44:	# <- 
	movq 24(t.47),t.164	# t.164 <- t.47 
	movq t.164,t.48	# t.48 := t.164 
	xorq t.165,t.165	# t.165 <- 
	cmpq t.165,t.48	# <- t.48 t.165 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.45 
L.45:	# <- 
	movq t.48,t.50	# t.50 := t.48 
	movq $8,t.166	# t.166 <- 
	movq t.166,t.167	# t.167 := t.166 
	subq $1,t.167	# t.167 <- t.167 
	movq QueensOpen.Solve.1.r,t.168	# t.168 := QueensOpen.Solve.1.r 
	addq t.167,t.168	# t.168 <- t.167 t.168 
	movq t.168,t.169	# t.169 := t.168 
	subq QueensOpen.Solve.c,t.169	# t.169 <- QueensOpen.Solve.c t.169 
	movq t.169,t.49	# t.49 := t.169 
	xorq t.170,t.170	# t.170 <- 
	cmpq t.170,t.49	# <- t.49 t.170 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.46 
L.46:	# <- 
	movq 8(t.50),t.171	# t.171 <- t.50 
	cmpq t.171,t.49	# <- t.49 t.171 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.47 
L.47:	# <- 
	movq 0(t.50),t.172	# t.172 <- t.50 
	movq 0(t.172,t.49,8),t.173	# t.173 <- t.172 t.49 
	xorq t.174,t.174	# t.174 <- 
	cmpq t.174,t.173	# <- t.173 t.174 
	jne L.33	# <- : goto L.33 L.32 
L.32:	# <- 
	movq QueensOpen.Solve.self,t.51	# t.51 := QueensOpen.Solve.self 
	xorq t.175,t.175	# t.175 <- 
	cmpq t.175,t.51	# <- t.51 t.175 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.48 
L.48:	# <- 
	movq 0(t.51),t.176	# t.176 <- t.51 
	movq t.176,t.52	# t.52 := t.176 
	xorq t.177,t.177	# t.177 <- 
	cmpq t.177,t.52	# <- t.52 t.177 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.49 
L.49:	# <- 
	movq t.52,t.54	# t.54 := t.52 
	movq QueensOpen.Solve.1.r,t.53	# t.53 := QueensOpen.Solve.1.r 
	xorq t.178,t.178	# t.178 <- 
	cmpq t.178,t.53	# <- t.53 t.178 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.50 
L.50:	# <- 
	movq 8(t.54),t.179	# t.179 <- t.54 
	cmpq t.179,t.53	# <- t.53 t.179 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.51 
L.51:	# <- 
	movq 0(t.54),t.180	# t.180 <- t.54 
	movq $1,0(t.180,t.53,8)	# <- t.180 t.53 
	movq QueensOpen.Solve.self,t.55	# t.55 := QueensOpen.Solve.self 
	xorq t.181,t.181	# t.181 <- 
	cmpq t.181,t.55	# <- t.55 t.181 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.52 
L.52:	# <- 
	movq 16(t.55),t.182	# t.182 <- t.55 
	movq t.182,t.56	# t.56 := t.182 
	xorq t.183,t.183	# t.183 <- 
	cmpq t.183,t.56	# <- t.56 t.183 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.53 
L.53:	# <- 
	movq t.56,t.58	# t.58 := t.56 
	movq QueensOpen.Solve.1.r,t.184	# t.184 := QueensOpen.Solve.1.r 
	addq QueensOpen.Solve.c,t.184	# t.184 <- QueensOpen.Solve.c t.184 
	movq t.184,t.57	# t.57 := t.184 
	xorq t.185,t.185	# t.185 <- 
	cmpq t.185,t.57	# <- t.57 t.185 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.54 
L.54:	# <- 
	movq 8(t.58),t.186	# t.186 <- t.58 
	cmpq t.186,t.57	# <- t.57 t.186 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.55 
L.55:	# <- 
	movq 0(t.58),t.187	# t.187 <- t.58 
	movq $1,0(t.187,t.57,8)	# <- t.187 t.57 
	movq QueensOpen.Solve.self,t.59	# t.59 := QueensOpen.Solve.self 
	xorq t.188,t.188	# t.188 <- 
	cmpq t.188,t.59	# <- t.59 t.188 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.56 
L.56:	# <- 
	movq 24(t.59),t.189	# t.189 <- t.59 
	movq t.189,t.60	# t.60 := t.189 
	xorq t.190,t.190	# t.190 <- 
	cmpq t.190,t.60	# <- t.60 t.190 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.57 
L.57:	# <- 
	movq t.60,t.62	# t.62 := t.60 
	movq $8,t.191	# t.191 <- 
	movq t.191,t.192	# t.192 := t.191 
	subq $1,t.192	# t.192 <- t.192 
	movq QueensOpen.Solve.1.r,t.193	# t.193 := QueensOpen.Solve.1.r 
	addq t.192,t.193	# t.193 <- t.192 t.193 
	movq t.193,t.194	# t.194 := t.193 
	subq QueensOpen.Solve.c,t.194	# t.194 <- QueensOpen.Solve.c t.194 
	movq t.194,t.61	# t.61 := t.194 
	xorq t.195,t.195	# t.195 <- 
	cmpq t.195,t.61	# <- t.61 t.195 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.58 
L.58:	# <- 
	movq 8(t.62),t.196	# t.196 <- t.62 
	cmpq t.196,t.61	# <- t.61 t.196 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.59 
L.59:	# <- 
	movq 0(t.62),t.197	# t.197 <- t.62 
	movq $1,0(t.197,t.61,8)	# <- t.197 t.61 
	movq QueensOpen.Solve.self,t.63	# t.63 := QueensOpen.Solve.self 
	xorq t.198,t.198	# t.198 <- 
	cmpq t.198,t.63	# <- t.63 t.198 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.60 
L.60:	# <- 
	movq 8(t.63),t.199	# t.199 <- t.63 
	movq t.199,t.64	# t.64 := t.199 
	xorq t.200,t.200	# t.200 <- 
	cmpq t.200,t.64	# <- t.64 t.200 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.61 
L.61:	# <- 
	movq t.64,t.66	# t.66 := t.64 
	movq QueensOpen.Solve.c,t.65	# t.65 := QueensOpen.Solve.c 
	xorq t.201,t.201	# t.201 <- 
	cmpq t.201,t.65	# <- t.65 t.201 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.62 
L.62:	# <- 
	movq 8(t.66),t.202	# t.202 <- t.66 
	cmpq t.202,t.65	# <- t.65 t.202 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.63 
L.63:	# <- 
	movq 0(t.66),t.203	# t.203 <- t.66 
	movq QueensOpen.Solve.1.r,0(t.203,t.65,8)	# <- t.203 t.65 QueensOpen.Solve.1.r 
	movq -8(QueensOpen.Solve.self),t.204	# t.204 <- QueensOpen.Solve.self 
	movq 8(t.204),t.205	# t.205 <- t.204 
	movq QueensOpen.Solve.self,%rdi	# %rdi := QueensOpen.Solve.self 
	movq QueensOpen.Solve.c,t.206	# t.206 := QueensOpen.Solve.c 
	addq $1,t.206	# t.206 <- t.206 
	movq t.206,%rsi	# %rsi := t.206 
	call *t.205	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- t.205 %rdi %rsi 
	movq %rax,t.135	# t.135 := %rax 
	movq QueensOpen.Solve.self,t.67	# t.67 := QueensOpen.Solve.self 
	xorq t.207,t.207	# t.207 <- 
	cmpq t.207,t.67	# <- t.67 t.207 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.64 
L.64:	# <- 
	movq 0(t.67),t.208	# t.208 <- t.67 
	movq t.208,t.68	# t.68 := t.208 
	xorq t.209,t.209	# t.209 <- 
	cmpq t.209,t.68	# <- t.68 t.209 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.65 
L.65:	# <- 
	movq t.68,t.70	# t.70 := t.68 
	movq QueensOpen.Solve.1.r,t.69	# t.69 := QueensOpen.Solve.1.r 
	xorq t.210,t.210	# t.210 <- 
	cmpq t.210,t.69	# <- t.69 t.210 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.66 
L.66:	# <- 
	movq 8(t.70),t.211	# t.211 <- t.70 
	cmpq t.211,t.69	# <- t.69 t.211 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.67 
L.67:	# <- 
	movq 0(t.70),t.212	# t.212 <- t.70 
	movq $0,0(t.212,t.69,8)	# <- t.212 t.69 
	movq QueensOpen.Solve.self,t.71	# t.71 := QueensOpen.Solve.self 
	xorq t.213,t.213	# t.213 <- 
	cmpq t.213,t.71	# <- t.71 t.213 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.68 
L.68:	# <- 
	movq 16(t.71),t.214	# t.214 <- t.71 
	movq t.214,t.72	# t.72 := t.214 
	xorq t.215,t.215	# t.215 <- 
	cmpq t.215,t.72	# <- t.72 t.215 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.69 
L.69:	# <- 
	movq t.72,t.74	# t.74 := t.72 
	movq QueensOpen.Solve.1.r,t.216	# t.216 := QueensOpen.Solve.1.r 
	addq QueensOpen.Solve.c,t.216	# t.216 <- QueensOpen.Solve.c t.216 
	movq t.216,t.73	# t.73 := t.216 
	xorq t.217,t.217	# t.217 <- 
	cmpq t.217,t.73	# <- t.73 t.217 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.70 
L.70:	# <- 
	movq 8(t.74),t.218	# t.218 <- t.74 
	cmpq t.218,t.73	# <- t.73 t.218 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.71 
L.71:	# <- 
	movq 0(t.74),t.219	# t.219 <- t.74 
	movq $0,0(t.219,t.73,8)	# <- t.219 t.73 
	movq QueensOpen.Solve.self,t.75	# t.75 := QueensOpen.Solve.self 
	xorq t.220,t.220	# t.220 <- 
	cmpq t.220,t.75	# <- t.75 t.220 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.72 
L.72:	# <- 
	movq 24(t.75),t.221	# t.221 <- t.75 
	movq t.221,t.76	# t.76 := t.221 
	xorq t.222,t.222	# t.222 <- 
	cmpq t.222,t.76	# <- t.76 t.222 
	je QueensOpen.Solve.badPtr	# <- : goto QueensOpen.Solve.badPtr L.73 
L.73:	# <- 
	movq t.76,t.78	# t.78 := t.76 
	movq $8,t.223	# t.223 <- 
	movq t.223,t.224	# t.224 := t.223 
	subq $1,t.224	# t.224 <- t.224 
	movq QueensOpen.Solve.1.r,t.225	# t.225 := QueensOpen.Solve.1.r 
	addq t.224,t.225	# t.225 <- t.224 t.225 
	movq t.225,t.226	# t.226 := t.225 
	subq QueensOpen.Solve.c,t.226	# t.226 <- QueensOpen.Solve.c t.226 
	movq t.226,t.77	# t.77 := t.226 
	xorq t.227,t.227	# t.227 <- 
	cmpq t.227,t.77	# <- t.77 t.227 
	jl QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.74 
L.74:	# <- 
	movq 8(t.78),t.228	# t.228 <- t.78 
	cmpq t.228,t.77	# <- t.77 t.228 
	jge QueensOpen.Solve.badSub	# <- : goto QueensOpen.Solve.badSub L.75 
L.75:	# <- 
	movq 0(t.78),t.229	# t.229 <- t.78 
	movq $0,0(t.229,t.77,8)	# <- t.229 t.77 
	jmp L.33	# <- : goto L.33 
L.21:	# <- 
# Control Flow Graph:
0: QueensOpen.Solve.c QueensOpen.Solve.self <- %rsi %rdi; goto 1
1: t.32 t.136 <- QueensOpen.Solve.self; goto 2
2: t.137 t.33 t.138 <- t.32; goto 3
3: t.139 <- t.33 QueensOpen.Solve.c; goto 9 4
4: t.34 t.36 t.140 <- QueensOpen.Solve.self; goto 5
5: t.141 t.37 t.142 <- t.36; goto 6
6: t.143 t.144 t.35 t.38 <- t.37; goto 7
7: <- t.34 t.35; goto 10 8
8: <-; goto 55
9: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.134 <- QueensOpen.Solve.self; goto 8
10: QueensOpen.Solve.1.r t.39 t.145 <- t.34 QueensOpen.Solve.self; goto 11
11: t.146 t.40 t.147 <- t.39; goto 12
12: t.42 t.41 t.148 <- t.40 QueensOpen.Solve.1.r; goto 13
13: t.149 <- t.42 t.41; goto 14
14: t.150 t.151 t.152 <- t.42 t.41; goto 16 15
15: t.153 t.34 <- t.34 t.38; goto 7
16: t.43 t.154 <- QueensOpen.Solve.self; goto 17
17: t.155 t.44 t.156 <- t.43; goto 18
18: t.46 t.157 t.45 t.158 <- t.44 QueensOpen.Solve.1.r QueensOpen.Solve.c; goto 19
19: t.159 <- t.46 t.45; goto 20
20: t.160 t.161 t.162 <- t.46 t.45; goto 15 21
21: t.47 t.163 <- QueensOpen.Solve.self; goto 22
22: t.164 t.48 t.165 <- t.47; goto 23
23: t.50 t.166 t.167 t.168 t.169 t.49 t.170 <- t.48 QueensOpen.Solve.1.r QueensOpen.Solve.c; goto 24
24: t.171 <- t.50 t.49; goto 25
25: t.172 t.173 t.174 <- t.50 t.49; goto 15 26
26: t.51 t.175 <- QueensOpen.Solve.self; goto 27
27: t.176 t.52 t.177 <- t.51; goto 28
28: t.54 t.53 t.178 <- t.52 QueensOpen.Solve.1.r; goto 29
29: t.179 <- t.54 t.53; goto 30
30: t.180 t.55 t.181 <- t.54 t.53 QueensOpen.Solve.self; goto 31
31: t.182 t.56 t.183 <- t.55; goto 32
32: t.58 t.184 t.57 t.185 <- t.56 QueensOpen.Solve.1.r QueensOpen.Solve.c; goto 33
33: t.186 <- t.58 t.57; goto 34
34: t.187 t.59 t.188 <- t.58 t.57 QueensOpen.Solve.self; goto 35
35: t.189 t.60 t.190 <- t.59; goto 36
36: t.62 t.191 t.192 t.193 t.194 t.61 t.195 <- t.60 QueensOpen.Solve.1.r QueensOpen.Solve.c; goto 37
37: t.196 <- t.62 t.61; goto 38
38: t.197 t.63 t.198 <- t.62 t.61 QueensOpen.Solve.self; goto 39
39: t.199 t.64 t.200 <- t.63; goto 40
40: t.66 t.65 t.201 <- t.64 QueensOpen.Solve.c; goto 41
41: t.202 <- t.66 t.65; goto 42
42: t.203 t.204 t.205 %rdi t.206 %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.135 t.67 t.207 <- t.66 t.65 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c; goto 43
43: t.208 t.68 t.209 <- t.67; goto 44
44: t.70 t.69 t.210 <- t.68 QueensOpen.Solve.1.r; goto 45
45: t.211 <- t.70 t.69; goto 46
46: t.212 t.71 t.213 <- t.70 t.69 QueensOpen.Solve.self; goto 47
47: t.214 t.72 t.215 <- t.71; goto 48
48: t.74 t.216 t.73 t.217 <- t.72 QueensOpen.Solve.1.r QueensOpen.Solve.c; goto 49
49: t.218 <- t.74 t.73; goto 50
50: t.219 t.75 t.220 <- t.74 t.73 QueensOpen.Solve.self; goto 51
51: t.221 t.76 t.222 <- t.75; goto 52
52: t.78 t.223 t.224 t.225 t.226 t.77 t.227 <- t.76 QueensOpen.Solve.1.r QueensOpen.Solve.c; goto 53
53: t.228 <- t.78 t.77; goto 54
54: t.229 <- t.78 t.77; goto 15
55: <- %rsp %rbp; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
QueensOpen.Solve.c: QueensOpen.Solve.self %rsp %rbp %rdi t.136 t.32 t.138 t.33 t.137 t.139 t.140 t.36 t.34 t.142 t.37 t.141 t.38 t.35 t.144 t.143 t.145 t.39 QueensOpen.Solve.1.r t.147 t.40 t.146 t.148 t.41 t.42 t.149 t.152 t.151 t.150 t.153 t.154 t.43 t.156 t.44 t.155 t.158 t.45 t.157 t.46 t.159 t.162 t.161 t.160 t.163 t.47 t.165 t.48 t.164 t.170 t.49 t.169 t.168 t.167 t.166 t.50 t.171 t.174 t.173 t.172 t.175 t.51 t.177 t.52 t.176 t.178 t.53 t.54 t.179 t.181 t.55 t.180 t.183 t.56 t.182 t.185 t.57 t.184 t.58 t.186 t.188 t.59 t.187 t.190 t.60 t.189 t.195 t.61 t.194 t.193 t.192 t.191 t.62 t.196 t.198 t.63 t.197 t.200 t.64 t.199 t.201 t.66 t.202 t.207 t.67 t.135 %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.206 t.205 t.204 t.203 t.209 t.68 t.208 t.210 t.69 t.70 t.211 t.213 t.71 t.212 t.215 t.72 t.214 t.217 t.73 t.216 t.74 t.218 t.220 t.75 t.219 t.222 t.76 t.221 t.227 t.77 t.226 t.225 t.224 t.223 t.78 t.228 t.229 
QueensOpen.Solve.self: QueensOpen.Solve.c %rsp %rbp t.136 t.138 t.33 t.137 t.139 t.140 t.34 t.142 t.37 t.141 t.38 t.35 t.144 t.143 t.145 QueensOpen.Solve.1.r t.147 t.40 t.146 t.148 t.41 t.42 t.149 t.152 t.151 t.150 t.153 t.154 t.156 t.44 t.155 t.158 t.45 t.157 t.46 t.159 t.162 t.161 t.160 t.163 t.165 t.48 t.164 t.170 t.49 t.169 t.168 t.167 t.166 t.50 t.171 t.174 t.173 t.172 t.175 t.177 t.52 t.176 t.178 t.53 t.54 t.179 t.181 t.180 t.183 t.56 t.182 t.185 t.57 t.184 t.58 t.186 t.188 t.187 t.190 t.60 t.189 t.195 t.61 t.194 t.193 t.192 t.191 t.62 t.196 t.198 t.197 t.200 t.64 t.199 t.201 t.65 t.66 t.202 t.207 t.135 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.206 t.205 t.204 t.203 t.209 t.68 t.208 t.210 t.69 t.70 t.211 t.213 t.212 t.215 t.72 t.214 t.217 t.73 t.216 t.74 t.218 t.220 t.219 t.222 t.76 t.221 t.227 t.77 t.226 t.225 t.224 t.223 t.78 t.228 t.229 
t.32: t.136 QueensOpen.Solve.c %rsp %rbp 
t.136: t.32 QueensOpen.Solve.c QueensOpen.Solve.self %rsp %rbp 
t.137: QueensOpen.Solve.c QueensOpen.Solve.self %rsp %rbp 
t.33: t.138 QueensOpen.Solve.c QueensOpen.Solve.self %rsp %rbp 
t.138: t.33 QueensOpen.Solve.c QueensOpen.Solve.self %rsp %rbp 
t.139: QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.34: t.140 t.36 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp t.142 t.37 t.141 t.38 t.35 t.144 t.143 t.145 t.39 t.147 t.40 t.146 t.148 t.41 t.42 t.149 t.152 t.151 t.150 t.154 t.43 t.156 t.44 t.155 t.158 t.45 t.157 t.46 t.159 t.162 t.161 t.160 t.163 t.47 t.165 t.48 t.164 t.170 t.49 t.169 t.168 t.167 t.166 t.50 t.171 t.174 t.173 t.172 t.175 t.51 t.177 t.52 t.176 t.178 t.53 t.54 t.179 t.181 t.55 t.180 t.183 t.56 t.182 t.185 t.57 t.184 t.58 t.186 t.188 t.59 t.187 t.190 t.60 t.189 t.195 t.61 t.194 t.193 t.192 t.191 t.62 t.196 t.198 t.63 t.197 t.200 t.64 t.199 t.201 t.65 t.66 t.202 t.207 t.67 t.135 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.206 t.205 t.204 t.203 t.209 t.68 t.208 t.210 t.69 t.70 t.211 t.213 t.71 t.212 t.215 t.72 t.214 t.217 t.73 t.216 t.74 t.218 t.220 t.75 t.219 t.222 t.76 t.221 t.227 t.77 t.226 t.225 t.224 t.223 t.78 t.228 t.229 
t.36: t.140 t.34 QueensOpen.Solve.c %rsp %rbp 
t.140: t.36 t.34 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.141: t.34 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.37: t.142 t.34 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.142: t.37 t.34 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.143: t.34 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.144: t.34 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.35: t.38 t.34 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp t.145 t.39 QueensOpen.Solve.1.r t.147 t.40 t.146 t.148 t.41 t.42 t.149 t.152 t.151 t.150 t.153 t.154 t.43 t.156 t.44 t.155 t.158 t.45 t.157 t.46 t.159 t.162 t.161 t.160 t.163 t.47 t.165 t.48 t.164 t.170 t.49 t.169 t.168 t.167 t.166 t.50 t.171 t.174 t.173 t.172 t.175 t.51 t.177 t.52 t.176 t.178 t.53 t.54 t.179 t.181 t.55 t.180 t.183 t.56 t.182 t.185 t.57 t.184 t.58 t.186 t.188 t.59 t.187 t.190 t.60 t.189 t.195 t.61 t.194 t.193 t.192 t.191 t.62 t.196 t.198 t.63 t.197 t.200 t.64 t.199 t.201 t.65 t.66 t.202 t.207 t.67 t.135 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.206 t.205 t.204 t.203 t.209 t.68 t.208 t.210 t.69 t.70 t.211 t.213 t.71 t.212 t.215 t.72 t.214 t.217 t.73 t.216 t.74 t.218 t.220 t.75 t.219 t.222 t.76 t.221 t.227 t.77 t.226 t.225 t.224 t.223 t.78 t.228 t.229 
t.38: t.34 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp t.145 t.39 QueensOpen.Solve.1.r t.147 t.40 t.146 t.148 t.41 t.42 t.149 t.152 t.151 t.150 t.153 t.154 t.43 t.156 t.44 t.155 t.158 t.45 t.157 t.46 t.159 t.162 t.161 t.160 t.163 t.47 t.165 t.48 t.164 t.170 t.49 t.169 t.168 t.167 t.166 t.50 t.171 t.174 t.173 t.172 t.175 t.51 t.177 t.52 t.176 t.178 t.53 t.54 t.179 t.181 t.55 t.180 t.183 t.56 t.182 t.185 t.57 t.184 t.58 t.186 t.188 t.59 t.187 t.190 t.60 t.189 t.195 t.61 t.194 t.193 t.192 t.191 t.62 t.196 t.198 t.63 t.197 t.200 t.64 t.199 t.201 t.65 t.66 t.202 t.207 t.67 t.135 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.206 t.205 t.204 t.203 t.209 t.68 t.208 t.210 t.69 t.70 t.211 t.213 t.71 t.212 t.215 t.72 t.214 t.217 t.73 t.216 t.74 t.218 t.220 t.75 t.219 t.222 t.76 t.221 t.227 t.77 t.226 t.225 t.224 t.223 t.78 t.228 t.229 
t.134: %rsp %rbp 
QueensOpen.Solve.1.r: t.145 t.39 QueensOpen.Solve.self QueensOpen.Solve.c t.38 t.35 %rsp %rbp t.147 t.40 t.146 t.148 t.42 t.149 t.152 t.151 t.150 t.154 t.43 t.156 t.44 t.155 t.158 t.45 t.157 t.46 t.159 t.162 t.161 t.160 t.163 t.47 t.165 t.48 t.164 t.170 t.49 t.169 t.168 t.167 t.166 t.50 t.171 t.174 t.173 t.172 t.175 t.51 t.177 t.52 t.176 t.178 t.54 t.179 t.181 t.55 t.180 t.183 t.56 t.182 t.185 t.57 t.184 t.58 t.186 t.188 t.59 t.187 t.190 t.60 t.189 t.195 t.61 t.194 t.193 t.192 t.191 t.62 t.196 t.198 t.63 t.197 t.200 t.64 t.199 t.201 t.65 t.66 t.202 t.207 t.67 t.135 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.206 t.205 t.204 t.203 t.209 t.68 t.208 t.210 t.70 t.211 t.213 t.71 t.212 t.215 t.72 t.214 t.217 t.73 t.216 t.74 t.218 t.220 t.75 t.219 t.222 t.76 t.221 t.224 t.223 t.78 
t.39: t.145 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.145: t.39 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.146: QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.40: t.147 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.147: t.40 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.42: t.148 t.41 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.149 
t.41: t.148 t.42 QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.149 t.150 
t.148: t.42 t.41 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.149: t.42 t.41 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.150: QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.41 
t.151: t.152 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.152: QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.151 
t.153: t.35 QueensOpen.Solve.self QueensOpen.Solve.c t.38 %rsp %rbp 
t.43: t.154 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.154: t.43 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.155: QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.44: t.156 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.156: t.44 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.46: t.158 t.45 t.157 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.159 
t.157: t.46 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.45: t.158 t.46 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.159 t.160 
t.158: t.46 t.45 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.159: t.46 t.45 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.160: t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.45 
t.161: t.162 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.162: t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.161 
t.47: t.163 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.163: t.47 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.164: QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.48: t.165 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.165: t.48 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 QueensOpen.Solve.self t.35 %rsp %rbp 
t.50: t.170 t.49 t.169 t.168 t.167 t.166 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.171 
t.166: t.50 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.167: t.168 t.50 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.168: t.50 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.167 
t.169: t.50 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.49: t.170 t.50 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.171 t.172 
t.170: t.50 t.49 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.171: t.50 t.49 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.172: t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.49 
t.173: t.174 t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp 
t.174: t.34 t.38 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.35 %rsp %rbp t.173 
t.51: t.175 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.175: t.51 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.176: QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.52: t.177 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.177: t.52 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.54: t.178 t.53 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.179 
t.53: t.178 t.54 QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.179 t.180 
t.178: t.54 t.53 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.179: t.54 t.53 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.180: QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp t.53 
t.55: t.181 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.181: t.55 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.182: QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.56: t.183 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.183: t.56 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.58: t.185 t.57 t.184 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.186 
t.184: t.58 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.57: t.185 t.58 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.186 t.187 
t.185: t.58 t.57 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.186: t.58 t.57 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.187: QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp t.57 
t.59: t.188 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.188: t.59 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.189: QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.60: t.190 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.190: t.60 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.62: t.195 t.61 t.194 t.193 t.192 t.191 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp t.196 
t.191: t.62 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp 
t.192: t.193 t.62 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp 
t.193: t.62 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp t.192 
t.194: t.62 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp 
t.61: t.195 t.62 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp t.196 t.197 
t.195: t.62 t.61 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp 
t.196: t.62 t.61 QueensOpen.Solve.self QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp 
t.197: QueensOpen.Solve.c QueensOpen.Solve.1.r QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp t.61 
t.63: t.198 QueensOpen.Solve.c QueensOpen.Solve.1.r t.34 t.38 t.35 %rsp %rbp 
t.198: t.63 QueensOpen.Solve.c QueensOpen.Solve.1.r QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.199: QueensOpen.Solve.c QueensOpen.Solve.1.r QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.64: t.200 QueensOpen.Solve.c QueensOpen.Solve.1.r QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.200: t.64 QueensOpen.Solve.c QueensOpen.Solve.1.r QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.66: t.201 t.65 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.202 
t.65: t.201 t.66 QueensOpen.Solve.1.r QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp t.202 t.203 
t.201: t.66 t.65 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.202: t.66 t.65 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.203: QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.65 
t.204: QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.205: %rsi t.206 %rdi QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.206: QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.205 %rdi 
t.135: QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.67: t.207 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.207: t.67 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.208: QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.68: t.209 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.209: t.68 QueensOpen.Solve.1.r QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.70: t.210 t.69 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.211 
t.69: t.210 t.70 QueensOpen.Solve.self QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.211 t.212 
t.210: t.70 t.69 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.211: t.70 t.69 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.212: QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp t.69 
t.71: t.213 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.213: t.71 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.214: QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.72: t.215 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.215: t.72 QueensOpen.Solve.1.r QueensOpen.Solve.c QueensOpen.Solve.self t.34 t.38 t.35 %rsp %rbp 
t.74: t.217 t.73 t.216 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.218 
t.216: t.74 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.73: t.217 t.74 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp t.218 t.219 
t.217: t.74 t.73 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.218: t.74 t.73 QueensOpen.Solve.self QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.219: QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 QueensOpen.Solve.self %rsp %rbp t.73 
t.75: t.220 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 %rsp %rbp 
t.220: t.75 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 QueensOpen.Solve.self %rsp %rbp 
t.221: QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 QueensOpen.Solve.self %rsp %rbp 
t.76: t.222 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 QueensOpen.Solve.self %rsp %rbp 
t.222: t.76 QueensOpen.Solve.1.r QueensOpen.Solve.c t.34 t.38 t.35 QueensOpen.Solve.self %rsp %rbp 
t.78: t.227 t.77 t.226 t.225 t.224 t.223 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp QueensOpen.Solve.1.r t.228 
t.223: t.78 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp QueensOpen.Solve.1.r 
t.224: t.225 t.78 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp QueensOpen.Solve.1.r 
t.225: t.78 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp t.224 
t.226: t.78 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.77: t.227 t.78 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp t.228 t.229 
t.227: t.78 t.77 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.228: t.78 t.77 t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp 
t.229: t.34 t.38 t.35 QueensOpen.Solve.self QueensOpen.Solve.c %rsp %rbp t.77 
t.78 <= t.76
t.224 <= t.223
t.225 <= QueensOpen.Solve.1.r
t.226 <= t.225
t.77 <= t.226
t.76 <= t.221
t.75 <= QueensOpen.Solve.self
t.74 <= t.72
t.216 <= QueensOpen.Solve.1.r
t.73 <= t.216
t.72 <= t.214
t.71 <= QueensOpen.Solve.self
t.70 <= t.68
t.69 <= QueensOpen.Solve.1.r
t.68 <= t.208
%rdi <= QueensOpen.Solve.self
t.206 <= QueensOpen.Solve.c
%rsi <= t.206
t.135 <= %rax
t.67 <= QueensOpen.Solve.self
t.66 <= t.64
t.65 <= QueensOpen.Solve.c
t.64 <= t.199
t.63 <= QueensOpen.Solve.self
t.62 <= t.60
t.192 <= t.191
t.193 <= QueensOpen.Solve.1.r
t.194 <= t.193
t.61 <= t.194
t.60 <= t.189
t.59 <= QueensOpen.Solve.self
t.58 <= t.56
t.184 <= QueensOpen.Solve.1.r
t.57 <= t.184
t.56 <= t.182
t.55 <= QueensOpen.Solve.self
t.54 <= t.52
t.53 <= QueensOpen.Solve.1.r
t.52 <= t.176
t.51 <= QueensOpen.Solve.self
t.50 <= t.48
t.167 <= t.166
t.168 <= QueensOpen.Solve.1.r
t.169 <= t.168
t.49 <= t.169
t.48 <= t.164
t.47 <= QueensOpen.Solve.self
t.46 <= t.44
t.157 <= QueensOpen.Solve.1.r
t.45 <= t.157
t.44 <= t.155
t.43 <= QueensOpen.Solve.self
t.153 <= t.34
t.34 <= t.153
t.42 <= t.40
t.41 <= QueensOpen.Solve.1.r
t.40 <= t.146
QueensOpen.Solve.1.r <= t.34
t.39 <= QueensOpen.Solve.self
%rdi <= QueensOpen.Solve.self
t.134 <= %rax
t.144 <= t.143
t.35 <= t.144
t.37 <= t.141
t.36 <= QueensOpen.Solve.self
t.33 <= t.137
t.32 <= QueensOpen.Solve.self
QueensOpen.Solve.c <= %rsi
QueensOpen.Solve.self <= %rdi
# Register Allocation:
%rax->%rax
%rbx->%rbx
%rcx->%rcx
%rdx->%rdx
%rsp->%rsp
%rbp->%rbp
%rsi->%rsi
%rdi->%rdi
%r8->%r8
%r9->%r9
%r10->%r10
%r11->%r11
%r12->%r12
%r13->%r13
%r14->%r14
%r15->%r15
QueensOpen.Solve.c->%r15
QueensOpen.Solve.self->%rbx
t.32->%rbx
t.136->%rax
t.137->%rax
t.33->%rax
t.138->%rcx
t.139->%rax
t.34->%r14
t.36->%rbx
t.140->%rax
t.141->%rax
t.37->%rax
t.142->%rcx
t.143->%r12
t.144->%r12
t.35->%r12
t.38->%r13
t.134->%rax
QueensOpen.Solve.1.r->%r14
t.39->%rbx
t.145->%rax
t.146->%rcx
t.40->%rcx
t.147->%rax
t.42->%rcx
t.41->%rax
t.148->%rdx
t.149->%rdx
t.150->%rcx
t.151->%rcx
t.152->%rax
t.153->%r14
t.43->%rax
t.154->%rcx
t.155->%rax
t.44->%rax
t.156->%rcx
t.46->%rax
t.157->%rcx
t.45->%rcx
t.158->%rdx
t.159->%rdx
t.160->%rax
t.161->%rcx
t.162->%rax
t.47->%rax
t.163->%rcx
t.164->%rax
t.48->%rax
t.165->%rcx
t.50->%rax
t.166->%rdx
t.167->%rdx
t.168->%rcx
t.169->%rcx
t.49->%rcx
t.170->%rdx
t.171->%rdx
t.172->%rax
t.173->%rcx
t.174->%rax
t.51->%rax
t.175->%rcx
t.176->%rcx
t.52->%rcx
t.177->%rax
t.54->%rcx
t.53->%rax
t.178->%rdx
t.179->%rdx
t.180->%rcx
t.55->%rax
t.181->%rcx
t.182->%rax
t.56->%rax
t.183->%rcx
t.58->%rax
t.184->%rcx
t.57->%rcx
t.185->%rdx
t.186->%rdx
t.187->%rax
t.59->%rax
t.188->%rcx
t.189->%rax
t.60->%rax
t.190->%rcx
t.62->%rax
t.191->%rdx
t.192->%rdx
t.193->%rcx
t.194->%rcx
t.61->%rcx
t.195->%rdx
t.196->%rdx
t.197->%rax
t.63->%rax
t.198->%rcx
t.199->%rcx
t.64->%rcx
t.200->%rax
t.66->%rcx
t.65->%rax
t.201->%rdx
t.202->%rdx
t.203->%rcx
t.204->%rax
t.205->%rax
t.206->%rsi
t.135->%rax
t.67->%rbx
t.207->%rax
t.208->%rcx
t.68->%rcx
t.209->%rax
t.70->%rcx
t.69->%rax
t.210->%rdx
t.211->%rdx
t.212->%rcx
t.71->%rbx
t.213->%rax
t.214->%rax
t.72->%rax
t.215->%rcx
t.74->%rax
t.216->%rcx
t.73->%rcx
t.217->%rdx
t.218->%rdx
t.219->%rax
t.75->%rbx
t.220->%rax
t.221->%rcx
t.76->%rcx
t.222->%rax
t.78->%rcx
t.223->%rdx
t.224->%rdx
t.225->%rax
t.226->%rax
t.77->%rax
t.227->%rdx
t.228->%rdx
t.229->%rcx
# Assembly code:
	.text
QueensOpen.Solve:
	pushq %rbp
	movq %rsp,%rbp
	subq $64,%rsp
	movq %r15, -40(%rbp)
	movq %r14, -32(%rbp)
	movq %r13, -24(%rbp)
	movq %r12, -16(%rbp)
	movq %rbx, -8(%rbp)
	movq %rsi,%r15
	movq %rdi,%rbx
L.95:
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Solve.badPtr
L.25:
	movq 8(%rbx),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.26:
	movq 8(%rax),%rax
	cmpq %rax,%r15
	je L.22
L.23:
	xorq %r14,%r14
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Solve.badPtr
L.27:
	movq 0(%rbx),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.28:
	movq 8(%rax),%r12
#	movq %r12,%r12
	subq $1,%r12
#	movq %r12,%r12
	movq $1,%r13
L.30:
	cmpq %r12,%r14
	jle L.29
L.31:
L.24:
	jmp L.21
L.22:
	movq %rbx,%rdi
	call QueensOpen.Print
#	movq %rax,%rax
	jmp L.24
L.29:
#	movq %r14,%r14
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Solve.badPtr
L.36:
	movq 0(%rbx),%rcx
#	movq %rcx,%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	je QueensOpen.Solve.badPtr
L.37:
#	movq %rcx,%rcx
	movq %r14,%rax
	xorq %rdx,%rdx
	cmpq %rdx,%rax
	jl QueensOpen.Solve.badSub
L.38:
	movq 8(%rcx),%rdx
	cmpq %rdx,%rax
	jge QueensOpen.Solve.badSub
L.39:
	movq 0(%rcx),%rcx
	movq 0(%rcx,%rax,8),%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	je L.35
L.33:
#	movq %r14,%r14
	addq %r13,%r14
#	movq %r14,%r14
	jmp L.30
L.35:
	movq %rbx,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.40:
	movq 16(%rax),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.41:
#	movq %rax,%rax
	movq %r14,%rcx
	addq %r15,%rcx
#	movq %rcx,%rcx
	xorq %rdx,%rdx
	cmpq %rdx,%rcx
	jl QueensOpen.Solve.badSub
L.42:
	movq 8(%rax),%rdx
	cmpq %rdx,%rcx
	jge QueensOpen.Solve.badSub
L.43:
	movq 0(%rax),%rax
	movq 0(%rax,%rcx,8),%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	jne L.33
L.34:
	movq %rbx,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.44:
	movq 24(%rax),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.45:
#	movq %rax,%rax
	movq $8,%rdx
#	movq %rdx,%rdx
	subq $1,%rdx
	movq %r14,%rcx
	addq %rdx,%rcx
#	movq %rcx,%rcx
	subq %r15,%rcx
#	movq %rcx,%rcx
	xorq %rdx,%rdx
	cmpq %rdx,%rcx
	jl QueensOpen.Solve.badSub
L.46:
	movq 8(%rax),%rdx
	cmpq %rdx,%rcx
	jge QueensOpen.Solve.badSub
L.47:
	movq 0(%rax),%rax
	movq 0(%rax,%rcx,8),%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	jne L.33
L.32:
	movq %rbx,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.48:
	movq 0(%rax),%rcx
#	movq %rcx,%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	je QueensOpen.Solve.badPtr
L.49:
#	movq %rcx,%rcx
	movq %r14,%rax
	xorq %rdx,%rdx
	cmpq %rdx,%rax
	jl QueensOpen.Solve.badSub
L.50:
	movq 8(%rcx),%rdx
	cmpq %rdx,%rax
	jge QueensOpen.Solve.badSub
L.51:
	movq 0(%rcx),%rcx
	movq $1,0(%rcx,%rax,8)
	movq %rbx,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.52:
	movq 16(%rax),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.53:
#	movq %rax,%rax
	movq %r14,%rcx
	addq %r15,%rcx
#	movq %rcx,%rcx
	xorq %rdx,%rdx
	cmpq %rdx,%rcx
	jl QueensOpen.Solve.badSub
L.54:
	movq 8(%rax),%rdx
	cmpq %rdx,%rcx
	jge QueensOpen.Solve.badSub
L.55:
	movq 0(%rax),%rax
	movq $1,0(%rax,%rcx,8)
	movq %rbx,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.56:
	movq 24(%rax),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.57:
#	movq %rax,%rax
	movq $8,%rdx
#	movq %rdx,%rdx
	subq $1,%rdx
	movq %r14,%rcx
	addq %rdx,%rcx
#	movq %rcx,%rcx
	subq %r15,%rcx
#	movq %rcx,%rcx
	xorq %rdx,%rdx
	cmpq %rdx,%rcx
	jl QueensOpen.Solve.badSub
L.58:
	movq 8(%rax),%rdx
	cmpq %rdx,%rcx
	jge QueensOpen.Solve.badSub
L.59:
	movq 0(%rax),%rax
	movq $1,0(%rax,%rcx,8)
	movq %rbx,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.60:
	movq 8(%rax),%rcx
#	movq %rcx,%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	je QueensOpen.Solve.badPtr
L.61:
#	movq %rcx,%rcx
	movq %r15,%rax
	xorq %rdx,%rdx
	cmpq %rdx,%rax
	jl QueensOpen.Solve.badSub
L.62:
	movq 8(%rcx),%rdx
	cmpq %rdx,%rax
	jge QueensOpen.Solve.badSub
L.63:
	movq 0(%rcx),%rcx
	movq %r14,0(%rcx,%rax,8)
	movq -8(%rbx),%rax
	movq 8(%rax),%rax
	movq %rbx,%rdi
	movq %r15,%rsi
	addq $1,%rsi
#	movq %rsi,%rsi
	call *%rax
#	movq %rax,%rax
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Solve.badPtr
L.64:
	movq 0(%rbx),%rcx
#	movq %rcx,%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	je QueensOpen.Solve.badPtr
L.65:
#	movq %rcx,%rcx
	movq %r14,%rax
	xorq %rdx,%rdx
	cmpq %rdx,%rax
	jl QueensOpen.Solve.badSub
L.66:
	movq 8(%rcx),%rdx
	cmpq %rdx,%rax
	jge QueensOpen.Solve.badSub
L.67:
	movq 0(%rcx),%rcx
	movq $0,0(%rcx,%rax,8)
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Solve.badPtr
L.68:
	movq 16(%rbx),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Solve.badPtr
L.69:
#	movq %rax,%rax
	movq %r14,%rcx
	addq %r15,%rcx
#	movq %rcx,%rcx
	xorq %rdx,%rdx
	cmpq %rdx,%rcx
	jl QueensOpen.Solve.badSub
L.70:
	movq 8(%rax),%rdx
	cmpq %rdx,%rcx
	jge QueensOpen.Solve.badSub
L.71:
	movq 0(%rax),%rax
	movq $0,0(%rax,%rcx,8)
#	movq %rbx,%rbx
	xorq %rax,%rax
	cmpq %rax,%rbx
	je QueensOpen.Solve.badPtr
L.72:
	movq 24(%rbx),%rcx
#	movq %rcx,%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	je QueensOpen.Solve.badPtr
L.73:
#	movq %rcx,%rcx
	movq $8,%rdx
#	movq %rdx,%rdx
	subq $1,%rdx
	movq %r14,%rax
	addq %rdx,%rax
#	movq %rax,%rax
	subq %r15,%rax
#	movq %rax,%rax
	xorq %rdx,%rdx
	cmpq %rdx,%rax
	jl QueensOpen.Solve.badSub
L.74:
	movq 8(%rcx),%rdx
	cmpq %rdx,%rax
	jge QueensOpen.Solve.badSub
L.75:
	movq 0(%rcx),%rcx
	movq $0,0(%rcx,%rax,8)
	jmp L.33
L.21:
#	returnSink
	movq -8(%rbp),%rbx
	movq -16(%rbp),%r12
	movq -24(%rbp),%r13
	movq -32(%rbp),%r14
	movq -40(%rbp),%r15
	addq $64,%rsp
	popq %rbp
	ret
QueensOpen.Solve.badPtr:
	call badPtr
QueensOpen.Solve.badSub:
	call badSub
END QueensOpen.Solve
PROCEDURE QueensOpen.Print
# Trees:
MOVE(
 TEMP t.79,
 CONST 0),
MOVE(
 TEMP t.80,
 SUB(
  MEM(
   ESEQ(
    MOVE(
     TEMP t.82,
     MEM(
      ESEQ(
       MOVE(
        TEMP t.81,
        TEMP QueensOpen.Print.self),
       BEQ(
        TEMP t.81,
        CONST 0,
        QueensOpen.Print.badPtr, L.77),
       LABEL L.77,
       TEMP t.81), 
      CONST 8, 8, false, false)),
    BEQ(
     TEMP t.82,
     CONST 0,
     QueensOpen.Print.badPtr, L.78),
    LABEL L.78,
    TEMP t.82), 
   CONST 8, 8, false, false),
  CONST 1)),
MOVE(
 TEMP t.83,
 CONST 1),
JUMP(
 NAME L.80),
LABEL L.79,
MOVE(
 TEMP QueensOpen.Print.1.i,
 TEMP t.79),
MOVE(
 TEMP t.84,
 CONST 0),
MOVE(
 TEMP t.85,
 SUB(
  MEM(
   ESEQ(
    MOVE(
     TEMP t.87,
     MEM(
      ESEQ(
       MOVE(
        TEMP t.86,
        TEMP QueensOpen.Print.self),
       BEQ(
        TEMP t.86,
        CONST 0,
        QueensOpen.Print.badPtr, L.82),
       LABEL L.82,
       TEMP t.86), 
      CONST 0, 8, false, false)),
    BEQ(
     TEMP t.87,
     CONST 0,
     QueensOpen.Print.badPtr, L.83),
    LABEL L.83,
    TEMP t.87), 
   CONST 8, 8, false, false),
  CONST 1)),
MOVE(
 TEMP t.88,
 CONST 1),
JUMP(
 NAME L.85),
LABEL L.84,
MOVE(
 TEMP QueensOpen.Print.1.1.j,
 TEMP t.84),
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 32)),
BEQ(
 MEM(
  ESEQ(
   MOVE(
    TEMP t.92,
    ESEQ(
     MOVE(
      TEMP t.90,
      MEM(
       ESEQ(
        MOVE(
         TEMP t.89,
         TEMP QueensOpen.Print.self),
        BEQ(
         TEMP t.89,
         CONST 0,
         QueensOpen.Print.badPtr, L.90),
        LABEL L.90,
        TEMP t.89), 
       CONST 8, 8, false, false)),
     BEQ(
      TEMP t.90,
      CONST 0,
      QueensOpen.Print.badPtr, L.91),
     LABEL L.91,
     TEMP t.90)),
   ADD(
    MEM(
     TEMP t.92, 
     CONST 0, 8, false, false),
    MUL(
     ESEQ(
      MOVE(
       TEMP t.91,
       TEMP QueensOpen.Print.1.i),
      BLT(
       TEMP t.91,
       CONST 0,
       QueensOpen.Print.badSub, L.92),
      LABEL L.92,
      BGE(
       TEMP t.91,
       MEM(
        TEMP t.92, 
        CONST 8, 8, false, false),
       QueensOpen.Print.badSub, L.93),
      LABEL L.93,
      TEMP t.91),
     CONST 8))), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Print.1.1.j,
 L.87, L.88),
LABEL L.87,
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 81)),
JUMP(
 NAME L.89),
LABEL L.88,
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 46)),
LABEL L.89,
MOVE(
 TEMP t.84,
 ADD(
  TEMP t.84,
  TEMP t.88)),
LABEL L.85,
BLE(
 TEMP t.84,
 TEMP t.85,
 L.84, L.86),
LABEL L.86,
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10)),
MOVE(
 TEMP t.79,
 ADD(
  TEMP t.79,
  TEMP t.83)),
LABEL L.80,
BLE(
 TEMP t.79,
 TEMP t.80,
 L.79, L.81),
LABEL L.81,
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10)),
LABEL L.76
# Linearized (trees):
MOVE(
 TEMP t.79,
 CONST 0)
MOVE(
 TEMP t.81,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.81,
 CONST 0,
 QueensOpen.Print.badPtr, L.77)
LABEL L.77
MOVE(
 TEMP t.82,
 MEM(
  TEMP t.81, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.82,
 CONST 0,
 QueensOpen.Print.badPtr, L.78)
LABEL L.78
MOVE(
 TEMP t.80,
 SUB(
  MEM(
   TEMP t.82, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.83,
 CONST 1)
JUMP(
 NAME L.80)
LABEL L.79
MOVE(
 TEMP QueensOpen.Print.1.i,
 TEMP t.79)
MOVE(
 TEMP t.84,
 CONST 0)
MOVE(
 TEMP t.86,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.86,
 CONST 0,
 QueensOpen.Print.badPtr, L.82)
LABEL L.82
MOVE(
 TEMP t.87,
 MEM(
  TEMP t.86, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.87,
 CONST 0,
 QueensOpen.Print.badPtr, L.83)
LABEL L.83
MOVE(
 TEMP t.85,
 SUB(
  MEM(
   TEMP t.87, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.88,
 CONST 1)
JUMP(
 NAME L.85)
LABEL L.84
MOVE(
 TEMP QueensOpen.Print.1.1.j,
 TEMP t.84)
MOVE(
 TEMP t.230,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 32))
EXP(
 TEMP t.230)
MOVE(
 TEMP t.89,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.89,
 CONST 0,
 QueensOpen.Print.badPtr, L.90)
LABEL L.90
MOVE(
 TEMP t.90,
 MEM(
  TEMP t.89, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.90,
 CONST 0,
 QueensOpen.Print.badPtr, L.91)
LABEL L.91
MOVE(
 TEMP t.92,
 TEMP t.90)
MOVE(
 TEMP t.91,
 TEMP QueensOpen.Print.1.i)
BLT(
 TEMP t.91,
 CONST 0,
 QueensOpen.Print.badSub, L.92)
LABEL L.92
BGE(
 TEMP t.91,
 MEM(
  TEMP t.92, 
  CONST 8, 8, false, false),
 QueensOpen.Print.badSub, L.93)
LABEL L.93
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.92, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.91,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Print.1.1.j,
 L.87, L.88)
LABEL L.87
MOVE(
 TEMP t.231,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 81))
EXP(
 TEMP t.231)
JUMP(
 NAME L.89)
LABEL L.88
MOVE(
 TEMP t.232,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 46))
EXP(
 TEMP t.232)
LABEL L.89
MOVE(
 TEMP t.84,
 ADD(
  TEMP t.84,
  TEMP t.88))
LABEL L.85
BLE(
 TEMP t.84,
 TEMP t.85,
 L.84, L.86)
LABEL L.86
MOVE(
 TEMP t.233,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.233)
MOVE(
 TEMP t.79,
 ADD(
  TEMP t.79,
  TEMP t.83))
LABEL L.80
BLE(
 TEMP t.79,
 TEMP t.80,
 L.79, L.81)
LABEL L.81
MOVE(
 TEMP t.234,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.234)
LABEL L.76
# Basic Blocks:
# 0
LABEL L.96
MOVE(
 TEMP t.79,
 CONST 0)
MOVE(
 TEMP t.81,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.81,
 CONST 0,
 QueensOpen.Print.badPtr, L.77)
# 1
LABEL L.77
MOVE(
 TEMP t.82,
 MEM(
  TEMP t.81, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.82,
 CONST 0,
 QueensOpen.Print.badPtr, L.78)
# 2
LABEL L.78
MOVE(
 TEMP t.80,
 SUB(
  MEM(
   TEMP t.82, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.83,
 CONST 1)
JUMP(
 NAME L.80)
# 3
LABEL L.79
MOVE(
 TEMP QueensOpen.Print.1.i,
 TEMP t.79)
MOVE(
 TEMP t.84,
 CONST 0)
MOVE(
 TEMP t.86,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.86,
 CONST 0,
 QueensOpen.Print.badPtr, L.82)
# 4
LABEL L.82
MOVE(
 TEMP t.87,
 MEM(
  TEMP t.86, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.87,
 CONST 0,
 QueensOpen.Print.badPtr, L.83)
# 5
LABEL L.83
MOVE(
 TEMP t.85,
 SUB(
  MEM(
   TEMP t.87, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.88,
 CONST 1)
JUMP(
 NAME L.85)
# 6
LABEL L.84
MOVE(
 TEMP QueensOpen.Print.1.1.j,
 TEMP t.84)
MOVE(
 TEMP t.230,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 32))
EXP(
 TEMP t.230)
MOVE(
 TEMP t.89,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.89,
 CONST 0,
 QueensOpen.Print.badPtr, L.90)
# 7
LABEL L.90
MOVE(
 TEMP t.90,
 MEM(
  TEMP t.89, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.90,
 CONST 0,
 QueensOpen.Print.badPtr, L.91)
# 8
LABEL L.91
MOVE(
 TEMP t.92,
 TEMP t.90)
MOVE(
 TEMP t.91,
 TEMP QueensOpen.Print.1.i)
BLT(
 TEMP t.91,
 CONST 0,
 QueensOpen.Print.badSub, L.92)
# 9
LABEL L.92
BGE(
 TEMP t.91,
 MEM(
  TEMP t.92, 
  CONST 8, 8, false, false),
 QueensOpen.Print.badSub, L.93)
# 10
LABEL L.93
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.92, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.91,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Print.1.1.j,
 L.87, L.88)
# 11
LABEL L.87
MOVE(
 TEMP t.231,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 81))
EXP(
 TEMP t.231)
JUMP(
 NAME L.89)
# 12
LABEL L.88
MOVE(
 TEMP t.232,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 46))
EXP(
 TEMP t.232)
JUMP(
 NAME L.89)
# 13
LABEL L.89
MOVE(
 TEMP t.84,
 ADD(
  TEMP t.84,
  TEMP t.88))
JUMP(
 NAME L.85)
# 14
LABEL L.85
BLE(
 TEMP t.84,
 TEMP t.85,
 L.84, L.86)
# 15
LABEL L.86
MOVE(
 TEMP t.233,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.233)
MOVE(
 TEMP t.79,
 ADD(
  TEMP t.79,
  TEMP t.83))
JUMP(
 NAME L.80)
# 16
LABEL L.80
BLE(
 TEMP t.79,
 TEMP t.80,
 L.79, L.81)
# 17
LABEL L.81
MOVE(
 TEMP t.234,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.234)
JUMP(
 NAME L.76)
# 18
LABEL L.76
# Trace Scheduled:
LABEL L.96
MOVE(
 TEMP t.79,
 CONST 0)
MOVE(
 TEMP t.81,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.81,
 CONST 0,
 QueensOpen.Print.badPtr, L.77)
LABEL L.77
MOVE(
 TEMP t.82,
 MEM(
  TEMP t.81, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.82,
 CONST 0,
 QueensOpen.Print.badPtr, L.78)
LABEL L.78
MOVE(
 TEMP t.80,
 SUB(
  MEM(
   TEMP t.82, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.83,
 CONST 1)
LABEL L.80
BLE(
 TEMP t.79,
 TEMP t.80,
 L.79, L.81)
LABEL L.81
MOVE(
 TEMP t.234,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.234)
JUMP(
 NAME L.76)
LABEL L.79
MOVE(
 TEMP QueensOpen.Print.1.i,
 TEMP t.79)
MOVE(
 TEMP t.84,
 CONST 0)
MOVE(
 TEMP t.86,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.86,
 CONST 0,
 QueensOpen.Print.badPtr, L.82)
LABEL L.82
MOVE(
 TEMP t.87,
 MEM(
  TEMP t.86, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.87,
 CONST 0,
 QueensOpen.Print.badPtr, L.83)
LABEL L.83
MOVE(
 TEMP t.85,
 SUB(
  MEM(
   TEMP t.87, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.88,
 CONST 1)
LABEL L.85
BLE(
 TEMP t.84,
 TEMP t.85,
 L.84, L.86)
LABEL L.86
MOVE(
 TEMP t.233,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.233)
MOVE(
 TEMP t.79,
 ADD(
  TEMP t.79,
  TEMP t.83))
JUMP(
 NAME L.80)
LABEL L.84
MOVE(
 TEMP QueensOpen.Print.1.1.j,
 TEMP t.84)
MOVE(
 TEMP t.230,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 32))
EXP(
 TEMP t.230)
MOVE(
 TEMP t.89,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.89,
 CONST 0,
 QueensOpen.Print.badPtr, L.90)
LABEL L.90
MOVE(
 TEMP t.90,
 MEM(
  TEMP t.89, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.90,
 CONST 0,
 QueensOpen.Print.badPtr, L.91)
LABEL L.91
MOVE(
 TEMP t.92,
 TEMP t.90)
MOVE(
 TEMP t.91,
 TEMP QueensOpen.Print.1.i)
BLT(
 TEMP t.91,
 CONST 0,
 QueensOpen.Print.badSub, L.92)
LABEL L.92
BGE(
 TEMP t.91,
 MEM(
  TEMP t.92, 
  CONST 8, 8, false, false),
 QueensOpen.Print.badSub, L.93)
LABEL L.93
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.92, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.91,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Print.1.1.j,
 L.87, L.88)
LABEL L.88
MOVE(
 TEMP t.232,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 46))
EXP(
 TEMP t.232)
LABEL L.89
MOVE(
 TEMP t.84,
 ADD(
  TEMP t.84,
  TEMP t.88))
JUMP(
 NAME L.85)
LABEL L.87
MOVE(
 TEMP t.231,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 81))
EXP(
 TEMP t.231)
JUMP(
 NAME L.89)
LABEL L.76
# With procedure entry/exit:
MOVE(
 TEMP QueensOpen.Print.self,
 TEMP %rdi)
LABEL L.96
MOVE(
 TEMP t.79,
 CONST 0)
MOVE(
 TEMP t.81,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.81,
 CONST 0,
 QueensOpen.Print.badPtr, L.77)
LABEL L.77
MOVE(
 TEMP t.82,
 MEM(
  TEMP t.81, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.82,
 CONST 0,
 QueensOpen.Print.badPtr, L.78)
LABEL L.78
MOVE(
 TEMP t.80,
 SUB(
  MEM(
   TEMP t.82, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.83,
 CONST 1)
LABEL L.80
BLE(
 TEMP t.79,
 TEMP t.80,
 L.79, L.81)
LABEL L.81
MOVE(
 TEMP t.234,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.234)
JUMP(
 NAME L.76)
LABEL L.79
MOVE(
 TEMP QueensOpen.Print.1.i,
 TEMP t.79)
MOVE(
 TEMP t.84,
 CONST 0)
MOVE(
 TEMP t.86,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.86,
 CONST 0,
 QueensOpen.Print.badPtr, L.82)
LABEL L.82
MOVE(
 TEMP t.87,
 MEM(
  TEMP t.86, 
  CONST 0, 8, false, false))
BEQ(
 TEMP t.87,
 CONST 0,
 QueensOpen.Print.badPtr, L.83)
LABEL L.83
MOVE(
 TEMP t.85,
 SUB(
  MEM(
   TEMP t.87, 
   CONST 8, 8, false, false),
  CONST 1))
MOVE(
 TEMP t.88,
 CONST 1)
LABEL L.85
BLE(
 TEMP t.84,
 TEMP t.85,
 L.84, L.86)
LABEL L.86
MOVE(
 TEMP t.233,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.233)
MOVE(
 TEMP t.79,
 ADD(
  TEMP t.79,
  TEMP t.83))
JUMP(
 NAME L.80)
LABEL L.84
MOVE(
 TEMP QueensOpen.Print.1.1.j,
 TEMP t.84)
MOVE(
 TEMP t.230,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 32))
EXP(
 TEMP t.230)
MOVE(
 TEMP t.89,
 TEMP QueensOpen.Print.self)
BEQ(
 TEMP t.89,
 CONST 0,
 QueensOpen.Print.badPtr, L.90)
LABEL L.90
MOVE(
 TEMP t.90,
 MEM(
  TEMP t.89, 
  CONST 8, 8, false, false))
BEQ(
 TEMP t.90,
 CONST 0,
 QueensOpen.Print.badPtr, L.91)
LABEL L.91
MOVE(
 TEMP t.92,
 TEMP t.90)
MOVE(
 TEMP t.91,
 TEMP QueensOpen.Print.1.i)
BLT(
 TEMP t.91,
 CONST 0,
 QueensOpen.Print.badSub, L.92)
LABEL L.92
BGE(
 TEMP t.91,
 MEM(
  TEMP t.92, 
  CONST 8, 8, false, false),
 QueensOpen.Print.badSub, L.93)
LABEL L.93
BEQ(
 MEM(
  ADD(
   MEM(
    TEMP t.92, 
    CONST 0, 8, false, false),
   MUL(
    TEMP t.91,
    CONST 8)), 
  CONST 0, 8, true, false),
 TEMP QueensOpen.Print.1.1.j,
 L.87, L.88)
LABEL L.88
MOVE(
 TEMP t.232,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 46))
EXP(
 TEMP t.232)
LABEL L.89
MOVE(
 TEMP t.84,
 ADD(
  TEMP t.84,
  TEMP t.88))
JUMP(
 NAME L.85)
LABEL L.87
MOVE(
 TEMP t.231,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 81))
EXP(
 TEMP t.231)
JUMP(
 NAME L.89)
LABEL L.76
# Instructions:
	movq %rdi,QueensOpen.Print.self	# QueensOpen.Print.self := %rdi 
L.96:	# <- 
	xorq t.79,t.79	# t.79 <- 
	movq QueensOpen.Print.self,t.81	# t.81 := QueensOpen.Print.self 
	xorq t.235,t.235	# t.235 <- 
	cmpq t.235,t.81	# <- t.81 t.235 
	je QueensOpen.Print.badPtr	# <- : goto QueensOpen.Print.badPtr L.77 
L.77:	# <- 
	movq 8(t.81),t.236	# t.236 <- t.81 
	movq t.236,t.82	# t.82 := t.236 
	xorq t.237,t.237	# t.237 <- 
	cmpq t.237,t.82	# <- t.82 t.237 
	je QueensOpen.Print.badPtr	# <- : goto QueensOpen.Print.badPtr L.78 
L.78:	# <- 
	movq 8(t.82),t.238	# t.238 <- t.82 
	movq t.238,t.239	# t.239 := t.238 
	subq $1,t.239	# t.239 <- t.239 
	movq t.239,t.80	# t.80 := t.239 
	movq $1,t.83	# t.83 <- 
L.80:	# <- 
	cmpq t.80,t.79	# <- t.79 t.80 
	jle L.79	# <- : goto L.79 L.81 
L.81:	# <- 
	movq $10,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.234	# t.234 := %rax 
	jmp L.76	# <- : goto L.76 
L.79:	# <- 
	movq t.79,QueensOpen.Print.1.i	# QueensOpen.Print.1.i := t.79 
	xorq t.84,t.84	# t.84 <- 
	movq QueensOpen.Print.self,t.86	# t.86 := QueensOpen.Print.self 
	xorq t.240,t.240	# t.240 <- 
	cmpq t.240,t.86	# <- t.86 t.240 
	je QueensOpen.Print.badPtr	# <- : goto QueensOpen.Print.badPtr L.82 
L.82:	# <- 
	movq 0(t.86),t.241	# t.241 <- t.86 
	movq t.241,t.87	# t.87 := t.241 
	xorq t.242,t.242	# t.242 <- 
	cmpq t.242,t.87	# <- t.87 t.242 
	je QueensOpen.Print.badPtr	# <- : goto QueensOpen.Print.badPtr L.83 
L.83:	# <- 
	movq 8(t.87),t.243	# t.243 <- t.87 
	movq t.243,t.244	# t.244 := t.243 
	subq $1,t.244	# t.244 <- t.244 
	movq t.244,t.85	# t.85 := t.244 
	movq $1,t.88	# t.88 <- 
L.85:	# <- 
	cmpq t.85,t.84	# <- t.84 t.85 
	jle L.84	# <- : goto L.84 L.86 
L.86:	# <- 
	movq $10,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.233	# t.233 := %rax 
	movq t.79,t.245	# t.245 := t.79 
	addq t.83,t.245	# t.245 <- t.83 t.245 
	movq t.245,t.79	# t.79 := t.245 
	jmp L.80	# <- : goto L.80 
L.84:	# <- 
	movq t.84,QueensOpen.Print.1.1.j	# QueensOpen.Print.1.1.j := t.84 
	movq $32,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.230	# t.230 := %rax 
	movq QueensOpen.Print.self,t.89	# t.89 := QueensOpen.Print.self 
	xorq t.246,t.246	# t.246 <- 
	cmpq t.246,t.89	# <- t.89 t.246 
	je QueensOpen.Print.badPtr	# <- : goto QueensOpen.Print.badPtr L.90 
L.90:	# <- 
	movq 8(t.89),t.247	# t.247 <- t.89 
	movq t.247,t.90	# t.90 := t.247 
	xorq t.248,t.248	# t.248 <- 
	cmpq t.248,t.90	# <- t.90 t.248 
	je QueensOpen.Print.badPtr	# <- : goto QueensOpen.Print.badPtr L.91 
L.91:	# <- 
	movq t.90,t.92	# t.92 := t.90 
	movq QueensOpen.Print.1.i,t.91	# t.91 := QueensOpen.Print.1.i 
	xorq t.249,t.249	# t.249 <- 
	cmpq t.249,t.91	# <- t.91 t.249 
	jl QueensOpen.Print.badSub	# <- : goto QueensOpen.Print.badSub L.92 
L.92:	# <- 
	movq 8(t.92),t.250	# t.250 <- t.92 
	cmpq t.250,t.91	# <- t.91 t.250 
	jge QueensOpen.Print.badSub	# <- : goto QueensOpen.Print.badSub L.93 
L.93:	# <- 
	movq 0(t.92),t.251	# t.251 <- t.92 
	movq 0(t.251,t.91,8),t.252	# t.252 <- t.251 t.91 
	cmpq QueensOpen.Print.1.1.j,t.252	# <- t.252 QueensOpen.Print.1.1.j 
	je L.87	# <- : goto L.87 L.88 
L.88:	# <- 
	movq $46,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.232	# t.232 := %rax 
L.89:	# <- 
	movq t.84,t.253	# t.253 := t.84 
	addq t.88,t.253	# t.253 <- t.88 t.253 
	movq t.253,t.84	# t.84 := t.253 
	jmp L.85	# <- : goto L.85 
L.87:	# <- 
	movq $81,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.231	# t.231 := %rax 
	jmp L.89	# <- : goto L.89 
L.76:	# <- 
# Control Flow Graph:
0: QueensOpen.Print.self <- %rdi; goto 1
1: t.79 t.81 t.235 <- QueensOpen.Print.self; goto 2
2: t.236 t.82 t.237 <- t.81; goto 3
3: t.238 t.239 t.80 t.83 <- t.82; goto 4
4: <- t.79 t.80; goto 6 5
5: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.234 <-; goto 19
6: QueensOpen.Print.1.i t.84 t.86 t.240 <- t.79 QueensOpen.Print.self; goto 7
7: t.241 t.87 t.242 <- t.86; goto 8
8: t.243 t.244 t.85 t.88 <- t.87; goto 9
9: <- t.84 t.85; goto 11 10
10: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.233 t.245 t.79 <- t.79 t.83; goto 4
11: QueensOpen.Print.1.1.j %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.230 t.89 t.246 <- t.84 QueensOpen.Print.self; goto 12
12: t.247 t.90 t.248 <- t.89; goto 13
13: t.92 t.91 t.249 <- t.90 QueensOpen.Print.1.i; goto 14
14: t.250 <- t.92 t.91; goto 15
15: t.251 t.252 <- t.92 t.91 QueensOpen.Print.1.1.j; goto 18 16
16: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.232 <-; goto 17
17: t.253 t.84 <- t.84 t.88; goto 9
18: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.231 <-; goto 17
19: <- %rsp %rbp; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
QueensOpen.Print.self: %rsp %rbp t.235 t.79 t.237 t.82 t.236 t.83 t.80 t.239 t.238 t.240 t.84 QueensOpen.Print.1.i t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.245 t.233 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.246 t.230 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.79: t.235 t.81 QueensOpen.Print.self %rsp %rbp t.237 t.82 t.236 t.83 t.80 t.239 t.238 t.240 t.86 t.84 t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.233 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.246 t.89 t.230 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.81: t.235 t.79 %rsp %rbp 
t.235: t.81 t.79 QueensOpen.Print.self %rsp %rbp 
t.236: t.79 QueensOpen.Print.self %rsp %rbp 
t.82: t.237 t.79 QueensOpen.Print.self %rsp %rbp 
t.237: t.82 t.79 QueensOpen.Print.self %rsp %rbp 
t.238: t.79 QueensOpen.Print.self %rsp %rbp 
t.239: t.79 QueensOpen.Print.self %rsp %rbp 
t.80: t.83 t.79 QueensOpen.Print.self %rsp %rbp t.240 t.86 t.84 QueensOpen.Print.1.i t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.245 t.233 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.246 t.89 t.230 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.83: t.79 t.80 QueensOpen.Print.self %rsp %rbp t.240 t.86 t.84 QueensOpen.Print.1.i t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.245 t.233 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.246 t.89 t.230 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.234: %rsp %rbp 
QueensOpen.Print.1.i: t.240 t.86 t.84 QueensOpen.Print.self t.83 t.80 %rsp %rbp t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.84: t.240 t.86 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.231 
t.86: t.240 t.84 QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.240: t.86 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.241: t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.87: t.242 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.242: t.87 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.243: t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.244: t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.85: t.88 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.88: t.84 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.233: t.80 QueensOpen.Print.self t.83 %rsp %rbp t.79 
t.245: t.80 QueensOpen.Print.self t.83 %rsp %rbp 
QueensOpen.Print.1.1.j: t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.i t.88 t.85 QueensOpen.Print.self t.79 t.83 t.80 %rsp %rbp t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 
t.230: QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 t.83 t.80 %rsp %rbp 
t.89: t.246 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 t.79 t.83 t.80 %rsp %rbp 
t.246: t.89 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 t.83 t.80 %rsp %rbp 
t.247: QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 t.83 t.80 %rsp %rbp 
t.90: t.248 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 t.83 t.80 %rsp %rbp 
t.248: t.90 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 t.83 t.80 %rsp %rbp 
t.92: t.249 t.91 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp t.250 
t.91: t.249 t.92 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 t.83 t.80 %rsp %rbp t.250 t.251 
t.249: t.92 t.91 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.250: t.92 t.91 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.251: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp QueensOpen.Print.1.1.j t.91 
t.252: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp QueensOpen.Print.1.1.j 
t.232: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.253: t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.88 t.79 t.83 t.80 %rsp %rbp 
t.231: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 t.83 t.80 %rsp %rbp 
t.231 <= %rax
t.253 <= t.84
t.84 <= t.253
t.232 <= %rax
t.92 <= t.90
t.91 <= QueensOpen.Print.1.i
t.90 <= t.247
QueensOpen.Print.1.1.j <= t.84
t.230 <= %rax
t.89 <= QueensOpen.Print.self
t.233 <= %rax
t.245 <= t.79
t.79 <= t.245
t.244 <= t.243
t.85 <= t.244
t.87 <= t.241
QueensOpen.Print.1.i <= t.79
t.86 <= QueensOpen.Print.self
t.234 <= %rax
t.239 <= t.238
t.80 <= t.239
t.82 <= t.236
t.81 <= QueensOpen.Print.self
QueensOpen.Print.self <= %rdi
# Spills:
t.83
t.80
# Instructions (after spilling):
	movq %rdi,QueensOpen.Print.self
L.96:
	xorq t.79,t.79
	movq QueensOpen.Print.self,t.81
	xorq t.235,t.235
	cmpq t.235,t.81
	je QueensOpen.Print.badPtr
L.77:
	movq 8(t.81),t.236
	movq t.236,t.82
	xorq t.237,t.237
	cmpq t.237,t.82
	je QueensOpen.Print.badPtr
L.78:
	movq 8(t.82),t.238
	movq t.238,t.239
	subq $1,t.239
	movq t.239,t.257
	movq t.257,-16(%rbp)
	movq $1,t.254
	movq t.254,-8(%rbp)
L.80:
	movq -16(%rbp),t.259
	movq t.259,t.258
	cmpq t.258,t.79
	jle L.79
L.81:
	movq $10,%rdi
	call putchar
	movq %rax,t.234
	jmp L.76
L.79:
	movq t.79,QueensOpen.Print.1.i
	xorq t.84,t.84
	movq QueensOpen.Print.self,t.86
	xorq t.240,t.240
	cmpq t.240,t.86
	je QueensOpen.Print.badPtr
L.82:
	movq 0(t.86),t.241
	movq t.241,t.87
	xorq t.242,t.242
	cmpq t.242,t.87
	je QueensOpen.Print.badPtr
L.83:
	movq 8(t.87),t.243
	movq t.243,t.244
	subq $1,t.244
	movq t.244,t.85
	movq $1,t.88
L.85:
	cmpq t.85,t.84
	jle L.84
L.86:
	movq $10,%rdi
	call putchar
	movq %rax,t.233
	movq t.79,t.245
	movq -8(%rbp),t.256
	movq t.256,t.255
	addq t.255,t.245
	movq t.245,t.79
	jmp L.80
L.84:
	movq t.84,QueensOpen.Print.1.1.j
	movq $32,%rdi
	call putchar
	movq %rax,t.230
	movq QueensOpen.Print.self,t.89
	xorq t.246,t.246
	cmpq t.246,t.89
	je QueensOpen.Print.badPtr
L.90:
	movq 8(t.89),t.247
	movq t.247,t.90
	xorq t.248,t.248
	cmpq t.248,t.90
	je QueensOpen.Print.badPtr
L.91:
	movq t.90,t.92
	movq QueensOpen.Print.1.i,t.91
	xorq t.249,t.249
	cmpq t.249,t.91
	jl QueensOpen.Print.badSub
L.92:
	movq 8(t.92),t.250
	cmpq t.250,t.91
	jge QueensOpen.Print.badSub
L.93:
	movq 0(t.92),t.251
	movq 0(t.251,t.91,8),t.252
	cmpq QueensOpen.Print.1.1.j,t.252
	je L.87
L.88:
	movq $46,%rdi
	call putchar
	movq %rax,t.232
L.89:
	movq t.84,t.253
	addq t.88,t.253
	movq t.253,t.84
	jmp L.85
L.87:
	movq $81,%rdi
	call putchar
	movq %rax,t.231
	jmp L.89
L.76:
#	returnSink
# Control Flow Graph:
0: QueensOpen.Print.self <- %rdi; goto 1
1: t.79 t.81 t.235 <- QueensOpen.Print.self; goto 2
2: t.236 t.82 t.237 <- t.81; goto 3
3: t.238 t.239 t.257 t.254 <- t.82 %rbp; goto 4
4: t.259 t.258 <- %rbp t.79; goto 6 5
5: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.234 <-; goto 19
6: QueensOpen.Print.1.i t.84 t.86 t.240 <- t.79 QueensOpen.Print.self; goto 7
7: t.241 t.87 t.242 <- t.86; goto 8
8: t.243 t.244 t.85 t.88 <- t.87; goto 9
9: <- t.84 t.85; goto 11 10
10: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.233 t.245 t.256 t.255 t.79 <- t.79 %rbp; goto 4
11: QueensOpen.Print.1.1.j %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.230 t.89 t.246 <- t.84 QueensOpen.Print.self; goto 12
12: t.247 t.90 t.248 <- t.89; goto 13
13: t.92 t.91 t.249 <- t.90 QueensOpen.Print.1.i; goto 14
14: t.250 <- t.92 t.91; goto 15
15: t.251 t.252 <- t.92 t.91 QueensOpen.Print.1.1.j; goto 18 16
16: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.232 <-; goto 17
17: t.253 t.84 <- t.84 t.88; goto 9
18: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.231 <-; goto 17
19: <- %rsp %rbp; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
QueensOpen.Print.self: %rbp %rsp t.235 t.79 t.237 t.82 t.236 t.254 t.257 t.239 t.238 t.258 t.259 t.240 t.84 QueensOpen.Print.1.i t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.245 t.255 t.256 t.233 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.246 t.230 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.79: t.235 t.81 %rbp QueensOpen.Print.self %rsp t.237 t.82 t.236 t.254 t.257 t.239 t.238 t.258 t.259 t.240 t.86 t.84 t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.233 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.246 t.89 t.230 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.81: t.235 %rbp t.79 %rsp 
t.235: t.81 %rbp t.79 QueensOpen.Print.self %rsp 
t.236: %rbp t.79 QueensOpen.Print.self %rsp 
t.82: t.237 %rbp t.79 QueensOpen.Print.self %rsp 
t.237: t.82 %rbp t.79 QueensOpen.Print.self %rsp 
t.238: %rbp t.79 QueensOpen.Print.self %rsp 
t.239: %rbp t.79 QueensOpen.Print.self %rsp 
t.257: %rbp t.79 QueensOpen.Print.self %rsp 
t.254: %rbp t.79 QueensOpen.Print.self %rsp 
t.259: t.79 QueensOpen.Print.self %rbp %rsp 
t.258: t.79 QueensOpen.Print.self %rbp %rsp 
t.234: %rsp %rbp 
QueensOpen.Print.1.i: t.240 t.86 t.84 QueensOpen.Print.self %rbp %rsp t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.84: t.240 t.86 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp t.242 t.87 t.241 t.88 t.85 t.244 t.243 t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.231 
t.86: t.240 t.84 QueensOpen.Print.1.i t.79 %rbp %rsp 
t.240: t.86 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.241: t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.87: t.242 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.242: t.87 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.243: t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.244: t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.85: t.88 t.84 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.88: t.84 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.1.j t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 t.232 t.253 t.231 
t.233: %rbp QueensOpen.Print.self %rsp t.79 
t.245: %rbp QueensOpen.Print.self %rsp t.255 t.256 
t.256: %rbp QueensOpen.Print.self %rsp t.245 
t.255: %rbp QueensOpen.Print.self %rsp t.245 
QueensOpen.Print.1.1.j: t.246 t.89 t.230 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 QueensOpen.Print.1.i t.88 t.85 QueensOpen.Print.self t.79 %rbp %rsp t.248 t.90 t.247 t.249 t.91 t.92 t.250 t.252 t.251 
t.230: QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 %rbp %rsp 
t.89: t.246 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 t.79 %rbp %rsp 
t.246: t.89 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 %rbp %rsp 
t.247: QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 %rbp %rsp 
t.90: t.248 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 %rbp %rsp 
t.248: t.90 QueensOpen.Print.1.i QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 %rbp %rsp 
t.92: t.249 t.91 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp t.250 
t.91: t.249 t.92 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self t.79 %rbp %rsp t.250 t.251 
t.249: t.92 t.91 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.250: t.92 t.91 QueensOpen.Print.1.1.j t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.251: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp QueensOpen.Print.1.1.j t.91 
t.252: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp QueensOpen.Print.1.1.j 
t.232: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.253: t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.88 t.79 %rbp %rsp 
t.231: t.84 t.88 t.85 QueensOpen.Print.self QueensOpen.Print.1.i t.79 %rbp %rsp 
t.231 <= %rax
t.253 <= t.84
t.84 <= t.253
t.232 <= %rax
t.92 <= t.90
t.91 <= QueensOpen.Print.1.i
t.90 <= t.247
QueensOpen.Print.1.1.j <= t.84
t.230 <= %rax
t.89 <= QueensOpen.Print.self
t.233 <= %rax
t.245 <= t.79
t.255 <= t.256
t.79 <= t.245
t.244 <= t.243
t.85 <= t.244
t.87 <= t.241
QueensOpen.Print.1.i <= t.79
t.86 <= QueensOpen.Print.self
t.234 <= %rax
t.258 <= t.259
t.239 <= t.238
t.257 <= t.239
t.82 <= t.236
t.81 <= QueensOpen.Print.self
QueensOpen.Print.self <= %rdi
# Register Allocation:
%rax->%rax
%rbx->%rbx
%rcx->%rcx
%rdx->%rdx
%rsp->%rsp
%rbp->%rbp
%rsi->%rsi
%rdi->%rdi
%r8->%r8
%r9->%r9
%r10->%r10
%r11->%r11
%r12->%r12
%r13->%r13
%r14->%r14
%r15->%r15
QueensOpen.Print.self->%r13
t.79->%rbx
t.81->%rax
t.235->%rcx
t.236->%rax
t.82->%rax
t.237->%rcx
t.238->%rax
t.239->%rax
t.257->%rax
t.254->%rax
t.259->%rax
t.258->%rax
t.234->%rax
QueensOpen.Print.1.i->%rbx
t.84->%r12
t.86->%rax
t.240->%rcx
t.241->%rax
t.87->%rax
t.242->%rcx
t.243->%rax
t.244->%rax
t.85->%r15
t.88->%r14
t.233->%rax
t.245->%rax
t.256->%rbx
t.255->%rbx
QueensOpen.Print.1.1.j->%r12
t.230->%rax
t.89->%rax
t.246->%rcx
t.247->%rcx
t.90->%rcx
t.248->%rax
t.92->%rcx
t.91->%rax
t.249->%rdx
t.250->%rdx
t.251->%rcx
t.252->%rax
t.232->%rax
t.253->%rax
t.231->%rax
# Assembly code:
	.text
QueensOpen.Print:
	pushq %rbp
	movq %rsp,%rbp
	subq $64,%rsp
	movq %r15, -56(%rbp)
	movq %r14, -48(%rbp)
	movq %r13, -40(%rbp)
	movq %r12, -32(%rbp)
	movq %rbx, -24(%rbp)
	movq %rdi,%r13
L.96:
	xorq %rbx,%rbx
	movq %r13,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Print.badPtr
L.77:
	movq 8(%rax),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Print.badPtr
L.78:
	movq 8(%rax),%rax
#	movq %rax,%rax
	subq $1,%rax
#	movq %rax,%rax
	movq %rax,-16(%rbp)
	movq $1,%rax
	movq %rax,-8(%rbp)
L.80:
	movq -16(%rbp),%rax
#	movq %rax,%rax
	cmpq %rax,%rbx
	jle L.79
L.81:
	movq $10,%rdi
	call putchar
#	movq %rax,%rax
	jmp L.76
L.79:
#	movq %rbx,%rbx
	xorq %r12,%r12
	movq %r13,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Print.badPtr
L.82:
	movq 0(%rax),%rax
#	movq %rax,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Print.badPtr
L.83:
	movq 8(%rax),%rax
#	movq %rax,%rax
	subq $1,%rax
	movq %rax,%r15
	movq $1,%r14
L.85:
	cmpq %r15,%r12
	jle L.84
L.86:
	movq $10,%rdi
	call putchar
#	movq %rax,%rax
	movq %rbx,%rax
	movq -8(%rbp),%rbx
#	movq %rbx,%rbx
	addq %rbx,%rax
	movq %rax,%rbx
	jmp L.80
L.84:
#	movq %r12,%r12
	movq $32,%rdi
	call putchar
#	movq %rax,%rax
	movq %r13,%rax
	xorq %rcx,%rcx
	cmpq %rcx,%rax
	je QueensOpen.Print.badPtr
L.90:
	movq 8(%rax),%rcx
#	movq %rcx,%rcx
	xorq %rax,%rax
	cmpq %rax,%rcx
	je QueensOpen.Print.badPtr
L.91:
#	movq %rcx,%rcx
	movq %rbx,%rax
	xorq %rdx,%rdx
	cmpq %rdx,%rax
	jl QueensOpen.Print.badSub
L.92:
	movq 8(%rcx),%rdx
	cmpq %rdx,%rax
	jge QueensOpen.Print.badSub
L.93:
	movq 0(%rcx),%rcx
	movq 0(%rcx,%rax,8),%rax
	cmpq %r12,%rax
	je L.87
L.88:
	movq $46,%rdi
	call putchar
#	movq %rax,%rax
L.89:
	movq %r12,%rax
	addq %r14,%rax
	movq %rax,%r12
	jmp L.85
L.87:
	movq $81,%rdi
	call putchar
#	movq %rax,%rax
	jmp L.89
L.76:
#	returnSink
	movq -24(%rbp),%rbx
	movq -32(%rbp),%r12
	movq -40(%rbp),%r13
	movq -48(%rbp),%r14
	movq -56(%rbp),%r15
	addq $64,%rsp
	popq %rbp
	ret
QueensOpen.Print.badPtr:
	call badPtr
QueensOpen.Print.badSub:
	call badSub
END QueensOpen.Print
PROCEDURE QueensOpen
# Trees:
EXP(
 CALL(
  ESEQ(
   MOVE(
    TEMP t.95,
    CALL(
     ESEQ(
      MOVE(
       TEMP t.94,
       ESEQ(
        MOVE(
         TEMP t.93,
         CALL(
          NAME malloc,
          CONST 0,
          CONST 40)),
        MOVE(
         TEMP t.93,
         ADD(
          TEMP t.93,
          CONST 8)),
        MOVE(
         MEM(
          TEMP t.93, 
          CONST -8, 8, false, false),
         NAME QueensOpen.Queens),
        MOVE(
         MEM(
          TEMP t.93, 
          CONST 0, 8, false, false),
         CONST 0),
        MOVE(
         MEM(
          TEMP t.93, 
          CONST 8, 8, false, false),
         CONST 0),
        MOVE(
         MEM(
          TEMP t.93, 
          CONST 16, 8, false, false),
         CONST 0),
        MOVE(
         MEM(
          TEMP t.93, 
          CONST 24, 8, false, false),
         CONST 0),
        TEMP t.93)),
      MEM(
       MEM(
        TEMP t.94, 
        CONST -8, 8, false, false), 
       CONST 0, 8, false, false)),
     CONST 0,
     TEMP t.94)),
   MEM(
    MEM(
     TEMP t.95, 
     CONST -8, 8, false, false), 
    CONST 8, 8, false, false)),
  CONST 0,
  TEMP t.95,
  CONST 0))
# Linearized (trees):
MOVE(
 TEMP t.93,
 CALL(
  NAME malloc,
  CONST 0,
  CONST 40))
MOVE(
 TEMP t.93,
 ADD(
  TEMP t.93,
  CONST 8))
MOVE(
 MEM(
  TEMP t.93, 
  CONST -8, 8, false, false),
 NAME QueensOpen.Queens)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 0, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 8, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 16, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 24, 8, false, false),
 CONST 0)
MOVE(
 TEMP t.94,
 TEMP t.93)
MOVE(
 TEMP t.95,
 CALL(
  MEM(
   MEM(
    TEMP t.94, 
    CONST -8, 8, false, false), 
   CONST 0, 8, false, false),
  CONST 0,
  TEMP t.94))
MOVE(
 TEMP t.260,
 CALL(
  MEM(
   MEM(
    TEMP t.95, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP t.95,
  CONST 0))
EXP(
 TEMP t.260)
# Basic Blocks:
# 0
LABEL L.97
MOVE(
 TEMP t.93,
 CALL(
  NAME malloc,
  CONST 0,
  CONST 40))
MOVE(
 TEMP t.93,
 ADD(
  TEMP t.93,
  CONST 8))
MOVE(
 MEM(
  TEMP t.93, 
  CONST -8, 8, false, false),
 NAME QueensOpen.Queens)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 0, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 8, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 16, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 24, 8, false, false),
 CONST 0)
MOVE(
 TEMP t.94,
 TEMP t.93)
MOVE(
 TEMP t.95,
 CALL(
  MEM(
   MEM(
    TEMP t.94, 
    CONST -8, 8, false, false), 
   CONST 0, 8, false, false),
  CONST 0,
  TEMP t.94))
MOVE(
 TEMP t.260,
 CALL(
  MEM(
   MEM(
    TEMP t.95, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP t.95,
  CONST 0))
EXP(
 TEMP t.260)
# Trace Scheduled:
LABEL L.97
MOVE(
 TEMP t.93,
 CALL(
  NAME malloc,
  CONST 0,
  CONST 40))
MOVE(
 TEMP t.93,
 ADD(
  TEMP t.93,
  CONST 8))
MOVE(
 MEM(
  TEMP t.93, 
  CONST -8, 8, false, false),
 NAME QueensOpen.Queens)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 0, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 8, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 16, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 24, 8, false, false),
 CONST 0)
MOVE(
 TEMP t.94,
 TEMP t.93)
MOVE(
 TEMP t.95,
 CALL(
  MEM(
   MEM(
    TEMP t.94, 
    CONST -8, 8, false, false), 
   CONST 0, 8, false, false),
  CONST 0,
  TEMP t.94))
MOVE(
 TEMP t.260,
 CALL(
  MEM(
   MEM(
    TEMP t.95, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP t.95,
  CONST 0))
EXP(
 TEMP t.260)
# With procedure entry/exit:
LABEL L.97
MOVE(
 TEMP t.93,
 CALL(
  NAME malloc,
  CONST 0,
  CONST 40))
MOVE(
 TEMP t.93,
 ADD(
  TEMP t.93,
  CONST 8))
MOVE(
 MEM(
  TEMP t.93, 
  CONST -8, 8, false, false),
 NAME QueensOpen.Queens)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 0, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 8, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 16, 8, false, false),
 CONST 0)
MOVE(
 MEM(
  TEMP t.93, 
  CONST 24, 8, false, false),
 CONST 0)
MOVE(
 TEMP t.94,
 TEMP t.93)
MOVE(
 TEMP t.95,
 CALL(
  MEM(
   MEM(
    TEMP t.94, 
    CONST -8, 8, false, false), 
   CONST 0, 8, false, false),
  CONST 0,
  TEMP t.94))
MOVE(
 TEMP t.260,
 CALL(
  MEM(
   MEM(
    TEMP t.95, 
    CONST -8, 8, false, false), 
   CONST 8, 8, false, false),
  CONST 0,
  TEMP t.95,
  CONST 0))
EXP(
 TEMP t.260)
# Instructions:
L.97:	# <- 
	movq $40,%rdi	# %rdi <- 
	call malloc	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.93	# t.93 := %rax 
	movq t.93,t.261	# t.261 := t.93 
	addq $8,t.261	# t.261 <- t.261 
	movq t.261,t.93	# t.93 := t.261 
	leaq QueensOpen.Queens(%rip),t.262	# t.262 <- 
	movq t.262,-8(t.93)	# <- t.93 t.262 
	movq $0,0(t.93)	# <- t.93 
	movq $0,8(t.93)	# <- t.93 
	movq $0,16(t.93)	# <- t.93 
	movq $0,24(t.93)	# <- t.93 
	movq t.93,t.94	# t.94 := t.93 
	movq -8(t.94),t.263	# t.263 <- t.94 
	movq 0(t.263),t.264	# t.264 <- t.263 
	movq t.94,%rdi	# %rdi := t.94 
	call *t.264	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- t.264 %rdi 
	movq %rax,t.95	# t.95 := %rax 
	movq -8(t.95),t.265	# t.265 <- t.95 
	movq 8(t.265),t.266	# t.266 <- t.265 
	movq t.95,%rdi	# %rdi := t.95 
	xorq %rsi,%rsi	# %rsi <- 
	call *t.266	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- t.266 %rdi %rsi 
	movq %rax,t.260	# t.260 := %rax 
# Control Flow Graph:
0: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.93 t.261 t.262 t.94 t.263 t.264 t.95 t.265 t.266 t.260 <- %rsp %rbp; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
t.93: t.262 %rsp %rbp 
t.261: %rsp %rbp 
t.262: %rsp %rbp t.93 
t.94: t.264 t.263 %rsp %rbp 
t.263: %rsp %rbp t.94 
t.264: %rdi %rsp %rbp t.94 
t.95: t.266 t.265 %rsp %rbp 
t.265: %rsp %rbp t.95 
t.266: %rsi %rdi %rsp %rbp t.95 
t.260: %rsp %rbp 
t.93 <= %rax
t.261 <= t.93
t.93 <= t.261
t.94 <= t.93
%rdi <= t.94
t.95 <= %rax
%rdi <= t.95
t.260 <= %rax
# Register Allocation:
%rax->%rax
%rbx->%rbx
%rcx->%rcx
%rdx->%rdx
%rsp->%rsp
%rbp->%rbp
%rsi->%rsi
%rdi->%rdi
%r8->%r8
%r9->%r9
%r10->%r10
%r11->%r11
%r12->%r12
%r13->%r13
%r14->%r14
%r15->%r15
t.93->%rax
t.261->%rax
t.262->%rbx
t.94->%rax
t.263->%rbx
t.264->%rbx
t.95->%rax
t.265->%rbx
t.266->%rbx
t.260->%rax
# Assembly code:
	.text
QueensOpen:
	pushq %rbp
	movq %rsp,%rbp
	subq $32,%rsp
	movq %rbx, -8(%rbp)
L.97:
	movq $40,%rdi
	call malloc
#	movq %rax,%rax
#	movq %rax,%rax
	addq $8,%rax
#	movq %rax,%rax
	leaq QueensOpen.Queens(%rip),%rbx
	movq %rbx,-8(%rax)
	movq $0,0(%rax)
	movq $0,8(%rax)
	movq $0,16(%rax)
	movq $0,24(%rax)
#	movq %rax,%rax
	movq -8(%rax),%rbx
	movq 0(%rbx),%rbx
	movq %rax,%rdi
	call *%rbx
#	movq %rax,%rax
	movq -8(%rax),%rbx
	movq 8(%rbx),%rbx
	movq %rax,%rdi
	xorq %rsi,%rsi
	call *%rbx
#	movq %rax,%rax
#	returnSink
	movq -8(%rbp),%rbx
	addq $32,%rsp
	popq %rbp
	ret
QueensOpen.badSub:
	call badSub
END QueensOpen
