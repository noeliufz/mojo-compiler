	.data
	.balign 8
SubrangeFields.r:
	.zero 8
PROCEDURE SubrangeFields.println
# Trees:
BLT(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.1, L.2),
LABEL L.1,
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 45)),
MOVE(
 TEMP SubrangeFields.println.i,
 SUB(
  CONST 0,
  TEMP SubrangeFields.println.i)),
LABEL L.2,
BEQ(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.5, L.6),
LABEL L.5,
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 48)),
JUMP(
 NAME L.7),
LABEL L.6,
EXP(
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP %rbp,
  TEMP SubrangeFields.println.i)),
LABEL L.7,
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10)),
LABEL L.0
# Linearized (trees):
BLT(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.1, L.2)
LABEL L.1
MOVE(
 TEMP t.1,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 45))
EXP(
 TEMP t.1)
MOVE(
 TEMP SubrangeFields.println.i,
 SUB(
  CONST 0,
  TEMP SubrangeFields.println.i))
LABEL L.2
BEQ(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.5, L.6)
LABEL L.5
MOVE(
 TEMP t.2,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 48))
EXP(
 TEMP t.2)
JUMP(
 NAME L.7)
LABEL L.6
MOVE(
 TEMP t.3,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP %rbp,
  TEMP SubrangeFields.println.i))
EXP(
 TEMP t.3)
LABEL L.7
MOVE(
 TEMP t.4,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.4)
LABEL L.0
# Basic Blocks:
# 0
LABEL L.11
BLT(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.1, L.2)
# 1
LABEL L.1
MOVE(
 TEMP t.1,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 45))
EXP(
 TEMP t.1)
MOVE(
 TEMP SubrangeFields.println.i,
 SUB(
  CONST 0,
  TEMP SubrangeFields.println.i))
JUMP(
 NAME L.2)
# 2
LABEL L.2
BEQ(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.5, L.6)
# 3
LABEL L.5
MOVE(
 TEMP t.2,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 48))
EXP(
 TEMP t.2)
JUMP(
 NAME L.7)
# 4
LABEL L.6
MOVE(
 TEMP t.3,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP %rbp,
  TEMP SubrangeFields.println.i))
EXP(
 TEMP t.3)
JUMP(
 NAME L.7)
# 5
LABEL L.7
MOVE(
 TEMP t.4,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.4)
JUMP(
 NAME L.0)
# 6
LABEL L.0
# Trace Scheduled:
LABEL L.11
BLT(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.1, L.2)
LABEL L.2
BEQ(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.5, L.6)
LABEL L.6
MOVE(
 TEMP t.3,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP %rbp,
  TEMP SubrangeFields.println.i))
EXP(
 TEMP t.3)
LABEL L.7
MOVE(
 TEMP t.4,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.4)
JUMP(
 NAME L.0)
LABEL L.1
MOVE(
 TEMP t.1,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 45))
EXP(
 TEMP t.1)
MOVE(
 TEMP SubrangeFields.println.i,
 SUB(
  CONST 0,
  TEMP SubrangeFields.println.i))
JUMP(
 NAME L.2)
LABEL L.5
MOVE(
 TEMP t.2,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 48))
EXP(
 TEMP t.2)
JUMP(
 NAME L.7)
LABEL L.0
# With procedure entry/exit:
MOVE(
 TEMP SubrangeFields.println.i,
 TEMP %rdi)
LABEL L.11
BLT(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.1, L.2)
LABEL L.2
BEQ(
 TEMP SubrangeFields.println.i,
 CONST 0,
 L.5, L.6)
LABEL L.6
MOVE(
 TEMP t.3,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP %rbp,
  TEMP SubrangeFields.println.i))
EXP(
 TEMP t.3)
LABEL L.7
MOVE(
 TEMP t.4,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 10))
EXP(
 TEMP t.4)
JUMP(
 NAME L.0)
LABEL L.1
MOVE(
 TEMP t.1,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 45))
EXP(
 TEMP t.1)
MOVE(
 TEMP SubrangeFields.println.i,
 SUB(
  CONST 0,
  TEMP SubrangeFields.println.i))
JUMP(
 NAME L.2)
LABEL L.5
MOVE(
 TEMP t.2,
 CALL(
  NAME putchar,
  CONST 0,
  CONST 48))
EXP(
 TEMP t.2)
JUMP(
 NAME L.7)
LABEL L.0
# Instructions:
	movq %rdi,SubrangeFields.println.i	# SubrangeFields.println.i := %rdi 
L.11:	# <- 
	xorq t.5,t.5	# t.5 <- 
	cmpq t.5,SubrangeFields.println.i	# <- SubrangeFields.println.i t.5 
	jl L.1	# <- : goto L.1 L.2 
L.2:	# <- 
	xorq t.6,t.6	# t.6 <- 
	cmpq t.6,SubrangeFields.println.i	# <- SubrangeFields.println.i t.6 
	je L.5	# <- : goto L.5 L.6 
L.6:	# <- 
	movq %rbp,%r10	# %r10 := %rbp 
	movq SubrangeFields.println.i,%rdi	# %rdi := SubrangeFields.println.i 
	call SubrangeFields.println.1.f	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %r10 %rdi 
	movq %rax,t.3	# t.3 := %rax 
L.7:	# <- 
	movq $10,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.4	# t.4 := %rax 
	jmp L.0	# <- : goto L.0 
L.1:	# <- 
	movq $45,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.1	# t.1 := %rax 
	xorq t.7,t.7	# t.7 <- 
	movq t.7,t.8	# t.8 := t.7 
	subq SubrangeFields.println.i,t.8	# t.8 <- SubrangeFields.println.i t.8 
	movq t.8,SubrangeFields.println.i	# SubrangeFields.println.i := t.8 
	jmp L.2	# <- : goto L.2 
L.5:	# <- 
	movq $48,%rdi	# %rdi <- 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.2	# t.2 := %rax 
	jmp L.7	# <- : goto L.7 
L.0:	# <- 
# Control Flow Graph:
0: SubrangeFields.println.i <- %rdi; goto 1
1: t.5 <- SubrangeFields.println.i; goto 5 2
2: t.6 <- SubrangeFields.println.i; goto 6 3
3: %r10 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r11 t.3 <- %rbp SubrangeFields.println.i; goto 4
4: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.4 <-; goto 7
5: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.1 t.7 t.8 SubrangeFields.println.i <- SubrangeFields.println.i; goto 2
6: %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.2 <-; goto 4
7: <- %rsp %rbp; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
SubrangeFields.println.i: %rsp %rbp t.5 t.6 %r10 t.8 t.7 t.1 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r11 
t.5: SubrangeFields.println.i %rsp %rbp 
t.6: %rsp %rbp SubrangeFields.println.i 
t.3: %rsp %rbp 
t.4: %rsp %rbp 
t.1: %rsp %rbp SubrangeFields.println.i 
t.7: %rsp %rbp SubrangeFields.println.i 
t.8: %rsp %rbp SubrangeFields.println.i 
t.2: %rsp %rbp 
t.2 <= %rax
t.1 <= %rax
t.8 <= t.7
SubrangeFields.println.i <= t.8
t.4 <= %rax
%r10 <= %rbp
%rdi <= SubrangeFields.println.i
t.3 <= %rax
SubrangeFields.println.i <= %rdi
# Register Allocation:
%rax->%rax
%rbx->%rbx
%rcx->%rcx
%rdx->%rdx
%rsp->%rsp
%rbp->%rbp
%rsi->%rsi
%rdi->%rdi
%r8->%r8
%r9->%r9
%r10->%r10
%r11->%r11
%r12->%r12
%r13->%r13
%r14->%r14
%r15->%r15
SubrangeFields.println.i->%rbx
t.5->%rax
t.6->%rax
t.3->%rax
t.4->%rax
t.1->%rax
t.7->%rax
t.8->%rax
t.2->%rax
# Assembly code:
	.text
SubrangeFields.println:
	pushq %rbp
	movq %rsp,%rbp
	subq $16,%rsp
	movq %rbx, -8(%rbp)
	movq %rdi,%rbx
L.11:
	xorq %rax,%rax
	cmpq %rax,%rbx
	jl L.1
L.2:
	xorq %rax,%rax
	cmpq %rax,%rbx
	je L.5
L.6:
	movq %rbp,%r10
	movq %rbx,%rdi
	call SubrangeFields.println.1.f
#	movq %rax,%rax
L.7:
	movq $10,%rdi
	call putchar
#	movq %rax,%rax
	jmp L.0
L.1:
	movq $45,%rdi
	call putchar
#	movq %rax,%rax
	xorq %rax,%rax
#	movq %rax,%rax
	subq %rbx,%rax
	movq %rax,%rbx
	jmp L.2
L.5:
	movq $48,%rdi
	call putchar
#	movq %rax,%rax
	jmp L.7
L.0:
#	returnSink
	movq -8(%rbp),%rbx
	addq $16,%rsp
	popq %rbp
	ret
SubrangeFields.println.badSub:
	call badSub
END SubrangeFields.println
PROCEDURE SubrangeFields.println.1.f
# Trees:
BGT(
 TEMP SubrangeFields.println.1.f.i,
 CONST 0,
 L.9, L.10),
LABEL L.9,
EXP(
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP _link,
  DIV(
   TEMP SubrangeFields.println.1.f.i,
   CONST 10))),
EXP(
 CALL(
  NAME putchar,
  CONST 0,
  ADD(
   SUB(
    TEMP SubrangeFields.println.1.f.i,
    MUL(
     DIV(
      TEMP SubrangeFields.println.1.f.i,
      CONST 10),
     CONST 10)),
   CONST 48))),
LABEL L.10,
LABEL L.8
# Linearized (trees):
BGT(
 TEMP SubrangeFields.println.1.f.i,
 CONST 0,
 L.9, L.10)
LABEL L.9
MOVE(
 TEMP t.9,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP _link,
  DIV(
   TEMP SubrangeFields.println.1.f.i,
   CONST 10)))
EXP(
 TEMP t.9)
MOVE(
 TEMP t.10,
 CALL(
  NAME putchar,
  CONST 0,
  ADD(
   SUB(
    TEMP SubrangeFields.println.1.f.i,
    MUL(
     DIV(
      TEMP SubrangeFields.println.1.f.i,
      CONST 10),
     CONST 10)),
   CONST 48)))
EXP(
 TEMP t.10)
LABEL L.10
LABEL L.8
# Basic Blocks:
# 0
LABEL L.12
BGT(
 TEMP SubrangeFields.println.1.f.i,
 CONST 0,
 L.9, L.10)
# 1
LABEL L.9
MOVE(
 TEMP t.9,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP _link,
  DIV(
   TEMP SubrangeFields.println.1.f.i,
   CONST 10)))
EXP(
 TEMP t.9)
MOVE(
 TEMP t.10,
 CALL(
  NAME putchar,
  CONST 0,
  ADD(
   SUB(
    TEMP SubrangeFields.println.1.f.i,
    MUL(
     DIV(
      TEMP SubrangeFields.println.1.f.i,
      CONST 10),
     CONST 10)),
   CONST 48)))
EXP(
 TEMP t.10)
JUMP(
 NAME L.10)
# 2
LABEL L.10
JUMP(
 NAME L.8)
# 3
LABEL L.8
# Trace Scheduled:
LABEL L.12
BGT(
 TEMP SubrangeFields.println.1.f.i,
 CONST 0,
 L.9, L.10)
LABEL L.10
JUMP(
 NAME L.8)
LABEL L.9
MOVE(
 TEMP t.9,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP _link,
  DIV(
   TEMP SubrangeFields.println.1.f.i,
   CONST 10)))
EXP(
 TEMP t.9)
MOVE(
 TEMP t.10,
 CALL(
  NAME putchar,
  CONST 0,
  ADD(
   SUB(
    TEMP SubrangeFields.println.1.f.i,
    MUL(
     DIV(
      TEMP SubrangeFields.println.1.f.i,
      CONST 10),
     CONST 10)),
   CONST 48)))
EXP(
 TEMP t.10)
JUMP(
 NAME L.10)
LABEL L.8
# With procedure entry/exit:
MOVE(
 TEMP _link,
 TEMP %r10)
MOVE(
 TEMP SubrangeFields.println.1.f.i,
 TEMP %rdi)
LABEL L.12
BGT(
 TEMP SubrangeFields.println.1.f.i,
 CONST 0,
 L.9, L.10)
LABEL L.10
JUMP(
 NAME L.8)
LABEL L.9
MOVE(
 TEMP t.9,
 CALL(
  NAME SubrangeFields.println.1.f,
  TEMP _link,
  DIV(
   TEMP SubrangeFields.println.1.f.i,
   CONST 10)))
EXP(
 TEMP t.9)
MOVE(
 TEMP t.10,
 CALL(
  NAME putchar,
  CONST 0,
  ADD(
   SUB(
    TEMP SubrangeFields.println.1.f.i,
    MUL(
     DIV(
      TEMP SubrangeFields.println.1.f.i,
      CONST 10),
     CONST 10)),
   CONST 48)))
EXP(
 TEMP t.10)
JUMP(
 NAME L.10)
LABEL L.8
# Instructions:
	movq %r10,_link	# _link := %r10 
	movq %rdi,SubrangeFields.println.1.f.i	# SubrangeFields.println.1.f.i := %rdi 
L.12:	# <- 
	xorq t.11,t.11	# t.11 <- 
	cmpq t.11,SubrangeFields.println.1.f.i	# <- SubrangeFields.println.1.f.i t.11 
	jg L.9	# <- : goto L.9 L.10 
L.10:	# <- 
	jmp L.8	# <- : goto L.8 
L.9:	# <- 
	movq _link,%r10	# %r10 := _link 
	movq SubrangeFields.println.1.f.i,%rax	# %rax := SubrangeFields.println.1.f.i 
	cqto	# %rax %rdx <- %rax 
	movq $10,t.12	# t.12 <- 
	idivq t.12	# %rax %rdx <- t.12 %rax %rdx 
	movq %rax,t.13	# t.13 := %rax 
	movq t.13,%rdi	# %rdi := t.13 
	call SubrangeFields.println.1.f	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %r10 %rdi 
	movq %rax,t.9	# t.9 := %rax 
	movq SubrangeFields.println.1.f.i,%rax	# %rax := SubrangeFields.println.1.f.i 
	cqto	# %rax %rdx <- %rax 
	movq $10,t.14	# t.14 <- 
	idivq t.14	# %rax %rdx <- t.14 %rax %rdx 
	movq %rax,t.15	# t.15 := %rax 
	movq t.15,t.16	# t.16 := t.15 
	imulq $10,t.16	# t.16 <- t.16 
	movq SubrangeFields.println.1.f.i,t.17	# t.17 := SubrangeFields.println.1.f.i 
	subq t.16,t.17	# t.17 <- t.16 t.17 
	movq t.17,t.18	# t.18 := t.17 
	addq $48,t.18	# t.18 <- t.18 
	movq t.18,%rdi	# %rdi := t.18 
	call putchar	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.10	# t.10 := %rax 
	jmp L.10	# <- : goto L.10 
L.8:	# <- 
# Control Flow Graph:
0: _link SubrangeFields.println.1.f.i <- %r10 %rdi; goto 1
1: t.11 <- SubrangeFields.println.1.f.i; goto 3 2
2: <-; goto 4
3: %r10 %rax %rdx t.12 t.13 %rdi %rsi %rcx %r8 %r9 %r11 t.9 t.14 t.15 t.16 t.17 t.18 t.10 <- _link SubrangeFields.println.1.f.i; goto 2
4: <- %rsp %rbp; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
_link: SubrangeFields.println.1.f.i %rsp %rbp %rdi t.11 
SubrangeFields.println.1.f.i: _link %rsp %rbp t.11 t.16 t.15 %rax %rdx t.14 t.9 %rdi %rsi %rcx %r8 %r9 %r10 %r11 t.13 t.12 
t.11: _link SubrangeFields.println.1.f.i %rsp %rbp 
t.12: %rsp %rbp SubrangeFields.println.1.f.i %r10 %rax %rdx 
t.13: %rsp %rbp SubrangeFields.println.1.f.i %r10 
t.9: %rsp %rbp SubrangeFields.println.1.f.i 
t.14: %rsp %rbp SubrangeFields.println.1.f.i %rax %rdx 
t.15: %rsp %rbp SubrangeFields.println.1.f.i 
t.16: t.17 %rsp %rbp SubrangeFields.println.1.f.i 
t.17: %rsp %rbp t.16 
t.18: %rsp %rbp 
t.10: %rsp %rbp 
%r10 <= _link
%rax <= SubrangeFields.println.1.f.i
t.13 <= %rax
%rdi <= t.13
t.9 <= %rax
%rax <= SubrangeFields.println.1.f.i
t.15 <= %rax
t.16 <= t.15
t.17 <= SubrangeFields.println.1.f.i
t.18 <= t.17
%rdi <= t.18
t.10 <= %rax
_link <= %r10
SubrangeFields.println.1.f.i <= %rdi
# Register Allocation:
%rax->%rax
%rbx->%rbx
%rcx->%rcx
%rdx->%rdx
%rsp->%rsp
%rbp->%rbp
%rsi->%rsi
%rdi->%rdi
%r8->%r8
%r9->%r9
%r10->%r10
%r11->%r11
%r12->%r12
%r13->%r13
%r14->%r14
%r15->%r15
_link->%rcx
SubrangeFields.println.1.f.i->%rbx
t.11->%rax
t.12->%rcx
t.13->%rax
t.9->%rax
t.14->%rcx
t.15->%rax
t.16->%rcx
t.17->%rax
t.18->%rax
t.10->%rax
# Assembly code:
	.text
SubrangeFields.println.1.f:
	pushq %rbp
	movq %rsp,%rbp
	subq $16,%rsp
	movq %rbx, -8(%rbp)
	movq %r10,%rcx
	movq %rdi,%rbx
L.12:
	xorq %rax,%rax
	cmpq %rax,%rbx
	jg L.9
L.10:
	jmp L.8
L.9:
	movq %rcx,%r10
	movq %rbx,%rax
	cqto
	movq $10,%rcx
	idivq %rcx
#	movq %rax,%rax
	movq %rax,%rdi
	call SubrangeFields.println.1.f
#	movq %rax,%rax
	movq %rbx,%rax
	cqto
	movq $10,%rcx
	idivq %rcx
#	movq %rax,%rax
	movq %rax,%rcx
	imulq $10,%rcx
	movq %rbx,%rax
	subq %rcx,%rax
#	movq %rax,%rax
	addq $48,%rax
	movq %rax,%rdi
	call putchar
#	movq %rax,%rax
	jmp L.10
L.8:
#	returnSink
	movq -8(%rbp),%rbx
	addq $16,%rsp
	popq %rbp
	ret
SubrangeFields.println.1.f.badSub:
	call badSub
END SubrangeFields.println.1.f
PROCEDURE SubrangeFields
# Trees:
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 0, 1, false, false),
 CONST 255),
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 1, 1, true, false),
 CONST -1),
EXP(
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 0, 1, false, false))),
EXP(
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 1, 1, true, false)))
# Linearized (trees):
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 0, 1, false, false),
 CONST 255)
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 1, 1, true, false),
 CONST -1)
MOVE(
 TEMP t.19,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 0, 1, false, false)))
EXP(
 TEMP t.19)
MOVE(
 TEMP t.20,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 1, 1, true, false)))
EXP(
 TEMP t.20)
# Basic Blocks:
# 0
LABEL L.13
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 0, 1, false, false),
 CONST 255)
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 1, 1, true, false),
 CONST -1)
MOVE(
 TEMP t.19,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 0, 1, false, false)))
EXP(
 TEMP t.19)
MOVE(
 TEMP t.20,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 1, 1, true, false)))
EXP(
 TEMP t.20)
# Trace Scheduled:
LABEL L.13
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 0, 1, false, false),
 CONST 255)
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 1, 1, true, false),
 CONST -1)
MOVE(
 TEMP t.19,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 0, 1, false, false)))
EXP(
 TEMP t.19)
MOVE(
 TEMP t.20,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 1, 1, true, false)))
EXP(
 TEMP t.20)
# With procedure entry/exit:
LABEL L.13
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 0, 1, false, false),
 CONST 255)
MOVE(
 MEM(
  NAME SubrangeFields.r, 
  CONST 1, 1, true, false),
 CONST -1)
MOVE(
 TEMP t.19,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 0, 1, false, false)))
EXP(
 TEMP t.19)
MOVE(
 TEMP t.20,
 CALL(
  NAME SubrangeFields.println,
  CONST 0,
  MEM(
   NAME SubrangeFields.r, 
   CONST 1, 1, true, false)))
EXP(
 TEMP t.20)
# Instructions:
L.13:	# <- 
	leaq SubrangeFields.r(%rip),t.21	# t.21 <- 
	movb $255,0(t.21)	# <- t.21 
	leaq SubrangeFields.r(%rip),t.22	# t.22 <- 
	movb $-1,1(t.22)	# <- t.22 
	leaq SubrangeFields.r(%rip),t.23	# t.23 <- 
	movzbq 0(t.23),t.24	# t.24 <- t.23 
	movq t.24,%rdi	# %rdi := t.24 
	call SubrangeFields.println	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.19	# t.19 := %rax 
	leaq SubrangeFields.r(%rip),t.25	# t.25 <- 
	movsbq 1(t.25),t.26	# t.26 <- t.25 
	movq t.26,%rdi	# %rdi := t.26 
	call SubrangeFields.println	# %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 <- %rdi 
	movq %rax,t.20	# t.20 := %rax 
# Control Flow Graph:
0: t.21 t.22 t.23 t.24 %rdi %rsi %rdx %rcx %r8 %r9 %rax %r10 %r11 t.19 t.25 t.26 t.20 <- %rsp %rbp; goto
# Interference Graph:
%rax: 
%rbx: 
%rcx: 
%rdx: 
%rsp: 
%rbp: 
%rsi: 
%rdi: 
%r8: 
%r9: 
%r10: 
%r11: 
%r12: 
%r13: 
%r14: 
%r15: 
t.21: %rsp %rbp 
t.22: %rsp %rbp 
t.23: %rsp %rbp 
t.24: %rsp %rbp 
t.19: %rsp %rbp 
t.25: %rsp %rbp 
t.26: %rsp %rbp 
t.20: %rsp %rbp 
%rdi <= t.24
t.19 <= %rax
%rdi <= t.26
t.20 <= %rax
# Register Allocation:
%rax->%rax
%rbx->%rbx
%rcx->%rcx
%rdx->%rdx
%rsp->%rsp
%rbp->%rbp
%rsi->%rsi
%rdi->%rdi
%r8->%r8
%r9->%r9
%r10->%r10
%r11->%r11
%r12->%r12
%r13->%r13
%r14->%r14
%r15->%r15
t.21->%rax
t.22->%rax
t.23->%rax
t.24->%rax
t.19->%rax
t.25->%rax
t.26->%rax
t.20->%rax
# Assembly code:
	.text
SubrangeFields:
	pushq %rbp
	movq %rsp,%rbp
	subq $16,%rsp
L.13:
	leaq SubrangeFields.r(%rip),%rax
	movb $255,0(%rax)
	leaq SubrangeFields.r(%rip),%rax
	movb $-1,1(%rax)
	leaq SubrangeFields.r(%rip),%rax
	movzbq 0(%rax),%rax
	movq %rax,%rdi
	call SubrangeFields.println
#	movq %rax,%rax
	leaq SubrangeFields.r(%rip),%rax
	movsbq 1(%rax),%rax
	movq %rax,%rdi
	call SubrangeFields.println
#	movq %rax,%rax
#	returnSink
	addq $16,%rsp
	popq %rbp
	ret
SubrangeFields.badSub:
	call badSub
END SubrangeFields
